{"version":3,"file":"static/chunks/pages/swap-fc59ef54c94f59e0.js","mappings":"wKAqBe,SAASA,EAAQC,EAAWC,IACzC,OAAa,EAAGC,WAChB,IAAIC,GAAO,OAAOH,GACdI,GAAS,OAAUH,GACvB,OAAII,MAAMD,GACD,IAAIE,KAAKC,KAEbH,GAILD,EAAKK,QAAQL,EAAKM,UAAYL,GACvBD,GAHEA,I,6FCXI,SAASO,EAAQV,IAC9B,EAAAW,EAAA,GAAa,EAAGT,WAChB,IAAIC,GAAO,EAAAS,EAAA,GAAOZ,GACda,EAAYV,EAAKO,UACrB,OAAOG,ECJM,SAASC,EAAYd,GAElC,OADA,EAAAW,EAAA,GAAa,EAAGT,WACTa,KAAKC,MAAMN,EAAQV,GAAa,O,6FCD1B,SAASiB,EAAYjB,IAClC,OAAa,EAAGE,WAChB,IAAIC,GAAO,OAAOH,GAElB,OADAG,EAAKe,WAAW,EAAG,EAAG,GACff,I,6FCJM,SAASgB,EAAcnB,IACpC,OAAa,EAAGE,WAChB,IAAIC,GAAO,OAAOH,GAElB,OADAG,EAAKiB,WAAW,EAAG,GACZjB,I,6HCHM,SAASkB,EAAUrB,EAAWC,IAC3C,EAAAU,EAAA,GAAa,EAAGT,WAChB,IAAIC,GAAO,EAAAS,EAAA,GAAOZ,GACdI,GAAS,EAAAkB,EAAA,GAAUrB,GACvB,GAAII,MAAMD,GACR,OAAO,IAAIE,KAAKC,KAElB,IAAKH,EAEH,OAAOD,EAET,IAAIoB,EAAapB,EAAKM,UAUlBe,EAAoB,IAAIlB,KAAKH,EAAKO,WACtCc,EAAkBC,SAAStB,EAAKuB,WAAatB,EAAS,EAAG,GACzD,IAAIuB,EAAcH,EAAkBf,UACpC,OAAIc,GAAcI,EAGTH,GASPrB,EAAKyB,YAAYJ,EAAkBK,cAAeL,EAAkBE,WAAYH,GACzEpB,GCrCI,SAAS2B,EAAU9B,EAAWC,IAC3C,EAAAU,EAAA,GAAa,EAAGT,WAChB,IAAIE,GAAS,EAAAkB,EAAA,GAAUrB,GACvB,OAAOoB,EAAUrB,GAAYI,GCoBhB,SAAS2B,EAAI5B,EAAM6B,GAEhC,IADA,EAAArB,EAAA,GAAa,EAAGT,YACX8B,GAAkC,YAAtB,OAAQA,GAAwB,OAAO,IAAI1B,KAAKC,KACjE,IAAI0B,EAAQD,EAASC,OAAQ,EAAAX,EAAA,GAAUU,EAASC,OAAS,EACrDC,EAASF,EAASE,QAAS,EAAAZ,EAAA,GAAUU,EAASE,QAAU,EACxDC,EAAQH,EAASG,OAAQ,EAAAb,EAAA,GAAUU,EAASG,OAAS,EACrDC,EAAOJ,EAASI,MAAO,EAAAd,EAAA,GAAUU,EAASI,MAAQ,EAClDC,EAAQL,EAASK,OAAQ,EAAAf,EAAA,GAAUU,EAASK,OAAS,EACrDC,EAAUN,EAASM,SAAU,EAAAhB,EAAA,GAAUU,EAASM,SAAW,EAC3DC,EAAUP,EAASO,SAAU,EAAAjB,EAAA,GAAUU,EAASO,SAAW,EAG3DC,EAAoBV,EAAU3B,EAAM+B,EAAiB,GAARD,GAG7CQ,GAAkB,EAAAC,EAAA,GAAQF,EAAmBJ,EAAe,EAARD,GAGpDQ,EAAeL,EAAkB,GAARD,EACzBO,EAAeL,EAAyB,GAAfI,EACzBE,EAAyB,IAAfD,EACVE,EAAY,IAAIxC,KAAKmC,EAAgB/B,UAAYmC,GACrD,OAAOC,I,uGC7CM,SAASJ,EAAQ1C,EAAWC,IACzC,OAAa,EAAGC,WAChB,IAAIE,GAAS,OAAUH,GACvB,OAAO,OAAQD,GAAYI,K,wGCHd,SAAS2C,EAAS/C,EAAWC,IAC1C,EAAAU,EAAA,GAAa,EAAGT,WAChB,IAAIE,GAAS,EAAAkB,EAAA,GAAUrB,GACnBmC,EAAgB,EAAThC,EACX,OAAO,EAAAL,EAAA,GAAQC,EAAWoC,GCJb,SAASY,EAAShD,EAAWC,IAC1C,EAAAU,EAAA,GAAa,EAAGT,WAChB,IAAIE,GAAS,EAAAkB,EAAA,GAAUrB,GACvB,OAAO8C,EAAS/C,GAAYI,K,iCCvB9B6C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMC,UAA0BC,MAC5BC,YAAYC,GACRC,MAAM,YAAYD,oBAG1BL,EAAA,QAAkBE,G,mCCNlB,IAAIK,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUf,GAAS,IAAMgB,EAAKL,EAAUM,KAAKjB,IAAW,MAAOkB,GAAKJ,EAAOI,IACpF,SAASC,EAASnB,GAAS,IAAMgB,EAAKL,EAAiB,MAAEX,IAAW,MAAOkB,GAAKJ,EAAOI,IACvF,SAASF,EAAKI,GAJlB,IAAepB,EAIaoB,EAAOC,KAAOR,EAAQO,EAAOpB,QAJ1CA,EAIyDoB,EAAOpB,MAJhDA,aAAiBU,EAAIV,EAAQ,IAAIU,GAAE,SAAUG,GAAWA,EAAQb,OAITsB,KAAKP,EAAWI,GAClGH,GAAML,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKQ,YAGlEO,EAAmBjB,MAAQA,KAAKiB,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExD5B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4B,gBAAkB5B,EAAQ6B,yBAA2B7B,EAAQ8B,iCAAmC9B,EAAQ+B,0BAA4B/B,EAAQgC,aAAU,EAC9J,MAAMC,EAAUR,EAAgB,EAAQ,OAClCS,EAAsBT,EAAgB,EAAQ,QACpDzB,EAAQgC,QAAU,yCAUlBhC,EAAQ+B,0BAT0B,CAACI,EAASC,IAAgB7B,OAAU,OAAQ,OAAQ,GAAQ,YAC1F,MAAM8B,EAAM,GAAGrC,EAAQgC,gBAAgBG,KAAWC,IAE5CE,SADiBL,EAAQM,QAAQC,IAAIH,IACZI,KAC/B,IAAKH,EAAcjC,KACf,MAAM,IAAI6B,EAAoBK,QAAQH,GAE1C,OAAOE,KAYXtC,EAAQ8B,iCATkCY,GAAiBnC,OAAU,OAAQ,OAAQ,GAAQ,YACzF,MAAM8B,EAAM,GAAGrC,EAAQgC,iBAAiBU,IAElCC,SADiBV,EAAQM,QAAQC,IAAIH,IACXI,KAIhC,OAHKE,EAAeC,QAChBD,EAAeC,MAAQ,IAEpBD,KAQX3C,EAAQ6B,yBAL0BgB,GAAUtC,OAAU,OAAQ,OAAQ,GAAQ,YAC1E,MAAM8B,EAAM,GAAGrC,EAAQgC,oBAAoBa,IAE3C,aADuBZ,EAAQM,QAAQC,IAAIH,IAC3BI,QAkBpBzC,EAAQ4B,gBAfiBc,GAAiBnC,OAAU,OAAQ,OAAQ,GAAQ,YACxE,IACI,MACMuC,SADuB,EAAI9C,EAAQ8B,kCAAkCY,IAC1CE,MAC5BG,QAAQ1C,GAASA,EAAK2C,WACtBC,KAAK5C,GAAS6C,OAAO7C,EAAK2C,YAC/B,OAAyB,IAArBF,EAAUK,OACH,EACJL,EAAUM,QAAO,CAACC,EAAeC,IAAkBD,EAAgBC,GAAe,GAAKR,EAAUK,OAE5G,MAAOI,GACCA,aAAepD,OACfqD,QAAQC,MAAM,iEAAiEf,MAAiBa,EAAIG,gB,uBCvD3GC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,QACA,WACE,OAAO,EAAQ,W,kLCGjBC,EAAiC,CACrCC,QAAS,SACTC,UAAU,EACVC,UAAU,SAACC,EAAAA,EAAK,C,SAAC,mBAGNC,EAAe,SAACC,GAC3B,IAAM,GAAqBC,EAAAA,EAAAA,MAAnBC,eACDC,GAAiD,QAAzBC,EAAAA,EAAAA,KAAyB,MAClDC,GAAsBC,EAAAA,EAAAA,IAAWC,EAAAA,GAEvC,OACE,SAACC,EAAAA,GAAM,0BACDR,GAAK,CACTS,QAAS,SAAC1D,G,IAINiD,EAHEE,EACFG,GAAoB,GAEP,QAAbL,EAAAA,EAAMS,eAAO,IAAbT,GAAAA,EAAAA,KAAAA,EAAgBjD,MAGfoD,GAAwB,CAAEP,UAAU,GACpCM,GAAkBR,M,igBCb7B,IAAMgB,EAAgBC,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAMX,Y,OAAQ,EAALC,MAAkBC,OAAOC,QACjB,Y,OAAQ,EAALF,MAAkBC,OAAOE,oBAI5CC,EAA6D,Y,IAAGC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC1E,GAAcC,EAAAA,EAAAA,KAAZpD,QACF,GAAQqD,EAAAA,EAAAA,MAANC,EACFC,EACJvD,GAAWkD,EACPA,EAAWpC,KAAI,SAAC0C,GACd,OAAOC,EAAAA,EAAAA,IAAgBD,EAAUxD,MAEnC,GAEA0D,GAAkDC,EAAAA,EAAAA,MAExD,OACE,SAACC,EAAAA,EAAK,CAACC,MAAOP,EAAE,sBAAuBH,UAAWA,E,UAChD,UAACW,EAAAA,GAAU,CAACC,IAAI,K,UACbR,EAAOzC,KAAI,SAACkD,G,IAKUA,EAJrB,OACEA,GACAN,GACA/F,OAAOsG,KAAKP,GAAmBQ,SAASF,EAAMG,WAC5C,UAACL,EAAAA,GAAU,CAA8CC,IAAI,O,WAC3D,UAACK,EAAAA,GAAO,CAACL,IAAI,MAAMM,MAAM,S,WACvB,SAACC,EAAAA,GAAY,CAACd,SAAUQ,EAAOO,KAAK,UACpC,SAACC,EAAAA,EAAI,C,SAAER,EAAMS,YAEdzE,IACC,SAAC0E,EAAAA,EAAI,CACHC,UAAQ,EACRC,OAAK,EACLC,MAAM,cACNC,MAAMC,EAAAA,EAAAA,GAAoBf,EAAMG,QAAS,UAAWnE,G,SAEnDgE,EAAMG,YAZiB,QAAbH,EAAAA,EAAMG,eAAO,IAAbH,OAAAA,EAAAA,EAAegB,OAAO,sBAmB7C,SAAClB,EAAAA,GAAU,CAACC,IAAI,K,UACd,SAACS,EAAAA,EAAI,C,SACFlB,EACC,8KASC,SAAS2B,EAA0B,G,IAAA,IAAE/B,WAC5C,GAAQG,EAAAA,EAAAA,MAANC,EACD4B,GAAwE,QAAtDC,EAAAA,EAAAA,IAAS,SAAClC,EAAgB,CAACC,WAAYA,KAAe,MAE/E,OACE,SAACP,EAAa,C,UACZ,SAACF,EAAAA,EAAM,CAACb,QAAQ,OAAOc,QAASwC,E,SAC7B5B,EAAE,4C,gHC9EI,SAAS8B,IACtB,IAAMC,GAAMC,EAAAA,EAAAA,KAA8B,SAACC,G,OAAUA,EAAMC,KAAKC,gBAC1DC,ECJO,W,IAENC,EAA0D,EAD3DC,GAAYC,EAAAA,EAAAA,MAClB,OAAiE,QAA1DF,GAAAA,EAAAA,EAAAA,IAAoBC,EAAW,mCAA2B,IAA1DD,GAAkE,QAAlEA,EAAAA,EAA4DzG,cAAM,WAAlEyG,EAAkE,EAAG,GDErDG,GACvB,OAAOC,EAAAA,EAAAA,UAAQ,WACb,GAAIL,GAAkBL,EAAK,OAAOK,EAAeM,IAAIX,KAEpD,CAACK,EAAgBL,M,qFEVf,E,ucAAKY,GAAAA,EACL,IAAL,MADUA,EAEF,OAAR,SAFUA,EAGJ,KAAN,O,CAHUA,IAAAA,EAAU,KAMf,ICCA,EDDMC,EAAkB,CAC7B,EAAGD,EAAWE,IACd,EAAGF,EAAWG,OACd,EAAGH,EAAWG,OACd,EAAGH,EAAWG,OACd,EAAGH,EAAWI,KACd,EAAGJ,EAAWI,MAaVC,EAAe,W,OAAA,iBAAOnC,EAAiBnE,G,iEAC1B,O,EAAMuG,MAAMC,EAAAA,GAAiB,CAC5CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB3C,QAAAA,EACA4C,SAAU/G,O,OAIC,O,EAZE,SAYagH,Q,OAC9B,MAAO,C,EADQ,iB,gBAbW7C,EAAiBnE,G,gCAAxB,GAiBRiH,EAAiB,W,OAAA,iBAAO9C,EAAiBnE,G,IAE5CkH,EAEkEA,EAAhEC,EAAaC,EAAYC,EAAYC,EAWtChG,E,iEAbS,O,sBAAA,C,EAAMgF,EAAanC,EAASnE,I,OAI5C,OAJMkH,EAAU,SAEwDA,EAAAA,EAAQ5G,KAAxE6G,EAAgED,EAAhEC,YAAaC,EAAmDF,EAAnDE,WAAYC,EAAuCH,EAAvCG,WAAYC,EAA2BJ,EAA3BI,uBAEtC,C,EAAA,CACLC,WAAW,EACXpD,QAAAA,EACAnE,QAAAA,EACAwH,UAAWtB,EAAgBmB,GAC3BI,WAAYN,EACZO,UAAWN,EACXO,qBAAsBL,I,OAIxB,OAFOhG,EAAK,SACZD,QAAQC,MAAM,2BAA4BA,GACnC,C,EAAA,CACLiG,WAAW,EACXpD,QAAS,GACTnE,QAAS4H,EAAAA,GAAAA,OACTJ,UAAWtB,EAAgB,GAC3BuB,WAAY,GACZC,UAAW,EACXC,qBAAsB,K,wCAxBSxD,EAAiBnE,G,gCAAxB,G,sBEQ9B,EAzCgD,Y,IAAGwD,EAAQ,EAARA,SAAUqE,EAAa,EAAbA,cACrD,GAAQxE,EAAAA,EAAAA,MAANC,EACAkE,EAAoCK,EAApCL,UAAWG,EAAyBE,EAAzBF,qBAEbG,GAAiB/B,EAAAA,EAAAA,UAAQ,WAC7B,OAAQyB,GACN,KAAKvB,EAAWI,KACd,MAAO,SACT,KAAKJ,EAAWG,OACd,MAAO,UACT,QACE,MAAO,aAEV,CAACoB,IAEJ,OACE,SAACO,EAAAA,EAAO,CAACnG,QAASkG,EAAgBE,KAAK,GAAGC,GAAG,O,UAC3C,UAACC,EAAAA,EAAW,CAACC,MAAI,EAACC,GAAG,Q,UAClB5E,EAASiB,OAAO,IAAEnB,EAAE,mBAAoB,CAAEkE,UAAAA,KAC3C,UAACa,EAAAA,EAAI,CAACJ,GAAG,M,WACP,SAAC3D,EAAAA,GAAY,CAACd,SAAUA,EAAUe,KAAK,OAAO+D,MAAO,CAAEC,YAAa,UACpE,UAACF,EAAAA,EAAI,CAACG,cAAc,S,WAClB,SAAChE,EAAAA,EAAI,CAACiE,SAAS,OAAOC,WAAW,O,SAC9Bf,KAEH,SAACjD,EAAAA,EAAI,CACH+D,SAAS,OACTR,GAAG,MACHG,GAAG,OACHzD,UAAQ,EACRG,KAAK,iE,SAEJxB,EAAE,4B,+GCiFjB,GA3G8C,Y,IAiGvCqF,EAAqB,EAGrBA,EAAsB,EApGoBC,EAAa,EAAbA,cAAeC,EAAc,EAAdA,eACxD,GAAQxF,EAAAA,EAAAA,MAANC,EACF,GAAgBwF,EAAAA,EAAAA,KAAdC,UACFC,GAAWC,EAAAA,GAAAA,IAAaC,EAAAA,IAE2BnD,GAAAA,EAAAA,EAAAA,UAAQ,W,OAAoB,OAAd,QAAc,IAAb6C,EAAAA,EAAyB,KAAI,CAACA,IAA9FzE,EAAiD4B,EAAjD5B,QAAuBnE,EAA0B+F,EAA1B/F,QAC4B+F,GAAAA,EAAAA,EAAAA,UACzD,W,OAAqB,OAAf,QAAe,IAAd8C,EAAAA,EAA0B,KACjC,CAACA,IAFK1E,EAAmD4B,EAAnD5B,QAAwBnE,EAA2B+F,EAA3B/F,QAKSmJ,GAAAA,EAAAA,EAAAA,UAGtC,CACDR,QAAS,GACTS,SAAS,IACT,EANuCD,EAMvC,GANOR,EAAO,EAAPA,QAASS,EAAO,EAAPA,QAAWC,EAAYF,EAMvC,GACIG,GAAgBvD,EAAAA,EAAAA,UAAQ,W,IAKzB4C,EACAK,EAIgDL,EAT7CY,EAAe,GAYrB,OAVEX,GACCA,EAAcY,WACO,QAArBb,EAAAA,EAAQc,UAAa,IAArBd,OAAAA,EAAAA,EAAwBe,MAChB,OAARV,QAAQ,IAARA,GAAwB,QAAxBA,EAAAA,EAAWS,UAAa,IAAxBT,OAAAA,EAAAA,EAA2BU,KAE5BH,EAAa7H,KAAKkH,IAEhBC,GAAmBA,EAAeW,WAAmC,QAAtBb,EAAAA,EAAQgB,UAAc,IAAtBhB,OAAAA,EAAAA,EAAyBiB,KAC1EL,EAAa7H,KAAKmH,GAEbU,IACN,CAACZ,EAASe,EAAcD,EAAcG,EAAeD,EAAef,EAAeC,EAAgBG,IAEhGa,GAAaC,EAAAA,EAAAA,cAAY,WAC7B,IAAMC,EAAkB,W,OAAA,mB,IAChBC,E,iEAAmB,O,EAAMtL,QAAQuL,IACrCX,EAAcxI,KAAI,SAACoJ,GACjB,IAAQ/F,EAAqB+F,EAArB/F,QAASnE,EAAYkK,EAAZlK,QACjB,OAAOiH,EAAe9C,EAASnE,Q,cAH7BgK,EAAmB,SAOzBX,GAAS,SAACc,G,OAAe,kBACpBA,GAAS,CACZf,SAAS,EACTT,QAASyB,MACP,UAAKD,EAAUxB,SACf0B,KAAUC,KAAQN,EAAkB,YAAY,SAACO,G,OAAoBC,KAAMD,EAAiB,oB,6DAb1E,GAkBxBxB,EACEzF,EAAE,iBACFA,EAAE,wDAAyD,CACzDmB,OAAQ6E,EAAcxI,KAAI,SAAC0C,G,OAAaA,EAASiB,UAAQgG,KAAK,QAGlEpB,GAAS,SAACc,G,OAAe,kBACpBA,GAAS,CACZf,SAAS,OAEXW,MACC,CAACT,EAAeP,EAAWzF,IAExBoH,GAAiB3E,EAAAA,EAAAA,UAAQ,W,OAAMqD,GAAoC,IAAzBE,EAActI,SAAc,CAACoI,EAASE,IAGvCqB,GAAAA,EAAAA,EAAAA,IAC7C,sB,WACE,SAACnG,EAAAA,EAAI,C,SACFlB,EACC,2LAGJ,UAAC+E,EAAAA,EAAI,CAACJ,GAAG,M,WACP,SAACzD,EAAAA,EAAI,C,SAAElB,EAAE,iBACT,SAACoB,EAAAA,EAAI,CAAC0D,GAAG,MAAMzD,UAAQ,EAACG,KAAK,4B,SAC1BxB,EAAE,oBAIT,CAAEsH,UAAW,WAdPC,EAAuCF,EAAvCE,UAAWC,EAA4BH,EAA5BG,QAASC,EAAmBJ,EAAnBI,eAiB5B,OACE,sB,WACE,UAAC1C,EAAAA,EAAI,CAAC2C,eAAe,W,WACnB,SAACvI,EAAAA,EAAM,CAACwI,MAAM,KAAK3C,MAAO,CAAE4C,cAAe,aAAerJ,SAAU6I,EAAgBhI,QAASmH,E,SAChFvG,EAAV8F,EAAY,cAAmB,eAEjC2B,GAAkBD,GACnB,SAACzC,EAAAA,EAAI,CAAC8C,IAAKN,E,UACT,SAACO,EAAAA,EAAQ,CAAChD,GAAG,MAAMiD,MAAM,OAAOC,OAAO,OAAOzG,MAAM,qBAGlC,QAArB8D,EAAAA,EAAQc,UAAa,IAArBd,GAAqC,QAArCA,EAAAA,EAAwBe,UAAa,WAArCf,EAAqC,EAAEpB,aACtC,SAACgE,EAAW,CAAC/H,SAAUoF,EAAef,cAAec,EAAQc,GAAcC,MAEtD,QAAtBf,EAAAA,EAAQgB,UAAc,IAAtBhB,GAAuC,QAAvCA,EAAAA,EAAyBiB,UAAc,WAAvCjB,EAAuC,EAAEpB,aACxC,SAACgE,EAAW,CAAC/H,SAAUqF,EAAgBhB,cAAec,EAAQgB,GAAeC,S,+HF7GzE4B,GAAAA,EAAAA,EACI,eAAdC,GAAAA,iBADUD,EAAAA,EAEN,KAAJE,GAAAA,OAFUF,EAAAA,EAGJ,OAANG,GAAAA,S,CAHUH,IAAAA,EAAQ,KAMpB,IAAMC,GAAiB,CAAEG,SAAUJ,EAASC,gB,4HGZtCI,GAAe,SAAC5J,G,OACpB,UAAC6J,GAAAA,GAAG,gBAACC,GAAG,gBAAgBC,QAAQ,aAAgB/J,GAAK,C,WACnD,SAACgK,OAAI,CACHC,OAAO,OACPC,KAAK,UACLC,EAAE,u9CAEJ,UAACC,OAAI,C,WACH,SAACJ,OAAI,CACHF,GAAG,QACHG,OAAO,OACPC,KAAK,OACLC,EAAE,u9CAEJ,SAACE,WAAQ,CAACP,GAAG,a,UACX,SAACQ,MAAG,CAACC,UAAU,qBAqFvB,GA/Ea,Y,IAAG3K,EAAQ,EAARA,SAAaI,GAAK,WAAlBJ,a,OACdA,GACE,SAACgK,IAAY,UAAK5J,KAElB,UAAC6J,GAAAA,GAAG,gBAACC,GAAG,gBAAgBC,QAAQ,aAAgB/J,GAAK,C,WACnD,SAACgK,OAAI,CACHC,OAAO,OACPC,KAAK,UACLC,EAAE,u9CAEJ,UAACC,OAAI,C,WACH,SAACJ,OAAI,CACHF,GAAG,QACHG,OAAO,OACPC,KAAK,OACLC,EAAE,u9CAEJ,SAACE,WAAQ,CAACP,GAAG,a,UACX,SAACQ,MAAG,CAACC,UAAU,iBAGnB,SAACC,IAAC,CAACH,SAAS,mB,UACV,SAACI,SAAM,CACLC,GAAG,KACHC,GAAG,KACHC,EAAE,IACFC,UAAU,oBACVX,KAAK,OACLD,OAAO,UACPa,YAAY,KACZC,gBAAgB,KAChBC,iBAAiB,I,UAEjB,SAACC,UAAO,CACNC,cAAc,oBACdC,OAAO,QACPC,MAAM,4BACNC,YAAY,aACZC,IAAI,cAIV,SAAChB,MAAG,CAACC,UAAU,YACf,SAACgB,mBAAgB,CACfzB,GAAG,cACHoB,cAAc,YACdM,cAAc,MACdC,KAAK,SACLC,KAAK,QACLC,GAAG,UACHL,IAAI,QACJF,MAAM,uBACNC,YAAY,OAEd,SAACE,mBAAgB,CACfzB,GAAG,cACHoB,cAAc,YACdM,cAAc,MACdC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHL,IAAI,OACJF,MAAM,kBACNC,YAAY,OAEd,SAACE,mBAAgB,CACfzB,GAAG,cACHoB,cAAc,YACdM,cAAc,MACdC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHL,IAAI,QACJF,MAAM,kBACNC,YAAY,W,2RCtEpB,IAAMO,IAAyBjL,EAAAA,EAAAA,IAAOyF,EAAAA,GAAK,Y,6BAAZzF,C,MAKF,Y,OAAQ,EAALC,MAAkBC,OAAOgL,cAsDzD,KAnD0BlL,EAAAA,EAAAA,IAAOmL,EAAAA,GAAW,Y,6BAAlBnL,C,MACf,Y,OAAQ,EAALC,MAAkBC,OAAOkL,cAG+B,Y,IACpEnK,EAAK,EAALA,MAIAoK,GAHQ,EAARC,SACmB,EAAnBC,oBACgB,EAAhBC,iBACS,EAATH,WACAI,EAAc,EAAdA,eAEOC,GAAoC,QAAtBC,EAAAA,EAAAA,MAAsB,MAIpCC,GAA6D,QAA/BrJ,EAAAA,GAAAA,IAAS,SAACsJ,GAAAA,EAAiB,KAAI,MAC9DC,GAAgB5E,EAAAA,EAAAA,cAAY,WAAMuE,OAAc,OAAdA,QAAc,IAAdA,OAAAA,EAAAA,MAAoB,CAACA,IAE7D,OACE,UAACR,GAAsB,C,WACrB,UAACxF,EAAAA,EAAI,CAACgD,MAAM,OAAOsD,WAAW,SAAS3D,eAAe,gB,WAMpD,SAAC3C,EAAAA,EAAI,CAACG,cAAc,SAASmG,WAAW,YAAYtD,MAAM,OAAOuD,GAAI,G,UACnE,SAACC,GAAAA,EAAO,CAACC,GAAG,K,SAAMjL,OAEpB,UAACwE,EAAAA,EAAI,C,WACH,SAAC0G,GAAAA,EAAe,CAACC,KAAMV,E,UACrB,SAACW,GAAAA,EAAc,CAACpK,MAAM,aAAa+J,GAAG,IAAIM,KAAMC,GAAAA,EAAAA,oBAElD,SAACpB,EAAAA,EAAU,CAACrL,QAAS8L,EAA4B5M,QAAQ,OAAOqJ,MAAM,K,UACpE,SAACmE,GAAAA,EAAW,CAACvK,MAAM,aAAawG,MAAM,YAExC,SAAC0C,EAAAA,EAAU,CAACnM,QAAQ,OAAOqJ,MAAM,KAAKvI,QAASgM,E,UAC7C,SAACW,GAAW,CAACxN,UAAWoM,EAAWpJ,MAAM,aAAawG,MAAM,kBAIlE,SAAChD,EAAAA,EAAI,CAACsG,WAAW,gB,gGC3ER,SAASW,GAAOC,GAC7B,MAAO,SAASC,KAAKD,G,ICYhB,G,8CAAKE,GAAAA,EAAAA,EACH,QAAPC,GAAAA,UADUD,EAAAA,EAEH,QAAPE,GAAAA,UAFUF,EAAAA,EAGL,MAALG,GAAAA,Q,CAHUH,KAAAA,GAAiB,K,sOCT7B,IAAMI,GAAUjN,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAIVkN,IAAgBlN,EAAAA,EAAAA,IAAOmN,GAAAA,IAAa,Y,6BAApBnN,C,MAmCtB,OA/BA,SAAoC,G,IAKvBoN,EACAA,EAAkB,EAClBA,EACAA,EAAmB,EAHnBA,EACAA,EACAA,EACAA,EARuB,IAAEA,MAC9B,GAAQ3M,EAAAA,EAAAA,MAANC,EAGF2M,EAAc3M,EAAE,uDAAwD,CAC5E4M,QAA6C,QAApCF,EAAK,OAALA,QAAK,IAALA,GAAkB,QAAlBA,EAAAA,EAAOG,mBAAW,IAAlBH,OAAAA,EAAAA,EAAoBI,cAAc,UAAE,IAApCJ,EAAAA,EAAwC,GACjDK,QAA6C,QAApCL,EAAK,OAALA,QAAK,IAALA,GAAkB,QAAlBA,EAAAA,EAAOG,mBAAW,IAAlBH,GAA4B,QAA5BA,EAAAA,EAAoBxM,gBAAQ,WAA5BwM,EAAkB,EAAYvL,cAAM,IAApCuL,EAAAA,EAAwC,GACjDM,QAA8C,QAArCN,EAAK,OAALA,QAAK,IAALA,GAAmB,QAAnBA,EAAAA,EAAOO,oBAAY,IAAnBP,OAAAA,EAAAA,EAAqBI,cAAc,UAAE,IAArCJ,EAAAA,EAAyC,GAClDQ,QAA8C,QAArCR,EAAK,OAALA,QAAK,IAALA,GAAmB,QAAnBA,EAAAA,EAAOO,oBAAY,IAAnBP,GAA6B,QAA7BA,EAAAA,EAAqBxM,gBAAQ,WAA7BwM,EAAmB,EAAYvL,cAAM,IAArCuL,EAAAA,EAAyC,KAGpD,OACE,UAACH,GAAO,C,WACN,SAACC,GAAa,C,UACZ,SAACW,GAAAA,EAAO,OAEV,UAAC3M,GAAAA,GAAU,CAACC,IAAI,OAAO2M,QAAQ,S,WAC7B,SAAClM,EAAAA,EAAI,CAACiE,SAAS,O,SAAQnF,EAAE,+BACzB,SAACQ,GAAAA,GAAU,CAACC,IAAI,OAAO2M,QAAQ,S,UAC7B,SAAClM,EAAAA,EAAI,CAAC2D,MAAI,EAACvD,OAAK,EAAC+L,UAAU,S,SACxBV,OAGL,SAACzL,EAAAA,EAAI,CAACI,OAAK,EAACC,MAAM,aAAa8L,UAAU,S,SACtCrN,EAAE,oD,m3DCpCN,IAAMuM,IAAUjN,EAAAA,EAAAA,IAAOyF,EAAAA,GAAK,Y,6BAAZzF,C,MAOVgO,GAAehO,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAGxB,Y,OAAY,EAATiO,WAECC,EAAAA,EAAAA,IAAG,MAMH,QAGKC,IAAYnO,EAAAA,EAAAA,IAAO4B,EAAAA,GAAK,Y,6BAAZ5B,C,MACd,Y,IAAGC,EAAK,EAALA,MAAOmO,EAAQ,EAARA,S,OACJ,IAAbA,GAA+B,IAAbA,EACdnO,EAAMC,OAAOmO,QACA,IAAbD,EACAnO,EAAMC,OAAOoO,QACA,IAAbF,EACAnO,EAAMC,OAAOC,KACbF,EAAMC,OAAOqO,WAGRC,GAAuBxO,EAAAA,GAAAA,OAAAA,WAAa,C,6BAAbA,C,MAGd,Y,OAAQ,EAALC,MAAkBC,OAAOuO,cAQvC,Y,OAAQ,EAALxO,MAAkBC,OAAOC,QAOf,Y,OAAQ,EAALF,MAAkBC,OAAOwO,YAG5B,Y,OAAQ,EAALzO,MAAkBC,OAAOwO,YAKvCC,IAAgB3O,EAAAA,EAAAA,IAAO4B,EAAAA,GAAMgN,MAAM,CAAEC,UAAU,IAAO,Y,6BAAtC7O,C,MAIvB8O,GAAyB9O,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MACT,Y,IAAGC,EAAK,EAALA,M,MAAY,GAA0B,OAAvBA,EAAMC,OAAO6O,cAQ1C,Y,OAAQ,EAAL9O,MAAkBC,OAAOmO,WASjCW,GAAsChP,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MACtB,Y,IAAGC,EAAK,EAALA,M,MAAY,GAA0B,OAAvBA,EAAMC,OAAO6O,cAU9C,SAASE,GAAkB,G,IAAA,IAAEvQ,MAClC,OACE,UAACoQ,GAAsB,C,WACrB,SAACE,GAAmC,C,UAClC,SAACE,GAAAA,EAAS,CAACzG,MAAM,YAEnB,SAAC0G,IAAC,C,SAAEzQ,OAKH,IAAM0Q,IAAwBpP,EAAAA,EAAAA,IAAOkB,GAAAA,IAAW,Y,6BAAlBlB,C,MACf,Y,IAAGC,EAAK,EAALA,M,MAAY,GAA0B,OAAvBA,EAAMC,OAAOmP,cCnGtC,SAASC,GAAqB,G,IAAA,IAAEC,YAC7C,OACE,SAACpB,GAAS,CAACtI,SAAS,OAAOuI,UAAUoB,EAAAA,GAAAA,IAAgBD,G,SAClDA,EAAeA,EAAYE,SAASC,GAAAA,IAAY,SAAW,GAA0B,OAAvBH,EAAYI,QAAQ,GAAG,KAAM,M,2MCGlG,IAAMC,IAA2B5P,EAAAA,EAAAA,IAAOkB,GAAAA,IAAW,Y,6BAAlBlB,C,MAGd,Y,OAAQ,EAALC,MAAkB4P,MAAMrS,WACxB,Y,OAAQ,EAALyC,MAAkBC,OAAOgL,cAC5B,Y,OAAQ,EAALjL,MAAkBC,OAAOuO,cAInC,SAASqB,GAAgB,G,IA8DtBC,EACAA,EADAA,EACAA,EA9DhB3C,EADsC,EACtCA,MACA2C,EAFsC,EAEtCA,wBACAC,EAHsC,EAGtCA,qBACAC,EAJsC,EAItCA,UACAC,EALsC,EAKtCA,iBACAC,EANsC,EAMtCA,gBASM,GAAQ1P,EAAAA,EAAAA,MAANC,EACgC6F,GAAAA,EAAAA,EAAAA,WAAkB,GAAnD6J,EAAiC7J,EAAwB,GAA3C8J,EAAmB9J,EAAwB,GACfpD,GAAAA,EAAAA,EAAAA,UAAQ,W,OAAMmN,EAAAA,GAAAA,IAA2BlD,KAAQ,CAACA,IAA3FmD,EAAyCpN,EAAzCoN,sBAAuBC,EAAkBrN,EAAlBqN,cACzBpC,GAAWoB,EAAAA,GAAAA,IAAgBe,GAE3BE,EAAkB,GAAgC,QAAhB,IAAZC,GAAAA,IAAiBf,QAAQ,GAAG,KAClDgB,EAAsB,GAAqC,QAAhB,IAAjBC,GAAAA,IAAsBjB,QAAQ,GAAG,KAC3DkB,EAAqB,GAAmC,QAAhB,IAAfC,GAAAA,IAAoBnB,QAAQ,GAAG,KACxDoB,EAAoB,GAAkC,QAAhB,IAAdC,GAAAA,IAAmBrB,QAAQ,GAAG,KAE5D,OACE,sB,WACE,UAACC,GAAwB,C,WACvB,UAACqB,GAAAA,GAAU,CAACxP,MAAM,S,WAChB,SAACG,EAAAA,EAAI,CAACiE,SAAS,O,SAAQnF,EAAE,YACzB,UAACkB,EAAAA,EAAI,CACHiE,SAAS,OACTH,MAAO,CACL0C,eAAgB,SAChB2D,WAAY,SACZmF,QAAS,OACTnD,UAAW,QACXoD,YAAa,Q,WAGdC,EAAAA,GAAAA,IAAqBhE,EAAOgD,IAC7B,SAAC5B,GAAoB,CAAC1O,QAAS,W,OAAMuQ,GAAiBD,I,UACpD,SAACiB,GAAAA,EAAa,CAAC5I,MAAM,kBAK3B,UAACwI,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SACZuH,EAAMmE,YAAcC,EAAAA,GAAAA,YAAwB9Q,EAAE,oBAAsBA,EAAE,mBAEzE,SAAC+Q,GAAAA,EAAc,CACbtR,KAAMO,EACJ,wGAEF8E,GAAG,YAGP,UAAC8L,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SACZuH,EAAMmE,YAAcC,EAAAA,GAAAA,YACsC,QAAvDzB,EAAqC,QAArCA,EAAAA,EAAwB2B,EAAAA,GAAAA,eAAa,IAArC3B,OAAAA,EAAAA,EAAuCvC,cAAc,UAAE,IAAvDuC,EAAAA,EAA2D,IACL,QAAtDA,EAAoC,QAApCA,EAAAA,EAAwB2B,EAAAA,GAAAA,cAAY,IAApC3B,OAAAA,EAAAA,EAAsCvC,cAAc,UAAE,IAAtDuC,EAAAA,EAA0D,OAEhE,SAACnO,EAAAA,EAAI,CAACiE,SAAS,OAAO8L,WAAW,M,SAC9BvE,EAAMmE,YAAcC,EAAAA,GAAAA,YACjBpE,EAAMO,aAAa/M,SAASiB,OAC5BuL,EAAMG,YAAY3M,SAASiB,gBAIrC,UAACoP,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SAAQnF,EAAE,mBACzB,SAAC+Q,GAAAA,EAAc,CACbtR,KAAMO,EAAE,6EACR8E,GAAG,YAGP,SAAC8J,GAAoB,CAACC,YAAagB,QAErC,UAACU,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SAAQnF,EAAE,6BACzB,SAAC+Q,GAAAA,EAAc,CACbtR,MACE,sB,WACE,SAACyB,EAAAA,EAAI,CAACgQ,GAAG,O,SAAQlR,EAAE,wCAAyC,CAAExI,OAAQuY,OACtE,UAAC7O,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,+BAAgC,CAAExI,OAAQyY,QACrD,UAAC/O,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,2BAA4B,CAAExI,OAAQ2Y,QACjD,UAACjP,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,yCAA0C,CAAExI,OAAQ6Y,UAGnEvL,GAAG,YAGP,SAAC5D,EAAAA,EAAI,CAACiE,SAAS,O,SACZ2K,EAAgB,GAAsCpD,OAAtB,OAAboD,QAAa,IAAbA,OAAAA,EAAAA,EAAehD,cAAc,GAAG,KAAqC,OAAlCJ,EAAMG,YAAY3M,SAASiB,QAAW,aAKnG,UAACL,GAAAA,GAAO,C,WACN,SAAC3B,EAAAA,EAAM,CACLb,QAASoP,EAAW,EAAI,SAAW,UACnCtO,QAASmQ,EACThR,SAAUkR,EACV9K,GAAG,OACH8D,GAAG,uBACHV,MAAM,O,SAEL2F,EAAW,GAAMhB,EAAMmE,YAAcC,EAAAA,GAAAA,eAA2BxB,EAC7DtP,EAAE,eACFA,EAAE,kBAGPwP,GAAmB,SAACjB,GAAiB,CAACvQ,MAAOwR,IAAuB,WChI9D,SAAS2B,GAAgB,G,IA+BhC9B,EACAA,EA/BN3C,EADsC,EACtCA,MACA2C,EAFsC,EAEtCA,wBACAC,EAHsC,EAGtCA,qBACA8B,EAJsC,EAItCA,UACAC,EALsC,EAKtCA,kBACAC,EANsC,EAMtCA,gBACAC,EAPsC,EAOtCA,gBAUM,GAAQxR,EAAAA,EAAAA,MAANC,EAEF,GAA4ByC,EAAAA,EAAAA,UAAQ,W,OAAMmN,EAAAA,GAAAA,IAA2BlD,KAAQ,CAACA,IAA5EmD,sBACF2B,GAAsB1C,EAAAA,GAAAA,IAAgBe,GAEtC4B,EACJJ,GAAqB3E,EAAMmE,YAAcC,EAAAA,GAAAA,cAA0BxB,EAC/D,UACA5C,EAAMmE,YAAcC,EAAAA,GAAAA,cAA2BxB,EAE/C,OADA,UAGA9X,EACJkV,EAAMmE,YAAcC,EAAAA,GAAAA,YACqB,QAArCzB,EAAAA,EAAwB2B,EAAAA,GAAAA,eAAa,IAArC3B,OAAAA,EAAAA,EAAuCvC,cAAc,GACjB,QAApCuC,EAAAA,EAAwB2B,EAAAA,GAAAA,cAAY,IAApC3B,OAAAA,EAAAA,EAAsCvC,cAAc,GACpD3L,EACJuL,EAAMmE,YAAcC,EAAAA,GAAAA,YAAwBpE,EAAMO,aAAa/M,SAASiB,OAASuL,EAAMG,YAAY3M,SAASiB,OAExGuQ,EACJhF,EAAMmE,YAAcC,EAAAA,GAAAA,YAChB9Q,EAAE,kFACFA,EAAE,6EAEuC0R,GAA0C,OAA1CA,EAAcC,MAAM,GAAaxQ,OAAV3J,EAAO,KAAU,OAAP2J,IAAS,GAAlFyQ,EAAwCF,EAA0C,GAAnEG,EAAyBH,EAA0C,GAEnFI,EAAqBV,GAAYW,EAAAA,GAAAA,GAAaX,GAAa,GAE3DY,EAAoBhS,EAAE,qCAAsC,CAChEoR,UAAWU,IAGiCE,GAA2C,OAA3CA,EAAkBL,MAAMG,GAAmB,GAAlFG,EAAuCD,EAA2C,GAA7DE,EAAkBF,EAA2C,GAEzF,OACE,UAACxR,GAAAA,GAAU,CAACC,IAAI,K,WACd,UAAC8P,GAAAA,GAAU,CAACxP,MAAM,W,WAChB,UAAC6P,GAAAA,GAAQ,CAACnQ,IAAI,M,WACZ,SAACO,EAAAA,GAAY,CAACd,SAAUwM,EAAMG,YAAY3M,SAAUe,KAAK,OAAO+D,MAAO,CAAEC,YAAa,WACtF,SAACgJ,GAAa,CAAC9I,SAAS,OAAO5D,MAAOkQ,E,SACnC/E,EAAMG,YAAYC,cAAc,SAGrC,SAAC8D,GAAAA,GAAQ,CAACnQ,IAAI,M,UACZ,SAACS,EAAAA,EAAI,CAACiE,SAAS,OAAOL,GAAG,O,SACtB4H,EAAMG,YAAY3M,SAASiB,eAIlC,SAACyP,GAAAA,GAAQ,C,UACP,SAACuB,EAAAA,EAAa,CAACpK,MAAM,OAAOjD,GAAG,WAEjC,UAACyL,GAAAA,GAAU,CAACxP,MAAM,W,WAChB,UAAC6P,GAAAA,GAAQ,CAACnQ,IAAI,M,WACZ,SAACO,EAAAA,GAAY,CAACd,SAAUwM,EAAMO,aAAa/M,SAAUe,KAAK,UAC1D,SAACgN,GAAa,CACZ9I,SAAS,OACT5D,MACEiQ,EAAsB,EAClB,UACAH,GAAqB3E,EAAMmE,YAAcC,EAAAA,GAAAA,YACzC,UACA,O,SAGLpE,EAAMO,aAAaH,cAAc,SAGtC,SAAC8D,GAAAA,GAAQ,C,UACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,OAAOL,GAAG,O,SACtB4H,EAAMO,aAAa/M,SAASiB,cAIlCkQ,GACC,SAAC3C,GAAqB,CAACtB,QAAQ,aAAa3M,IAAI,M,UAC9C,UAAC8P,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAACpC,GAAAA,EAAS,CAAClD,GAAG,SACd,UAACpK,EAAAA,EAAI,CAAC2D,MAAI,E,UAAC,IAAE7E,EAAE,wBAEjB,SAACb,EAAAA,EAAM,CAACC,QAASkS,E,SAAkBtR,EAAE,iBAGvC,MACJ,UAACQ,GAAAA,GAAU,CAAC4M,QAAQ,aAAa3M,IAAI,KAAKuE,MAAO,CAAEoN,QAAS,gB,WAC1D,UAACxB,GAAAA,GAAQ,CAAC5L,MAAO,CAAE+C,MAAO,Q,WACxB,SAAC7G,EAAAA,EAAI,CAACK,MAAM,YAAYsD,MAAI,EAAC+C,cAAc,Y,SACxC5H,EAAE,yBAEL,SAACkB,EAAAA,EAAI,CAAC2D,MAAI,EAACtD,MAAM,UAAUuD,GAAG,OAAOuI,UAAU,M,SAC5C,GAAyB,OAAtBkE,EAAkB,IAAI,UAG7B7E,EAAMmE,YAAcC,EAAAA,GAAAA,eAA2BxB,IAC9C,SAACpO,EAAAA,EAAI,CAACI,OAAK,EAACC,MAAM,UAAU8L,UAAU,OAAOrI,MAAO,CAAE+C,MAAO,Q,SAC1D/H,EAAE,mEAGP,UAACkB,EAAAA,EAAI,CAACI,OAAK,EAACC,MAAM,aAAa8L,UAAU,OAAOrI,MAAO,CAAE+C,MAAO,Q,UAC7D6J,EACAC,QAGU,OAAdT,GACC,SAAC5Q,GAAAA,GAAU,CAAC4M,QAAQ,aAAa3M,IAAI,KAAKuE,MAAO,CAAEoN,QAAS,gB,UAC1D,UAAClR,EAAAA,EAAI,CAACK,MAAM,a,UACT0Q,GACD,SAACI,IAAC,CAAC9R,MAAO6Q,E,SAAYU,IACrBI,OAGH,QClIK,SAASI,GAAsB,G,IA4BtCjD,EACAA,EA5BN3C,EAD4C,EAC5CA,MACA2C,EAF4C,EAE5CA,wBACAC,EAH4C,EAG5CA,qBACA8B,EAJ4C,EAI5CA,UACAC,EAL4C,EAK5CA,kBACAC,EAN4C,EAM5CA,gBACAC,EAP4C,EAO5CA,gBAUM,GAAQxR,EAAAA,EAAAA,MAANC,EAEFyR,EACJJ,GAAqB3E,EAAMmE,YAAcC,EAAAA,GAAAA,cAA0BxB,EAC/D,UACA5C,EAAMmE,YAAcC,EAAAA,GAAAA,cAA2BxB,EAE/C,OADA,UAGA9X,EACJkV,EAAMmE,YAAcC,EAAAA,GAAAA,YACqB,QAArCzB,EAAAA,EAAwB2B,EAAAA,GAAAA,eAAa,IAArC3B,OAAAA,EAAAA,EAAuCvC,cAAc,GACjB,QAApCuC,EAAAA,EAAwB2B,EAAAA,GAAAA,cAAY,IAApC3B,OAAAA,EAAAA,EAAsCvC,cAAc,GACpD3L,EACJuL,EAAMmE,YAAcC,EAAAA,GAAAA,YAAwBpE,EAAMO,aAAa/M,SAASiB,OAASuL,EAAMG,YAAY3M,SAASiB,OAExGuQ,EACJhF,EAAMmE,YAAcC,EAAAA,GAAAA,YAChB9Q,EAAE,kFACFA,EAAE,6EAEuC0R,GAA0C,OAA1CA,EAAcC,MAAM,GAAaxQ,OAAV3J,EAAO,KAAU,OAAP2J,IAAS,GAAlFyQ,EAAwCF,EAA0C,GAAnEG,EAAyBH,EAA0C,GAEnFI,EAAqBV,GAAYW,EAAAA,GAAAA,GAAaX,GAAa,GAE3DY,EAAoBhS,EAAE,qCAAsC,CAChEoR,UAAWU,IAGiCE,GAA2C,OAA3CA,EAAkBL,MAAMG,GAAmB,GAAlFG,EAAuCD,EAA2C,GAA7DE,EAAkBF,EAA2C,GAEzF,OACE,UAACxR,GAAAA,GAAU,CAACC,IAAI,K,WACd,UAAC8P,GAAAA,GAAU,CAACxP,MAAM,W,WAChB,UAAC6P,GAAAA,GAAQ,CAACnQ,IAAI,M,WACZ,SAACO,EAAAA,GAAY,CAACd,SAAUwM,EAAMG,YAAY3M,SAAUe,KAAK,OAAO+D,MAAO,CAAEC,YAAa,WACtF,SAACgJ,GAAa,CAAC9I,SAAS,OAAO5D,MAAOkQ,E,SACnC/E,EAAMG,YAAYC,cAAc,SAGrC,SAAC8D,GAAAA,GAAQ,CAACnQ,IAAI,M,UACZ,SAACS,EAAAA,EAAI,CAACiE,SAAS,OAAOL,GAAG,O,SACtB4H,EAAMG,YAAY3M,SAASiB,eAIlC,SAACyP,GAAAA,GAAQ,C,UACP,SAACuB,EAAAA,EAAa,CAACpK,MAAM,OAAOjD,GAAG,WAEjC,UAACyL,GAAAA,GAAU,CAACxP,MAAM,W,WAChB,UAAC6P,GAAAA,GAAQ,CAACnQ,IAAI,M,WACZ,SAACO,EAAAA,GAAY,CAACd,SAAUwM,EAAMO,aAAa/M,SAAUe,KAAK,UAC1D,SAACgN,GAAa,CACZ9I,SAAS,OACT5D,MAAO8P,GAAqB3E,EAAMmE,YAAcC,EAAAA,GAAAA,YAAwB,UAAY,O,SAEnFpE,EAAMO,aAAaH,cAAc,SAGtC,SAAC8D,GAAAA,GAAQ,C,UACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,OAAOL,GAAG,O,SACtB4H,EAAMO,aAAa/M,SAASiB,cAIlCkQ,GACC,SAAC3C,GAAqB,CAACtB,QAAQ,aAAa3M,IAAI,M,UAC9C,UAAC8P,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAACpC,GAAAA,EAAS,CAAClD,GAAG,SACd,UAACpK,EAAAA,EAAI,CAAC2D,MAAI,E,UAAC,IAAE7E,EAAE,wBAEjB,SAACb,EAAAA,EAAM,CAACC,QAASkS,E,SAAkBtR,EAAE,iBAGvC,MACJ,UAACQ,GAAAA,GAAU,CAAC4M,QAAQ,aAAa3M,IAAI,KAAKuE,MAAO,CAAEoN,QAAS,gB,WAC1D,UAACxB,GAAAA,GAAQ,CAAC5L,MAAO,CAAE+C,MAAO,Q,WACxB,SAAC7G,EAAAA,EAAI,CAACK,MAAM,YAAYsD,MAAI,EAAC+C,cAAc,Y,SACxC5H,EAAE,yBAEL,SAACkB,EAAAA,EAAI,CAAC2D,MAAI,EAACtD,MAAM,UAAUuD,GAAG,OAAOuI,UAAU,M,SAC5C,GAAoD,QAAjDkF,EAAAA,GAAAA,IAAqBhB,GAAiBtC,QAAQ,GAAG,UAGxDvC,EAAMmE,YAAcC,EAAAA,GAAAA,eAA2BxB,IAC9C,SAACpO,EAAAA,EAAI,CAACI,OAAK,EAACC,MAAM,UAAU8L,UAAU,OAAOrI,MAAO,CAAE+C,MAAO,Q,SAC1D/H,EAAE,mEAGP,UAACkB,EAAAA,EAAI,CAACI,OAAK,EAACC,MAAM,aAAa8L,UAAU,OAAOrI,MAAO,CAAE+C,MAAO,Q,UAC7D6J,EACAC,QAGU,OAAdT,GACC,SAAC5Q,GAAAA,GAAU,CAAC4M,QAAQ,aAAa3M,IAAI,KAAKuE,MAAO,CAAEoN,QAAS,gB,UAC1D,UAAClR,EAAAA,EAAI,CAACK,MAAM,a,UACT0Q,GACD,SAACI,IAAC,CAAC9R,MAAO6Q,E,SAAYU,IACrBI,OAGH,Q,uLCtHV,IAAMhD,IAA2B5P,EAAAA,EAAAA,IAAOkB,GAAAA,IAAW,Y,6BAAlBlB,C,MAGd,Y,OAAQ,EAALC,MAAkB4P,MAAMrS,WACxB,Y,OAAQ,EAALyC,MAAkBC,OAAOgL,cAC5B,Y,OAAQ,EAALjL,MAAkBC,OAAOuO,cAGnC,SAASyE,GAAsB,G,IA4D5BnD,EACAA,EADAA,EACAA,EA5DhB3C,EAD4C,EAC5CA,MACA2C,EAF4C,EAE5CA,wBACAC,EAH4C,EAG5CA,qBACAC,EAJ4C,EAI5CA,UACAC,EAL4C,EAK5CA,iBACAC,EAN4C,EAM5CA,gBASM,GAAQ1P,EAAAA,EAAAA,MAANC,EACgC6F,GAAAA,EAAAA,EAAAA,WAAkB,GAAnD6J,EAAiC7J,EAAwB,GAA3C8J,EAAmB9J,EAAwB,GAE1DkK,EAAkB,GAAgC,QAAhB,IAAZC,GAAAA,IAAiBf,QAAQ,GAAG,KAClDgB,EAAsB,GAAqC,QAAhB,IAAjBC,GAAAA,IAAsBjB,QAAQ,GAAG,KAC3DkB,EAAqB,GAAmC,QAAhB,IAAfC,GAAAA,IAAoBnB,QAAQ,GAAG,KACxDoB,EAAoB,GAAkC,QAAhB,IAAdC,GAAAA,IAAmBrB,QAAQ,GAAG,KAE5D,OACE,sB,WACE,UAACC,GAAwB,C,WACvB,UAACqB,GAAAA,GAAU,CAACxP,MAAM,S,WAChB,SAACG,EAAAA,EAAI,CAACiE,SAAS,O,SAAQnF,EAAE,YACzB,UAACkB,EAAAA,EAAI,CACHiE,SAAS,OACTH,MAAO,CACL0C,eAAgB,SAChB2D,WAAY,SACZmF,QAAS,OACTnD,UAAW,QACXoD,YAAa,Q,WAGdC,EAAAA,GAAAA,IAAqBhE,EAAOgD,IAC7B,SAAC5B,GAAoB,CAAC1O,QAAS,W,OAAMuQ,GAAiBD,I,UACpD,SAACiB,GAAAA,EAAa,CAAC5I,MAAM,kBAK3B,UAACwI,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SACZuH,EAAMmE,YAAcC,EAAAA,GAAAA,YAAwB9Q,EAAE,oBAAsBA,EAAE,mBAEzE,SAAC+Q,GAAAA,EAAc,CACbtR,KAAMO,EACJ,wGAEF8E,GAAG,YAGP,UAAC8L,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SACZuH,EAAMmE,YAAcC,EAAAA,GAAAA,YACsC,QAAvDzB,EAAqC,QAArCA,EAAAA,EAAwB2B,EAAAA,GAAAA,eAAa,IAArC3B,OAAAA,EAAAA,EAAuCvC,cAAc,UAAE,IAAvDuC,EAAAA,EAA2D,IACL,QAAtDA,EAAoC,QAApCA,EAAAA,EAAwB2B,EAAAA,GAAAA,cAAY,IAApC3B,OAAAA,EAAAA,EAAsCvC,cAAc,UAAE,IAAtDuC,EAAAA,EAA0D,OAEhE,SAACnO,EAAAA,EAAI,CAACiE,SAAS,OAAO8L,WAAW,M,SAC9BvE,EAAMmE,YAAcC,EAAAA,GAAAA,YACjBpE,EAAMO,aAAa/M,SAASiB,OAC5BuL,EAAMG,YAAY3M,SAASiB,gBAKrC,SAACoP,GAAAA,GAAU,C,UACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SAAQnF,EAAE,6BACzB,SAAC+Q,GAAAA,EAAc,CACbtR,MACE,sB,WACE,SAACyB,EAAAA,EAAI,CAACgQ,GAAG,O,SAAQlR,EAAE,wCAAyC,CAAExI,OAAQuY,OACtE,UAAC7O,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,+BAAgC,CAAExI,OAAQyY,QACrD,UAAC/O,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,2BAA4B,CAAExI,OAAQ2Y,QACjD,UAACjP,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,yCAA0C,CAAExI,OAAQ6Y,UAGnEvL,GAAG,iBAMX,UAAChE,GAAAA,GAAO,C,WACN,SAAC3B,EAAAA,EAAM,CACLb,QAAQ,UACRc,QAASmQ,EACThR,SAAUkR,EACV9K,GAAG,OACH8D,GAAG,uBACHV,MAAM,O,SAEL2E,EAAMmE,YAAcC,EAAAA,GAAAA,cAA2BxB,EAA0CtP,EAAE,gBAArBA,EAAE,iBAG1EwP,GAAmB,SAACjB,GAAiB,CAACvQ,MAAOwR,IAAuB,WC7F7E,IAAMiD,GAAgC,Y,IACpC/F,EAAK,EAALA,MACAgG,EAAa,EAAbA,cACApB,EAAe,EAAfA,gBACAC,EAAe,EAAfA,gBACAhC,EAAS,EAATA,UACA6B,EAAS,EAATA,UACAuB,EAAgB,EAAhBA,iBACAC,EAAQ,EAARA,SAEMvB,GAAoB5O,EAAAA,EAAAA,UACxB,W,OAAMoQ,QAAQnG,GAASgG,IAtBzBI,EAsB0EJ,GAvB1EK,EAuBmErG,GAnB1DmE,YAAciC,EAAOjC,YAC3BkC,EAAOlG,YAAY3M,SAAS8S,OAAOF,EAAOjG,YAAY3M,YACtD6S,EAAOlG,YAAYoG,QAAQH,EAAOjG,eAClCkG,EAAO9F,aAAa/M,SAAS8S,OAAOF,EAAO7F,aAAa/M,YACxD6S,EAAO9F,aAAagG,QAAQH,EAAO7F,gBATxC,IACE8F,EACAD,IAuBE,CAACJ,EAAehG,IAGZ2C,GAA0B5M,EAAAA,EAAAA,UAC9B,W,OAAMyQ,EAAAA,GAAAA,IAA+BxG,EAAO6E,KAC5C,CAAC7E,EAAO6E,IAGJjC,GAAuB7M,EAAAA,EAAAA,UAAQ,WACnC,IAAS,OAALiK,QAAK,IAALA,OAAAA,EAAAA,EAAOmE,aAAcC,EAAAA,GAAAA,aAAwB,OAAO,KAExD,IAAMqC,KAAyBR,IAAoBA,EAAiB3B,EAAAA,GAAAA,QAC9DoC,EAAoBD,GAAuBR,EAAiB3B,EAAAA,GAAAA,OAAa9Q,SAASgG,SAClFmN,EAAsBF,EACxBC,GACEE,EAAAA,EAAAA,GAAeX,EAAiB3B,EAAAA,GAAAA,QAChC2B,EAAiB3B,EAAAA,GAAAA,OACnB,KACJ,SAAOqC,GAAuBhE,GAA2BA,EAAwB2B,EAAAA,GAAAA,UAC7EqC,EAAoBE,YAAYlE,EAAwB2B,EAAAA,GAAAA,SACtDqC,EAAoBJ,QAAQ5D,EAAwB2B,EAAAA,GAAAA,WAEzD,CAAC2B,EAAkBjG,EAAO2C,IAEvBmE,GAAchN,EAAAA,EAAAA,cAAY,WAC9B,IAAMiN,EAAgBb,EAAWN,GAAwBnB,GAEzD,OAAOzE,GACL,SAAC+G,EAAa,CACZ/G,MAAOA,EACP6E,gBAAiBA,EACjBlC,wBAAyBA,EACzBC,qBAAsBA,EACtB8B,UAAWA,EACXC,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CACDC,EACAD,EACAF,EACAC,EACA3E,EACA2C,EACAC,EACAsD,IAGIc,GAAclN,EAAAA,EAAAA,cAAY,WAC9B,IAAMmN,EAAaf,EAAWJ,GAAwBpD,GAEtD,OAAO1C,GACL,SAACiH,EAAU,CACTpE,UAAWA,EACX7C,MAAOA,EACP+C,gBAAiB4B,EACjBhC,wBAAyBA,EACzBC,qBAAsBA,IAEtB,OACH,CAACC,EAAW8B,EAAmB3E,EAAO4C,EAAsBD,EAAyBuD,IAExF,OAAO,SAACgB,GAAAA,GAAwB,CAACC,WAAYL,EAAaM,cAAeJ,KAG3E,IAAeK,EAAAA,EAAAA,MAAKtB,I,YC9FpB,GAVkC,Y,IAAGjU,EAAQ,EAARA,SAAUwV,EAAa,EAAbA,cACvC,GAAQjU,EAAAA,EAAAA,MAANC,EAER,OACE,SAACM,GAAAA,EAAK,CAACC,MAAOP,EAAE,gBAAiBiU,iBAAiB,qBAAqBpU,UAAWmU,E,SAC/ExV,KCOD0V,GAA8B,Y,IAAGrU,EAAS,EAATA,UAAW5B,EAAO,EAAPA,QAASkW,EAAgB,EAAhBA,iBACnDC,EAA6B,OAAPnW,QAAO,IAAPA,OAAAA,EAAAA,EAAS2C,SAHrC,8HAKMyT,GAAqB7N,EAAAA,EAAAA,cAAY,WAC5B,OAAT3G,QAAS,IAATA,GAAAA,IACIuU,GAAuBD,GACzBA,MAED,CAACC,EAAqBvU,EAAWsU,IAGpC,OAAOC,GACL,SAACE,GAAAA,GAAuB,CACtBrW,SACE,sB,WACE,UAACiD,EAAAA,EAAI,CAACgQ,GAAG,O,UAAO,yGACyF,KACvG,SAAChQ,EAAAA,EAAI,CAAC2D,MAAI,EAAC2L,QAAQ,SAASxL,MAAO,CAAEuP,OAAQ,WAAanV,QAASiV,E,UACjE,SAACG,IAAC,C,SAAC,8BAGP,SAACC,GAAAA,EAAY,CACXjT,KAAK,uEACLwD,MAAO,CAAE+C,MAAO,OAAQL,eAAgB,U,SACzC,wDAOP,SAAC4M,GAAAA,GAAuB,CAACrW,QAASA,EAAS4B,UAAWA,KAoBpD6U,GAAkG,Y,IACtGhI,EAAK,EAALA,MACAgG,EAAa,EAAbA,cACAC,EAAgB,EAAhBA,iBACArB,EAAe,EAAfA,gBACAC,EAAe,EAAfA,gBACAhC,EAAS,EAATA,UACA1P,EAAS,EAATA,UACA8U,EAAe,EAAfA,gBACAvD,EAAS,EAATA,UACA5B,EAAgB,EAAhBA,iBACAoF,EAAa,EAAbA,cACAC,EAAM,EAANA,OACAV,EAAgB,EAAhBA,iBACAvB,EAAQ,EAARA,SAEM,GAAc9S,EAAAA,EAAAA,KAAZpD,QAEFsX,GAAgBxN,EAAAA,EAAAA,cAAY,WAC5BmO,GACFA,IAEO,OAAT9U,QAAS,IAATA,GAAAA,MACC,CAAC8U,EAAiB9U,IAEfiV,GAAsBtO,EAAAA,EAAAA,cAC1B,W,OACEgJ,GACE,SAAC0E,GAA2B,CAC1BC,iBAAkBA,EAClBtU,UAAWA,EACX5B,QAASuR,KAGX,SAACiD,GAA6B,CAC5BG,SAAUA,EACVlG,MAAOA,EACPiG,iBAAkBA,EAClBD,cAAeA,EACfpB,gBAAiBA,EACjBC,gBAAiBA,EACjBhC,UAAWA,EACX6B,UAAWA,MAGjB,CACEwB,EACAlG,EACAgG,EACApB,EACAC,EACAhC,EACA6B,EACA5B,EACA3P,EACAsU,EACAxB,IAIJ,OAAKjW,GAGH,SAACqY,GAAyB,CAACf,cAAeA,E,SACvCY,GACC,SAACI,GAA0B,CAACtI,MAAOA,IACjCmI,GACF,SAACI,GAAAA,GAA2B,CAC1BvY,QAASA,EACTwY,KAAML,EACNhV,UAAWmU,EACXmB,cAAoB,OAALzI,QAAK,IAALA,OAAAA,EAAAA,EAAOO,aAAa/M,WAGrC4U,MAde,MAoBvB,IAAef,EAAAA,EAAAA,MAAKW,I,itBC9IpB,IAAMU,IAAW9V,EAAAA,EAAAA,IAAOiR,GAAAA,IAAW,Y,6BAAlBjR,C,MAIX+V,GAAS/V,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAGO,Y,IAAGC,EAAK,EAALA,MAAO+V,EAAS,EAATA,U,OAAmB,EAAR/W,SAC5BgB,EAAMC,OAAO+V,mBAAqBD,EAAY/V,EAAMC,OAAOqO,QAAUtO,EAAMC,OAAOgW,WAU3FC,GAAYnW,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAMZoW,GAAYpW,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAKZ,Y,IAAGC,EAAK,EAALA,MAAOoW,EAAa,EAAbA,c,OAAuB,EAARpX,SACZgB,EAAMC,OAAO+V,mBAAqBI,EAAgBpW,EAAMC,OAAOqO,QAAUtO,EAAMC,OAAOgW,WAEnG,Y,IAAGjW,EAAK,EAALA,MAAOoW,EAAa,EAAbA,c,OAAuB,EAARpX,SAEnBgB,EAAMC,OAAO+V,mBACbI,EACApW,EAAMC,OAAOgW,QACbjW,EAAMC,OAAO+V,sBAqBV,SAASK,GAAgB,G,IAAEC,EAAF,EAAEA,MAAO,EAAT,EAAStX,SAAAA,OAAQ,IAAG,GAAK,EAAKuX,GAAI,QAAlC,EAA0D,CAAxDD,QAAOtX,aAC/C,OACE,SAACiC,GAAAA,IAAU,gBAAC4M,QAAQ,UAAa0I,GAAI,C,UACnC,UAACV,GAAQ,C,UACNS,EAAMrY,KAAI,SAAChC,EAAMua,GAChB,OAEE,UAACN,GAAS,C,WACR,SAACJ,GAAM,CAACC,UAAW9Z,EAAM+C,SAAUA,IAAcsX,EAAME,EAAI,IAAY,IAANA,E,SAC9Dva,EAAO,SAAMua,EAAI,KAEpB,SAACL,GAAS,CAACC,cAAena,EAAM+C,SAAUA,MAJ5BwX,OAQpB,SAACV,GAAM,CAAC9W,SAAUA,IAAasX,EAAMA,EAAMnY,OAAS,G,SAAKmY,EAAMnY,OAAS,UClDhF,IAAMsY,IAAiCC,EAAAA,GAAAA,GAAoBC,GAAAA,GA6B5C,SAASC,GAAiB,G,IACvCC,EADuC,EACvCA,kBACAC,EAFuC,EAEvCA,QACAC,EAHuC,EAGvCA,SACAC,EAJuC,EAIvCA,eACAC,EALuC,EAKvCA,OACAlO,EANuC,EAMvCA,SACAmO,EAPuC,EAOvCA,SACAC,EARuC,EAQvCA,gBACAC,EATuC,EASvCA,kBACA/W,EAVuC,EAUvCA,WACAgX,EAXuC,EAWvCA,aACAlK,EAZuC,EAYvCA,MACAmK,EAbuC,EAavCA,eACAlE,EAduC,EAcvCA,iBACAvB,EAfuC,EAevCA,UACAG,EAhBuC,EAgBvCA,gBACAuF,EAjBuC,EAiBvCA,0BACAC,EAlBuC,EAkBvCA,YAEM,GAAQhX,EAAAA,EAAAA,MAANC,EACDgX,GAAuC,QAAtBC,EAAAA,EAAAA,MAAsB,MACxC,GAA4BrH,EAAAA,GAAAA,IAA2BlD,GAArDmD,sBAGFqH,EC7DD,SACLxK,G,IACA6E,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAkD,aAAxB4F,EAAAA,GAC1BC,EAA+B,uCAEFtX,GAAAA,EAAAA,EAAAA,KAArBuW,EAAqBvW,EAArBuW,QAAS3Z,EAAYoD,EAAZpD,QAEX0U,EAAiC,OAArBgG,EAA4Bf,EAAUe,EAClDC,GAAWvV,EAAAA,GAAAA,KACXwV,GAAWC,EAAAA,GAAAA,MAEjB,OAAO9U,EAAAA,EAAAA,UAAQ,WACb,IAAKiK,IAAU0E,IAAciF,IAAY3Z,IAAY2a,EAAU,MAAO,GAEtE,IAAKC,EACH,MAAO,GAGT,IAAME,EAAc,GAsBpB,OApBAA,EAAYpZ,KACVqZ,EAAAA,GAAAA,mBAA0B/K,EAAO,CAC/BgL,eAAe,EACfnG,gBAAiB,IAAIoG,EAAAA,GAAQC,EAAAA,GAAAA,OAAYrG,GAAkBsG,GAAAA,IAC3DzG,UAAAA,EACAiG,SAAUA,EAASS,cAInBpL,EAAMmE,YAAcC,EAAAA,GAAAA,aACtB0G,EAAYpZ,KACVqZ,EAAAA,GAAAA,mBAA0B/K,EAAO,CAC/BgL,eAAe,EACfnG,gBAAiB,IAAIoG,EAAAA,GAAQC,EAAAA,GAAAA,OAAYrG,GAAkBsG,GAAAA,IAC3DzG,UAAAA,EACAiG,SAAUA,EAASS,cAKlBN,EAAYha,KAAI,SAACua,G,MAAgB,CAAEA,WAAAA,EAAYT,SAAAA,QACrD,CAACjB,EAAS9E,EAAiB7U,EAAS4a,EAAUD,EAAUjG,EAAW1E,IDoBpDsL,CAAqBtL,EAAO6E,EAAiBH,GAEF6G,EZvCxD,SACLvL,G,IACA6E,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAkD,aAAxB4F,EAAAA,GAC1BC,EAA+B,uCAC/BF,EAAqB,uCAEQpX,GAAAA,EAAAA,EAAAA,KAArBuW,EAAqBvW,EAArBuW,QAAS3Z,EAAYoD,EAAZpD,QACXwb,GAAWC,EAAAA,EAAAA,MAEX,GAAQpY,EAAAA,EAAAA,MAANC,EAEFoY,GAAiBC,EAAAA,GAAAA,MAEjBjH,EAAiC,OAArBgG,EAA4Bf,EAAUe,EAExD,OAAO3U,EAAAA,EAAAA,UAAQ,WACb,OAAKiK,GAAU2J,GAAY3Z,EAGtB0U,EAOE,CACLnP,MAAOkK,GAAkBG,MACzBgM,SAAU,W,IAAeC,GAAf,mB,IAqDDjB,EApDDkB,EAiCAC,EAMEC,EAAU,EAOdpB,EAAQ,EACMqB,EAAYC,EAAMpe,EAElCqe,E,iEAjDyC,O,EAAMzd,QAAQuL,IACvDuQ,EAAU1Z,KAAI,SAACsb,G,IAONxB,EANP,EAGIwB,EAFFf,WAAcY,EAAU,EAAVA,WAAYC,EAAI,EAAJA,KAAMpe,EAAK,EAALA,MAChC8c,EACEwB,EADFxB,SAEIyB,GAAWve,GAASwR,GAAOxR,GAAS,GAAK,CAAEA,MAAAA,GAEjD,OAAO8c,EAAAA,EAAS0B,aAAYL,GAArBrB,MAAAA,GAAAA,EAAAA,GAAAA,GAAoCsB,GAAAA,OAApCtB,CAA0CyB,KAC9Cjd,MAAK,SAAC+c,GACL,MAAO,CACLC,KAAAA,EACAD,YAAAA,MAGHI,OAAM,SAACC,G,IAGC5B,EAAP,OAFAvZ,QAAQC,MAAM,wDAAyD8a,IAEhExB,EAAAA,EAAS6B,YAAWR,GAApBrB,MAAAA,GAAAA,EAAAA,GAAAA,GAAmCsB,GAAAA,OAAnCtB,CAAyCyB,KAC7Cjd,MAAK,SAACF,GAEL,OADAmC,QAAQC,MAAM,uDAAwD8a,EAAMI,EAAUtd,GAC/E,CAAEkd,KAAAA,EAAM9a,MAAOgC,EAAE,mEAEzBiZ,OAAM,SAACG,GAGN,OAFArb,QAAQC,MAAM,mBAAoB8a,EAAMM,GAEjC,CAAEN,KAAAA,EAAM9a,OAAOqb,EAAAA,GAAAA,GAAsCD,EAAWpZ,e,OAYnF,GAtCMwY,EAAqC,WAiCrCC,EAAuBD,EAAec,MAC1C,SAACC,EAAIC,EAAIC,G,MACP,gBAAiBF,IAAOC,IAAOC,EAAK/b,OAAS,GAAK,gBAAiB+b,EAAKD,EAAK,QAGtD,CAEzB,IADMd,EAAaF,EAAelb,QAAO,SAACwb,G,MAA6B,UAAWA,MACnEpb,OAAS,EAAG,MAAM,IAAIhD,MAAMge,EAAWA,EAAWhb,OAAS,GAAGM,OAC7E,MAAM,IAAItD,MAAMsF,EAAE,2DAWpB,O,EAFIyY,EALFK,KACExB,EAAQ,EAARA,SAAQ,IACRS,WAAcY,EAAU,EAAVA,WAAYC,EAAI,EAAJA,KAAMpe,EAAK,EAALA,MAElCqe,EACEJ,EADFI,YAGK,C,GAAAvB,EAAAA,GAASqB,GAATrB,MAAAA,GAAAA,EAAAA,GAAAA,GAAwBsB,GAAAA,OAAAA,EAAM,QACnCc,UAAUC,EAAAA,GAAAA,IAAmBd,GAC7BX,SAAAA,GACI1d,IAAUwR,GAAOxR,GAAS,CAAEA,MAAAA,EAAO6P,KAAMgM,GAAY,CAAEhM,KAAMgM,OAEhEva,MAAK,SAAC8d,GACL,IAAMC,EAAcnN,EAAMG,YAAY3M,SAASiB,OACzC2Y,EAAepN,EAAMO,aAAa/M,SAASiB,OAC3C4Y,GAAMxH,EAAAA,GAAAA,IAAqBhB,GAC3B1E,EACJH,EAAMmE,YAAcC,EAAAA,GAAAA,YAChBpE,EAAMG,YAAYC,cAAc,GAChCJ,EAAMsN,gBAAgBD,GAAKjN,cAAc,GACzCG,EACJP,EAAMmE,YAAcC,EAAAA,GAAAA,aAChBpE,EAAMO,aAAaH,cAAc,GACjCJ,EAAMuN,iBAAiBF,GAAKjN,cAAc,GAE1CoN,EAAO,QAETrN,OADFH,EAAMmE,YAAcC,EAAAA,GAAAA,aAAyB,OAAS,GACvD,KAAkB+I,OAAfhN,EAAY,KACdH,OADiBmN,EAAY,SAE3B5M,OADFP,EAAMmE,YAAcC,EAAAA,GAAAA,YAAwB,OAAS,GACtD,KAAmBgJ,OAAhB7M,EAAa,KAAgB,OAAb6M,GAEdK,EACJ/C,IAAoBgD,EAAAA,GAAAA,IAAUhD,IAAoBrF,EAAAA,GAAAA,GAAaqF,GAAoBA,EAE/EiD,EAAgBjJ,IAAciF,EAAU6D,EAAO,GAAcC,OAAXD,EAAK,QAA2B,OAArBC,GAE7DG,EACJ5N,EAAMmE,YAAcC,EAAAA,GAAAA,aAChBM,IAAciF,EACZ,0EACA,gGACFjF,IAAciF,EACd,0EACA,gGAiBN,OAfA+B,EAAewB,EAAU,CACvBW,QAASF,EACTG,oBAAqB,CACnB/a,KAAM6a,EACNtd,MAAM,QACJ6P,YAAAA,EACAgN,YAAAA,EACA5M,aAAAA,EACA6M,aAAAA,GACI1I,IAAciF,GAAW,CAAEe,iBAAkB+C,KAGrD/P,KAAM,SAGDwP,EAAS1E,QAEjB+D,OAAM,SAACjb,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAAA,EAAAA,EAAOyc,MACH,IAAI/f,MAAM,0BAGhBqD,QAAQC,MAAO,cAAcA,EAAO2a,EAAYC,EAAMpe,GAChD,IAAIE,MAAMsF,EAAE,yBAA0B,CAAE/B,SAASob,EAAAA,GAAAA,GAAsCrb,EAAOgC,kB,yBAnHnFuY,EAAM,uBAArB,GAuHVva,MAAO,MA/HkB,OAArBoZ,EACK,CAAEnV,MAAOkK,GAAkBC,QAASkM,SAAU,KAAMta,MAAO,qBAE7D,CAAEiE,MAAOkK,GAAkBE,QAASiM,SAAU,KAAMta,MAAO,MAN3D,CAAEiE,MAAOkK,GAAkBC,QAASkM,SAAU,KAAMta,MAAO,0BAoInE,CAAC0O,EAAO2J,EAAS3Z,EAAS0U,EAAWgG,EAAkBF,EAAWgB,EAAUlY,EAAGoY,EAAgB7G,IY9GrC0G,CAC3DvL,EACA6E,EACAH,EACA8F,GAJMoB,EAAqDL,EAArDK,SAAwBta,EAA6Bia,EAA7Bja,MAMoD6H,GAAAA,EAAAA,EAAAA,UAKjF,CACD6U,oBAAgBC,EAChB/F,eAAe,EACfpF,sBAAkBmL,EAClB9F,YAAQ8F,IACR,EAVkF9U,EAUlF,GAVO6U,EAAc,EAAdA,eAAgBlL,EAAgB,EAAhBA,iBAAkBoF,EAAa,EAAbA,cAAeC,EAAM,EAANA,OAAU+F,EAAgB/U,EAUlF,GAGIgV,GAAarU,EAAAA,EAAAA,cAAY,WACzBqJ,IE7FO,SAAsCA,EAAgC7P,GACnF,IAAK6P,EAAsBd,SAAS+L,GAAAA,IAAuC,CACzE,IAAMC,EAAc,UACpB,OAEE7c,OAAO8c,OACLhb,EACE,gHACA,CACExI,OAAQsjB,GAAAA,GAAAA,QAA6C,GACrDG,KAAMF,OAGNA,EAGV,QAAKlL,EAAsBd,SAASmM,GAAAA,KAE3Bhd,OAAOid,QACZnb,EACE,qHACA,CACExI,OAAQ0jB,GAAAA,GAAAA,QAAkC,MFuElBE,CAA6BvL,EAAuB7P,IAG7Eqb,IAGLT,EAAa,CAAEhG,eAAe,EAAM8F,eAAAA,EAAgBlL,sBAAkBmL,EAAW9F,YAAQ8F,IACzFU,IACGvf,MAAK,SAACoZ,GACL0F,EAAa,CAAEhG,eAAe,EAAO8F,eAAAA,EAAgBlL,sBAAkBmL,EAAW9F,OAAQK,OAE3F+D,OAAM,SAACjb,GACN4c,EAAa,CACXhG,eAAe,EACf8F,eAAAA,EACAlL,iBAAkBxR,EAAMC,QACxB4W,YAAQ8F,UAGb,CAAC9K,EAAuBwL,EAAcX,EAAgB1a,EAAG4a,IAEtDU,GAAsB9U,EAAAA,EAAAA,cAAY,WACtCoU,EAAa,CAAEF,eAAgBhO,EAAO8C,iBAAAA,EAAkBqF,OAAAA,EAAQD,cAAAA,MAC/D,CAACA,EAAepF,EAAkB9C,EAAOmI,EAAQ+F,IAE9CW,GAAuB/U,EAAAA,EAAAA,cAAY,WACvCoU,EAAa,CAAEF,eAAAA,EAAgB9F,cAAAA,EAAepF,iBAAAA,EAAkBqF,OAAAA,IAE5DA,GACFkC,EAAY/F,EAAAA,GAAAA,MAAa,MAE1B,CAAC4D,EAAemC,EAAavH,EAAkBkL,EAAgB7F,EAAQ+F,IAKI/U,GAAAA,EAAAA,EAAAA,WAAS,GAAhF2V,EAAuE3V,EAAe,GAArD4V,GAAsC5V,EAAe,GAEtF6V,IAKN,QALgC7Z,EAAAA,GAAAA,IAC/B,SAACmU,GAA8B,CAC7BrB,gBAAiB,W,OAAM8G,IAAmC,IAC1D7P,KAAMC,GAAAA,EAAAA,kBAET,MAEM8P,IAkBN,QAlB+B9Z,EAAAA,GAAAA,IAC9B,SAAC6S,GAAgB,CACfhI,MAAOA,EACPgG,cAAegI,EACf/H,iBAAkBA,EAClBrB,gBAAiBgK,EACjB1G,cAAeA,EACfC,OAAQA,EACRzD,UAAWA,EACXG,gBAAiBA,EACjBhC,UAAWsL,EACXrL,iBAAkBA,EAClBmF,gBAAiB4G,EACjBpH,iBAAkBuH,MAEpB,GACA,EACA,oBACD,MAGKE,IAAgBpV,EAAAA,EAAAA,cAAY,WAC5BoQ,EACFiE,KAEAD,EAAa,CACXF,eAAgBhO,EAChBkI,eAAe,EACfpF,sBAAkBmL,EAClB9F,YAAQ8F,IAEVgB,QAED,CAAC/E,EAAciE,EAAYc,GAAuBjP,KAGrDmP,EAAAA,EAAAA,YAAU,WACJL,IACFC,IAAmC,GACnCb,GAAa,SAAC3Y,G,OAAW,kBACpBA,GAAK,CACRuN,sBAAkBmL,OAEpBgB,QAED,CAACH,EAAiCG,GAAuBf,IAG5D,IAAMpJ,IAAsB1C,EAAAA,GAAAA,IAAgBe,GAE5C,GAAIuG,EACF,OACE,SAACjX,EAAAA,EAAM,CAAC4I,MAAM,OAAOxJ,UAAQ,E,SAC1ByB,EAAE,uBAKT,IAAKqW,EACH,OAAO,SAACyF,GAAAA,EAAmB,CAAC/T,MAAM,SAGpC,GAAIuO,EACF,OACE,SAAC5X,GAAAA,EAAY,CAACqJ,MAAM,OAAOxJ,SAAUsU,QAAQ0D,GAAiBnX,QAASoX,E,SACtD,OAAdD,QAAc,IAAdA,EAAAA,EAAmBjO,IAAaJ,EAASE,KAAO,OAASE,IAAaJ,EAASG,OAAS,SAAW,OAK1G,IAAM0T,KAAgB,OAALrP,QAAK,IAALA,OAAAA,EAAAA,EAAOsP,OAElBC,GAA8BpJ,QAClCjT,EAAWoR,EAAAA,GAAAA,QAAgBpR,EAAWoR,EAAAA,GAAAA,UAA0C,OAAzB8F,QAAyB,IAAzBA,OAAAA,EAAAA,EAA2BvD,YAAY2I,GAAAA,MAGhG,GAAIH,IAAWE,GACb,OACE,UAACE,GAAAA,GAAQ,CAACnX,MAAO,CAAEqI,UAAW,SAAU+E,QAAS,W,WAC/C,SAAClR,EAAAA,EAAI,CAACK,MAAM,a,SAAcvB,EAAE,4CAC3BgX,IAAiB,SAAC9V,EAAAA,EAAI,CAACK,MAAM,a,SAAcvB,EAAE,uCAOpD,IA0ByCJ,GAAAA,GAnBnCwc,IAAWvF,EAEjB,OARGA,KACAJ,IAAa4F,GAAAA,GAAAA,cACZ5F,IAAa4F,GAAAA,GAAAA,SACZ1F,GAAqBF,IAAa4F,GAAAA,GAAAA,WACnC7K,GAAsB,IAAMoF,GAiD9B,sB,WACE,SAAClY,GAAAA,EAAY,CACXJ,QAAS8d,IAAW5K,GAAsB,IAAM8K,EAAoB,SAAW,UAC/Eld,QAAS,WACPwc,MAEFnT,GAAG,cACHV,MAAM,OACNxJ,UAAW6d,IAAY5K,GAAsB,IAAMoF,KAAmB0F,E,SAErEzF,GAEK7W,EADHwR,GAAsB,IAAMoF,EACvB,wBACFpF,GAAsB,EACpB,cACA,UAGToF,GAAgBpH,GAAmB,SAACjB,GAAiB,CAACvQ,MAAOwR,IAAuB,SA7DrF,sB,WACE,UAACe,GAAAA,GAAU,C,WACT,SAAC7R,GAAAA,EAAY,CACXJ,QAASmY,IAAa4F,GAAAA,GAAAA,SAAyB,UAAY,UAC3Djd,QAASsX,EACTnY,SAAUkY,IAAa4F,GAAAA,GAAAA,cAA8B1F,EACrD5O,MAAM,M,SAEL0O,IAAa4F,GAAAA,GAAAA,SACZ,UAACvb,GAAAA,GAAO,CAACL,IAAI,MAAM2M,QAAQ,S,UACxBpN,EAAE,YAAY,KAAC,SAACuc,GAAAA,EAAY,CAAC3T,OAAO,aAErC+N,GAAqBF,IAAa4F,GAAAA,GAAAA,SACpCrc,EAAE,WAEFA,EAAE,iBAAkB,CAAEwc,MAAsC,QAA/B5c,GAAuB,QAAvBA,GAAAA,EAAWoR,EAAAA,GAAAA,cAAY,IAAvBpR,QAAAA,EAAAA,GAAyBuB,cAAM,IAA/BvB,GAAAA,GAAmC,QAGpE,SAAClB,GAAAA,EAAY,CACXJ,QAAS8d,IAAW5K,GAAsB,EAAI,SAAW,UACzDpS,QAAS,WACPwc,MAEF7T,MAAM,MACNU,GAAG,cACHlK,UAAW6d,IAAW3F,IAAa4F,GAAAA,GAAAA,UAA2B7K,GAAsB,IAAMoF,E,SAGtF5W,EADHwR,GAAsB,IAAMoF,EACvB,oBACFpF,GAAsB,EACpB,cACA,cAGV,SAACiL,GAAAA,GAAM,CAACzX,MAAO,CAAE0X,UAAW,Q,UAC1B,SAACC,GAAa,CAAC9G,MAAO,CAACY,IAAa4F,GAAAA,GAAAA,cAErCzF,GAAgBpH,GAAmB,SAACjB,GAAiB,CAACvQ,MAAOwR,IAAuB,Q,4BGzRhFoN,GAAmB,CAC9BC,UAAW,IAAIC,EAAAA,GAAMxY,EAAAA,GAAAA,IAAa,6CAA8C,GAAI,MAAO,iBAAkB,IAC7GyY,KAAM,IAAID,EAAAA,GAAMxY,EAAAA,GAAAA,IAAa,6CAA8C,EAAG,OAAQ,yBAA0B,IAChH0Y,SAAU,IAAIF,EAAAA,GACZxY,EAAAA,GAAAA,IACA,6CACA,EACA,WACA,iBACA,0BCPI2Y,GAA+BC,GAAAA,GAAAA,OAAvBC,GAAuBD,GAAAA,GAAAA,KAAjBE,GAAiBF,GAAAA,GAAAA,KAAXG,GAAWH,GAAAA,GAAAA,OAiBvC,GAV4C,CAC1CF,SAPoCJ,GAAAA,SAQpCK,OAAAA,GACAE,KAAAA,GACAC,KAAAA,GACAC,OAAAA,GACAR,UAZoCD,GAAAA,UAapCG,KAboCH,GAAAA,MCFhCU,GAAoBjjB,OAAOyP,OAAOyT,IAMxC,GAJ8B,SAACC,GAC7B,OAAOF,GAAkBG,MAAK,SAACC,G,OAAiBA,EAAa1K,OAAOwK,O,mCCuBtE,GA1BwB,WACtB,IAAM,GAAQzd,EAAAA,EAAAA,MAANC,EAGR,OACE,qB,UACE,UAACkB,EAAAA,EAAI,C,UACFlB,EAAE,iCAAkC,KACrC,SAACoB,EAAAA,EAAI,CACH4D,MAAO,CAAEwL,QAAS,UAClBnP,UAAQ,EACRG,KAAK,yE,SAEJxB,EAAE,6BACG,IACPA,EACC,mHACC,KACH,UAACoB,EAAAA,EAAI,CAAC4D,MAAO,CAAEwL,QAAS,UAAYnP,UAAQ,EAACG,KAAK,0D,UAC/CxB,EAAE,2BAA2B,aCHxC,GAhBoB,WAClB,IAAM,GAAQD,EAAAA,EAAAA,MAANC,EAER,OACE,qB,UACE,UAACkB,EAAAA,EAAI,C,UACFlB,EAAE,yCAA0C,KAC7C,SAACoB,EAAAA,EAAI,CAAC4D,MAAO,CAAEwL,QAAS,UAAYnP,UAAQ,EAACG,KAAK,4B,SAC/CxB,EAAE,kFACG,IACPA,EAAE,8ECJX,GANsB,WACpB,IAAM,GAAQD,EAAAA,EAAAA,MAANC,EAER,OAAO,SAACkB,EAAAA,EAAI,C,SAAElB,EAAE,0F,YC8BlB,GA5BiF,Y,IAAG2d,EAAmB,EAAnBA,oBAC5E,GAAQ5d,EAAAA,EAAAA,MAANC,EAC8B6F,GAAAA,EAAAA,EAAAA,WAAS,GAAxC+X,EAA+B/X,EAAe,GAAjCgY,EAAkBhY,EAAe,GAErD,OACE,qB,UACE,UAACd,EAAAA,EAAI,CAAC2C,eAAe,gB,WACnB,UAAC3C,EAAAA,EAAI,CAACsG,WAAW,S,WACf,SAACyS,GAAAA,EAAQ,CACPC,KAAK,YACL3T,KAAK,WACL4T,QAASJ,EACTK,SAAU,W,OAAMJ,GAAgBD,IAChCjW,MAAM,QAER,SAACzG,EAAAA,EAAI,CAAC4D,GAAG,OAAOE,MAAO,CAAEkZ,WAAY,Q,SAClCle,EAAE,sBAIP,SAACb,EAAAA,EAAM,CAACZ,UAAWqf,EAAaxe,QAASue,E,SACtC3d,EAAE,oBCDb,GAzBoB,WAClB,IAAM,GAAQD,EAAAA,EAAAA,MAANC,EAER,OACE,qB,UACE,UAACkB,EAAAA,EAAI,C,UACFlB,EAAE,2CAA4C,KAC/C,SAACoB,EAAAA,EAAI,CACH4D,MAAO,CAAEwL,QAAS,UAClBnP,UAAQ,EACRG,KAAK,uE,SAEJxB,EAAE,6BACG,IACPA,EACC,mHACC,KACH,SAACoB,EAAAA,EAAI,CAAC4D,MAAO,CAAEwL,QAAS,UAAYnP,UAAQ,EAACG,KAAK,2C,SAC/CxB,EAAE,6BCSb,GA3BmB,WACjB,IAAM,GAAQD,EAAAA,EAAAA,MAANC,EAER,OACE,sB,WACE,SAACkB,EAAAA,EAAI,C,SACFlB,EACC,uHAGJ,SAACkB,EAAAA,EAAI,C,SAAC,mCACN,UAACA,EAAAA,EAAI,CAACgQ,GAAG,M,UACNlR,EAAE,2BAA4B,KAC/B,SAACoB,EAAAA,EAAI,CACH4D,MAAO,CAAEwL,QAAS,UAClBhP,KAAK,0F,SAEJxB,EAAE,cAGP,SAACyU,GAAAA,EAAY,CAACjT,KAAK,gF,SAChBxB,EAAE,0DCXX,GAVuB,WACrB,IAAM,GAAQD,EAAAA,EAAAA,MAANC,EAER,OACE,qB,UACE,SAACkB,EAAAA,EAAI,C,SAAElB,EAAE,iCCSf,GAdoB,WAClB,IAAM,GAAQD,EAAAA,EAAAA,MAANC,EAER,OACE,qB,UACE,SAACkB,EAAAA,EAAI,C,SACFlB,EACC,qQ,2NCKV,IAAMme,IAAuB7e,EAAAA,EAAAA,IAAO8e,GAAAA,IAAe,Y,6BAAtB9e,C,MAIvB+e,IAAmB/e,EAAAA,EAAAA,IAAOmF,EAAAA,GAAQ,Y,6BAAfnF,C,MA8DzB,GApDmF,Y,IAI1D,EAJ6Dke,EAAY,EAAZA,aAAc3d,EAAS,EAATA,UAC5F,GAAQE,EAAAA,EAAAA,MAANC,EACF,GAAYse,EAAAA,GAAAA,MAAV/e,MAiCFgf,GA/BiB,EA6BtB,IA5BC,OADqB,EACpBC,GAAAA,SAAAA,QAA2C,CAC1Crd,OAAQqd,GAAAA,SAAAA,OACRC,WAAW,SAACC,GAAe,OAE7B,OALqB,EAKpBF,GAAAA,OAAAA,QAAyC,CACxCrd,OAAQqd,GAAAA,OAAAA,OACRC,WAAW,SAACE,GAAa,OAE3B,OATqB,EASpBH,GAAAA,KAAAA,QAAuC,CACtCrd,OAAQqd,GAAAA,KAAAA,OACRC,WAAW,SAACG,GAAW,OAEzB,OAbqB,EAapBJ,GAAAA,KAAAA,QAAuC,CACtCrd,OAAQqd,GAAAA,KAAAA,OACRC,WAAW,SAACI,GAAW,OAEzB,OAjBqB,EAiBpBL,GAAAA,OAAAA,QAAyC,CACxCrd,OAAQqd,GAAAA,OAAAA,OACRC,WAAW,SAACK,GAAU,OAExB,OArBqB,EAqBpBN,GAAAA,UAAAA,QAA4C,CAC3Crd,OAAQqd,GAAAA,UAAAA,OACRC,WAAW,SAACM,GAAc,OAE5B,OAzBqB,EAyBpBP,GAAAA,KAAAA,QAAuC,CACtCrd,OAAQqd,GAAAA,KAAAA,OACRC,WAAW,SAACO,GAAW,MA3BJ,GA+BaxB,EAAa3c,SAEjD,OACE,UAACsd,GAAoB,CAACc,UAAU,Q,WAC9B,SAACC,GAAAA,GAAW,CAACnR,WAAYxO,EAAMC,OAAO2f,mB,UACpC,SAAC5T,GAAAA,EAAO,CAACkD,EAAE,Y,SAAazO,EAAE,8BAA+B,CAAEmB,OAAQod,EAAapd,cAElF,UAACie,GAAAA,GAAS,CAAC3Q,EAAE,O,WACX,SAAC4P,GAAgB,CAAC/f,QAAQ,UAAU4S,GAAG,O,UACrC,SAACmO,EAAAA,EAAG,C,SAAEd,EAAaE,eAErB,SAACa,GAAe,CAAC3B,oBAAqB9d,W,eC7C9C,GA1BqC,WACnC,IAA8BgG,GAAAA,EAAAA,EAAAA,WAAS,GAAhC0Z,EAAuB1Z,EAAe,GAA3B2Z,EAAY3Z,EAAe,GAEvC4Z,GAAqBjZ,EAAAA,EAAAA,cAAY,WAChC+Y,GACHC,GAAS,KAEV,CAACD,IAEE,GAAaG,EAAAA,GAAAA,MAAXC,OACF,GAAc7f,EAAAA,EAAAA,KAAZpD,QAaR,OAXAmf,EAAAA,EAAAA,YAAU,WACH0D,IAELI,EAAO,CAAC,cAAejjB,IAKvBkjB,YAAW,W,OAAMJ,GAAS,KAAQ,QACjC,CAACG,EAAQJ,EAAW7iB,IAEhB,CAAE+iB,mBAAAA,EAAoBF,UAAAA,I,+rCCjB/B,IAAMM,GAAavgB,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAKG,Y,OAAQ,EAALC,MAAkBC,OAAOsgB,iBAK5CC,GAAezgB,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAKC,Y,IAAGtB,EAAK,EAALA,MAAOuB,EAAK,EAALA,M,OAAavB,EAAQuB,EAAMC,OAAOmO,QAAUpO,EAAMC,OAAOuO,cACtD,Y,OAAQ,EAAL/P,MAAqB,WAAa,gBACtD,Y,OAAQ,EAALA,MAAqB,WAAa,gBACjC,Y,OAAQ,EAALuB,MAAkBC,OAAOsgB,iBAG5CE,GAAiB1gB,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MAKjB2gB,GAAQ3gB,EAAAA,GAAAA,MAAAA,WAAY,C,6BAAZA,C,MAKQ,Y,OAAQ,EAALC,MAAkBC,OAAOsgB,iBACtB,Y,OAAQ,EAAL9hB,MAAqB,WAAa,gBACtD,Y,IAAGA,EAAK,EAALA,MAAOuB,EAAK,EAALA,M,OAAavB,EAAQuB,EAAMC,OAAOmO,QAAUpO,EAAMC,OAAOgW,WAMjE,Y,OAAQ,EAALjW,MAAkBC,OAAO0gB,gBAe5B,Y,OAAQ,EAAL3gB,MAAkBC,OAAO0gB,gBAI1B,SAASC,GAAkB,G,IACxC1X,EADwC,EACxCA,GACAjO,EAFwC,EAExCA,MACAyjB,EAHwC,EAGxCA,SAQM,GAAcne,EAAAA,EAAAA,KAAZpD,QAEF,GAAQqD,EAAAA,EAAAA,MAANC,EAEFa,GAAUuZ,EAAAA,GAAAA,IAAU5f,GAASA,OAAQmgB,EAErCyF,GAAc5Z,EAAAA,EAAAA,cAClB,SAAC6Z,GACC,IACMC,EADQD,EAAME,OAAO/lB,MACCgmB,QAAQ,OAAQ,IAC5CvC,EAASqC,KAEX,CAACrC,IAGGjgB,EAAQ6U,QAAQrY,EAAMkD,OAAS,IAAMmD,GAE3C,OACE,SAACgf,GAAU,CAACpX,GAAIA,E,UACd,SAACsX,GAAY,CAAC/hB,MAAOA,E,UACnB,SAACgiB,GAAc,C,UACb,UAACxf,GAAAA,GAAU,CAACC,IAAI,K,WACd,UAAC8P,GAAAA,GAAU,C,WACT,SAACrP,EAAAA,EAAI,C,SAAElB,EAAE,eACRa,GAAWnE,IACV,UAAC0E,EAAAA,EAAI,CAACC,UAAQ,EAACC,OAAK,EAACE,MAAMC,EAAAA,GAAAA,GAAoBZ,EAAS,UAAWnE,G,UAAU,IAE1EsD,EAAE,iBAAkB,CACnBygB,MAAMC,EAAAA,GAAAA,IAAoBhkB,KACzB,WAKT,SAACujB,GAAK,CACJU,UAAU,0BACVvW,KAAK,OACLwW,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,WAAW,QACXC,YAAahhB,EAAE,kBACfhC,MAAOA,EACPijB,QAAQ,wBACRhD,SAAUmC,EACV5lB,MAAOA,aCtGrB,SAAS0mB,GAAaC,GACpB,OAAa,OAANA,QAAoBxG,IAANwG,EAWvB,OAJA,SAA0B3mB,GACxB,OAxBF,SACEA,EACA4mB,GAEA,IAAwBvb,GAAAA,EAAAA,EAAAA,WAA+B,W,OAAOub,GAAYA,EAAS5mB,GAASA,OAAQmgB,KAA7F0G,EAAiBxb,EAAuF,GAAlGyb,EAAWzb,EAAuF,GAQ/G,OAPAgW,EAAAA,EAAAA,YAAU,WACRyF,GAAQ,SAACC,GAEP,OAD2BH,GAAWA,EAAS5mB,GACzBA,EACf+mB,OAER,CAACH,EAAU5mB,IACP6mB,EAYAG,CAAQhnB,EAAO0mB,K,wBC1BxB,IAAenN,EAAAA,EAAAA,OAAK,SAAmB,G,IAAA,IAAErH,MACvC,OACE,SAAC3H,EAAAA,EAAI,CAAC0c,SAAS,OAAO1Z,MAAM,OAAOL,eAAe,WAAW2D,WAAW,S,SACrEqB,EAAMsP,MAAMrT,KAAKnL,KAAI,SAACkD,EAAOqV,EAAGpN,GAC/B,IAAM+Y,EAAsB3L,IAAMpN,EAAKjL,OAAS,EAC1CwC,GAAWyhB,EAAAA,GAAAA,IAAejhB,GAChC,OAEE,UAACkhB,EAAAA,SAAQ,C,WACP,SAAC7c,EAAAA,EAAI,CAACsG,WAAW,M,UACf,SAACnK,EAAAA,EAAI,CAACiE,SAAS,OAAOL,GAAG,WAAWwG,GAAG,W,SACpCpL,EAASiB,YAGZugB,IAAc,SAACG,GAAAA,EAAgB,CAAC9Z,MAAM,WAN3BgO,WCAzB,SAAS+L,GAAa,G,IAmCHzS,EAEAA,EAFH,EAEA,EApCd3C,EADoB,EACpBA,MACA6E,EAFoB,EAEpBA,gBAKM,GAAQxR,EAAAA,EAAAA,MAANC,EACyC4P,GAAAA,EAAAA,GAAAA,IAA2BlD,GAApEmD,EAAyCD,EAAzCC,sBAAuBC,EAAkBF,EAAlBE,cACzBiS,EAAYrV,EAAMmE,YAAcC,EAAAA,GAAAA,YAChCzB,GAA0B6D,EAAAA,GAAAA,IAA+BxG,EAAO6E,GAEhExB,EAAkB,GAAgC,QAAhB,IAAZC,GAAAA,IAAiBf,QAAQ,GAAG,KAClDgB,EAAsB,GAAqC,QAAhB,IAAjBC,GAAAA,IAAsBjB,QAAQ,GAAG,KAC3DkB,EAAqB,GAAmC,QAAhB,IAAfC,GAAAA,IAAoBnB,QAAQ,GAAG,KACxDoB,EAAoB,GAAkC,QAAhB,IAAdC,GAAAA,IAAmBrB,QAAQ,GAAG,KAE5D,OACE,UAACzO,GAAAA,GAAU,CAACwE,MAAO,CAAEoN,QAAS,U,WAC5B,UAAC7B,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,OAAO5D,MAAM,a,SACbvB,EAAZ+hB,EAAc,mBAAwB,mBAEzC,SAAChR,GAAAA,EAAc,CACbtR,KAAMO,EACJ,wGAEF8E,GAAG,MACHwC,UAAU,kBAGd,SAACsJ,GAAAA,GAAQ,C,UACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,O,SACZ4c,EACqG,QAAlG,KAA8DrV,OAAtB,QAArC2C,EAAAA,EAAwB2B,EAAAA,GAAAA,eAAa,IAArC3B,OAAAA,EAAAA,EAAuCvC,cAAc,GAAG,KAAsC,OAAnCJ,EAAMO,aAAa/M,SAASiB,eAAQ,IAAlG,IACA,IACgG,QAAhG,KAA6DuL,OAAtB,QAApC2C,EAAAA,EAAwB2B,EAAAA,GAAAA,cAAY,IAApC3B,OAAAA,EAAAA,EAAsCvC,cAAc,GAAG,KAAqC,OAAlCJ,EAAMG,YAAY3M,SAASiB,eAAQ,IAAhG,IAAoG,YAI9G,UAACoP,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,OAAO5D,MAAM,a,SACzBvB,EAAE,mBAEL,SAAC+Q,GAAAA,EAAc,CACbtR,KAAMO,EAAE,kFACR8E,GAAG,MACHwC,UAAU,kBAGd,SAACsH,GAAoB,CAACC,YAAagB,QAGrC,UAACU,GAAAA,GAAU,C,WACT,UAACK,GAAAA,GAAQ,C,WACP,SAAC1P,EAAAA,EAAI,CAACiE,SAAS,OAAO5D,MAAM,a,SACzBvB,EAAE,6BAEL,SAAC+Q,GAAAA,EAAc,CACbtR,MACE,sB,WACE,SAACyB,EAAAA,EAAI,CAACgQ,GAAG,O,SAAQlR,EAAE,wCAAyC,CAAExI,OAAQuY,OACtE,UAAC7O,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,+BAAgC,CAAExI,OAAQyY,QACrD,UAAC/O,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,2BAA4B,CAAExI,OAAQ2Y,QACjD,UAACjP,EAAAA,EAAI,C,UAAC,KAAGlB,EAAE,yCAA0C,CAAExI,OAAQ6Y,UAGnEvL,GAAG,MACHwC,UAAU,kBAGd,SAACpG,EAAAA,EAAI,CAACiE,SAAS,O,SACZ2K,EAAgB,GAAqCpD,OAAlCoD,EAAchD,cAAc,GAAG,KAAqC,OAAlCJ,EAAMG,YAAY3M,SAASiB,QAAW,YAW/F,SAAS6gB,GAAoB,G,IAAA,IAAEtV,MAC9B,GAAQ3M,EAAAA,EAAAA,MAANC,EACDuR,GAA6C,QAA1B0Q,EAAAA,EAAAA,MAA0B,MAE9CC,EAAYrP,QAAQnG,GAASA,EAAMsP,MAAMrT,KAAKjL,OAAS,GAE7D,OACE,SAAC8C,GAAAA,GAAU,CAACC,IAAI,M,SACbiM,IACC,sB,WACE,SAACoV,GAAY,CAACpV,MAAOA,EAAO6E,gBAAiBA,IAC5C2Q,IACC,qB,UACE,UAAC3R,GAAAA,GAAU,CAACvL,MAAO,CAAEoN,QAAS,U,WAC5B,UAAC+P,OAAI,CAACnd,MAAO,CAAEwL,QAAS,OAAQnF,WAAY,U,WAC1C,SAACnK,EAAAA,EAAI,CAACiE,SAAS,OAAO5D,MAAM,a,SACzBvB,EAAE,YAEL,SAAC+Q,GAAAA,EAAc,CACbtR,KAAMO,EAAE,2EACR8E,GAAG,MACHwC,UAAU,kBAGd,SAAC8a,GAAS,CAAC1V,MAAOA,c,oUCtHlC,IAAM2V,GAAwB/iB,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,MACd,Y,OAAO,EAAJoM,KAAmB,OAAS,KAOtB,Y,OAAQ,EAALnM,MAAkBC,OAAOE,oBAEtC,Y,OAAO,EAAJgM,KAAmB,iBAAmB,uBAIzC,SAAS4W,GAA4B,G,IAKR5V,EALUA,EAAF,EAAEA,MAAUoJ,GAAI,QAAhB,EAA4C,CAA1CpJ,UAC9C6V,EAAYC,GAAc9V,GAEhC,OACE,SAAC2V,GAAqB,CAAC3W,KAAMmH,QAAQnG,G,UACnC,SAACsV,IAAmB,kBAAKlM,GAAI,CAAEpJ,MAAyB,QAAlBA,EAAK,OAALA,QAAK,IAALA,EAAAA,EAAS6V,SAAS,IAAlB7V,EAAAA,OAAsBiO,OCbnD,SAAS8H,GAAW,G,MAK1BC,EAAoCA,EACpCA,EAAmCA,EANPA,EAAF,EAAEA,MAAOhT,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,gBAClDgT,EAAiBjT,EAAoB,OAALgT,QAAK,IAALA,OAAAA,EAAAA,EAAO5V,cAAc,GAAoB,QAAf4V,EAAK,OAALA,QAAK,IAALA,OAAAA,EAAAA,EAAOE,gBAAQ,WAAfF,EAAAA,EAAiB5V,cAAc,GAEzFpB,EAAOmH,SAAa,OAAL6P,QAAK,IAALA,OAAAA,EAAAA,EAAOG,gBAAqB,OAALH,QAAK,IAALA,OAAAA,EAAAA,EAAOI,gBAC7CC,EAAQrT,EACV,GAAuCgT,OAA/B,OAALA,QAAK,IAALA,GAAoB,QAApBA,EAAAA,EAAOI,qBAAa,IAApBJ,OAAAA,EAAAA,EAAsBvhB,OAAO,SAAmC,OAAvB,OAALuhB,QAAK,IAALA,GAAmB,QAAnBA,EAAAA,EAAOG,oBAAY,IAAnBH,OAAAA,EAAAA,EAAqBvhB,QAC5D,GAAsCuhB,OAA9B,OAALA,QAAK,IAALA,GAAmB,QAAnBA,EAAAA,EAAOG,oBAAY,IAAnBH,OAAAA,EAAAA,EAAqBvhB,OAAO,SAAoC,OAAxB,OAALuhB,QAAK,IAALA,GAAoB,QAApBA,EAAAA,EAAOI,qBAAa,IAApBJ,OAAAA,EAAAA,EAAsBvhB,QAEhE,OACE,SAACD,EAAAA,EAAI,CAAC8D,MAAO,CAAE0C,eAAgB,SAAU2D,WAAY,SAAUmF,QAAS,Q,SACrE9E,GACC,sB,UACiB,OAAdiX,QAAc,IAAdA,EAAAA,EAAkB,IAAI,IAAEI,GACzB,SAACjV,GAAoB,CAAC1O,QAAS,W,OAAMuQ,GAAiBD,I,UACpD,SAACiB,GAAAA,EAAa,CAAC5I,MAAM,cAIzB,M,6dCSR,IAAMib,IAAQ1jB,EAAAA,EAAAA,IAAO4B,EAAAA,GAAK,Y,6BAAZ5B,C,MAGH,Y,OAAQ,EAALC,MAAkBC,OAAOyjB,aAGjCC,IAAmB5jB,EAAAA,EAAAA,IAAOmL,EAAAA,GAAW,Y,6BAAlBnL,C,MAMD,Y,OAAQ,EAALC,MAAkBC,OAAOgW,WAkBrC,SAAS2N,GAAS,G,IA6EzBC,EACAA,EAiB6CA,EA/C/C,EAIA,EAyBEA,EACAA,EAJmB,EA1EQvY,EAAF,EAAEA,oBAAqBC,EAAvB,EAAuBA,iBAAkBuY,EAAzC,EAAyCA,uBAClE,GAAQtjB,EAAAA,EAAAA,MAANC,EACkCsjB,EAAAA,KAAlC7D,EAAkC6D,EAAlC7D,mBAAoBF,EAAc+D,EAAd/D,UACtBgE,ECvDO,WACb,IAcQ,EAdFC,GAASC,EAAAA,GAAAA,aACTC,GAAkBC,EAAAA,EAAAA,MAClB,GAAc7jB,EAAAA,EAAAA,KAAZpD,QAG8CmJ,GAAAA,EAAAA,EAAAA,UAAS,MAAxD+d,EAA+C/d,EAAc,GAAxCge,EAA0Bhe,EAAc,GAGhB,IAClDie,EAAAA,EAAAA,IAA2B,OAAfJ,QAAe,IAAfA,OAAAA,EAAAA,EAAiBK,kBAC7BD,EAAAA,EAAAA,IAA2B,OAAfJ,QAAe,IAAfA,OAAAA,EAAAA,EAAiBM,mBAFxBC,EAA6C,EAGnD,GAH2BC,EAAwB,EAGnD,GAEKC,GAA2B1hB,EAAAA,EAAAA,UAC/B,W,IAAM,SAAkF,QAAlF,EAA2C,QAA3C,GAACwhB,EAAqBC,UAAqB,IAA3C,WAA6C5mB,QAAO,SAAC8mB,GAAkBA,OAAC,OAADA,QAAC,IAADA,OAAAA,EAAAA,EAAGC,kBAAQ,IAAlF,IAAsF,KAC5F,CAACJ,EAAqBC,IAGlBI,GAAgBC,EAAAA,EAAAA,MAEhBC,EACJL,GACAA,EAAgB7mB,QAAO,SAACoD,GACtB,QAASA,EAAMG,WAAWyjB,IAAkB5jB,EAAMhE,UAAYA,KAG3D+nB,GAAqG,QAAxE5iB,EAAAA,GAAAA,IAAS,SAAC6iB,GAAgB,CAAClH,aAAcoG,KAAyB,GAAM,MACrGe,GAEN,QAF0C9iB,EAAAA,GAAAA,IACzC,SAAC+iB,GAAAA,EAAuB,CAAC3kB,OAAQukB,EAA0BK,SAAU,W,OAAMrB,EAAOplB,KAAK,aACxF,OAEDyd,EAAAA,EAAAA,YAAU,WACJ+H,GACFa,MAGD,CAACb,IAEJ,IAAMkB,GAAqBte,EAAAA,EAAAA,cAAY,SAACue,GACtC,IAAMC,EAAkBC,GAAsBF,GAE5ClB,EADEmB,EACqBD,EAEA,QAExB,IASH,OAPAlJ,EAAAA,EAAAA,YAAU,WACJ2I,EAAyB9mB,OAAS,GACpCinB,MAGD,CAACH,EAAyB9mB,SAEtBonB,EDAoBI,GAEEplB,GAAAA,EAAAA,EAAAA,KAArBuW,EAAqBvW,EAArBuW,QAAS3Z,EAAYoD,EAAZpD,QAGVka,GAAsC,QAAtB3L,EAAAA,EAAAA,MAAsB,MAGtCsG,GAA6C,QAA1B0Q,EAAAA,EAAAA,MAA0B,MAShDkD,GAAAA,EAAAA,EAAAA,MALFC,EAKED,EALFC,iBACAC,EAIEF,EAJFE,WACAjU,EAGE+T,EAHF/T,UACiBkU,EAEfH,EAFDnU,EAAAA,GAAAA,OAAgBsU,WACCA,EAChBH,EADDnU,EAAAA,GAAAA,QAAiBsU,WAEdhgB,GAAgBwe,EAAAA,EAAAA,IAAYC,GAC5Bxe,GAAiBue,EAAAA,EAAAA,IAAYE,GAE7BpkB,IAA8C6C,EAAAA,EAAAA,UAClD,W,IAAO,E,OAAA,EAGN,IAFC,OADK,EACJuO,EAAAA,GAAAA,MAA2B,OAAb1L,QAAa,IAAbA,EAAAA,OAAiBqV,IAChC,OAFK,EAEJ3J,EAAAA,GAAAA,OAA6B,OAAdzL,QAAc,IAAdA,EAAAA,OAAkBoV,GAF7B,IAIP,CAACrV,EAAeC,IAQdggB,IAAAA,EAAAA,EAAAA,IAAmBH,EAAkBC,EAAY/f,EAAeC,EAAgB6L,GAJlFoU,GAIED,GAJFC,QACA7S,GAGE4S,GAHF5S,iBACA8S,GAEEF,GAFFE,aACAC,GACEH,GADFG,WAOEC,GxCvFS,SACbrgB,EACAC,EACA8f,GAEA,IAAM,GAAQtlB,EAAAA,EAAAA,MAANC,EACqBF,GAAAA,EAAAA,EAAAA,KAArBpD,EAAqBoD,EAArBpD,QAAS2Z,EAAYvW,EAAZuW,QACX,GAAuBuP,EAAAA,GAAAA,KAArBC,iBACFC,GAAeC,EAAAA,GAAAA,MACfC,GAAUC,EAAAA,GAAAA,IAA0B,OAAP5P,QAAO,IAAPA,EAAAA,OAAWsE,EAAWrV,GAEnDuH,GAAcpK,EAAAA,EAAAA,UAAQ,W,OAAMyjB,EAAAA,GAAAA,GAAeb,EAAY/f,KAAgB,CAACA,EAAe+f,IACvFjN,GAAiBC,EAAAA,GAAAA,MAEvB,OAAO5V,EAAAA,EAAAA,UAAQ,W,IAKkB0jB,EA4B3BA,EAhCJ,IAAKL,IAAiBppB,IAAY4I,IAAkBC,EAAgB,OAAO4C,GAE3E,IAAMie,EAAoBvZ,GAAemZ,IAAYA,EAAQjX,SAASlC,GAEtE,OAAiB,OAAbvH,QAAa,IAAbA,OAAAA,EAAAA,EAAeY,YAA4B,QAAhBigB,EAAAA,EAAAA,GAAQzpB,UAAQ,IAAhBypB,OAAAA,EAAAA,EAAkBnT,OAAOzN,IAC/C,CACL+C,SAAUJ,EAASE,KACnBie,QACED,GAAqBvZ,GACjB,mB,IAEUyZ,EAGA9uB,EACA+uB,EACAC,EAMCxoB,E,iEAXW,O,sBAAA,C,EAAM6nB,EAAiBC,EAAc,eAAWnL,EAAW,CAC3EngB,MAAO,KAAuC,OAAlCqS,EAAY4Z,SAASC,SAAS,Q,cADtCJ,EAAY,SAGZ9uB,EAASqV,EAAYC,cAAc,GACnCyZ,EAASjhB,EAAcnE,OACvBqlB,EAAOL,EAAAA,GAAQzpB,GAASyE,OAC9BiX,EAAekO,EAAW,CACxB/L,QAAS,QAAkBgM,OAAV/uB,EAAO,KAAgBgvB,OAAbD,EAAO,QAAW,OAALC,GACxChM,oBAAqB,CAAE/a,KAAM,mCAAoCzC,KAAM,CAAExF,OAAAA,EAAQ+uB,OAAAA,EAAQC,KAAAA,IACzFpc,KAAM,S,oBAEDpM,EAAK,SACZD,QAAQC,MAAM,oBAAqBA,G,mCAGvC2c,EACN+K,WAAYU,OACRzL,EACA3a,EAAE,gCAAiC,CAAEmB,OAAQmE,EAAcnE,WAG/C,QAAhBglB,EAAAA,EAAAA,GAAQzpB,UAAQ,IAAhBypB,OAAAA,EAAAA,EAAkBnT,OAAO1N,MAAgC,OAAdC,QAAc,IAAdA,OAAAA,EAAAA,EAAgBW,UACtD,CACLoC,SAAUJ,EAASG,OACnBge,QACED,GAAqBvZ,GACjB,mB,IAEUyZ,EAGA9uB,EACAgvB,EACAD,EAKCvoB,E,iEAVW,O,sBAAA,C,EAAM6nB,EAAiBC,EAAc,WAAY,CAChE,KAAsC,OAAlCjZ,EAAY4Z,SAASC,SAAS,Q,cAD/BJ,EAAY,SAGZ9uB,EAASqV,EAAYC,cAAc,GACnC0Z,EAAOL,EAAAA,GAAQzpB,GAASyE,OACxBolB,EAAShhB,EAAepE,OAC9BiX,EAAekO,EAAW,CACxB/L,QAAS,UAAoBiM,OAAVhvB,EAAO,KAAc+uB,OAAXC,EAAK,QAAa,OAAPD,GACxC/L,oBAAqB,CAAE/a,KAAM,qCAAsCzC,KAAM,CAAExF,OAAAA,EAAQgvB,KAAAA,EAAMD,OAAAA,M,oBAEpFvoB,EAAK,SACZD,QAAQC,MAAM,qBAAsBA,G,mCAGxC2c,EACN+K,WAAYU,OACRzL,EACA3a,EAAE,gCAAiC,CAAEmB,OAAQmE,EAAcnE,UAG5DgH,KACN,CAAC2d,EAAcppB,EAAS4I,EAAeC,EAAgBvF,EAAG6M,EAAamZ,EAAS5N,EAAgByN,IwCY/FF,CAAgB/lB,GAAWoR,EAAAA,GAAAA,OAAcpR,GAAWoR,EAAAA,GAAAA,QAAeqU,GAHrE/c,GAGEqd,GAHFrd,SACA+d,GAEEV,GAFFU,QACAX,GACEC,GADFD,WAEIpP,GAAoBhO,KAAaJ,EAASC,eAC1CuE,GAAQ4J,QAAWqE,EAAY6K,GAE/BpC,GAAgB9M,IAClB,EAGC,IAFC,OADF,EACGtF,EAAAA,GAAAA,MAAcyU,KACf,OAFF,EAEGzU,EAAAA,GAAAA,OAAeyU,IAFlB,IAIA,EAGC,IAFC,OADF,EACGzU,EAAAA,GAAAA,MAAcoU,IAAqBpU,EAAAA,GAAAA,MAAcyU,GAAoB,OAAL/Y,SAAK,IAALA,QAAAA,EAAAA,GAAOG,cACxE,OAFF,EAEGmE,EAAAA,GAAAA,OAAeoU,IAAqBpU,EAAAA,GAAAA,OAAeyU,GAAoB,OAAL/Y,SAAK,IAALA,QAAAA,EAAAA,GAAOO,cAF5E,GAK4E0Z,IAAAA,EAAAA,EAAAA,KAAxEC,GAAwED,GAAxEC,eAAgBC,GAAwDF,GAAxDE,oBAAqB9P,GAAmC4P,GAAnC5P,YAAa+P,GAAsBH,GAAtBG,kBAEpDC,GAAwB3B,IAAqBpU,EAAAA,GAAAA,MAAcA,EAAAA,GAAAA,OAAeA,EAAAA,GAAAA,MAE1EgW,IAAkBxgB,EAAAA,EAAAA,cACtB,SAAChM,GACCuc,GAAY/F,EAAAA,GAAAA,MAAaxW,KAE3B,CAACuc,KAEGkQ,IAAmBzgB,EAAAA,EAAAA,cACvB,SAAChM,GACCuc,GAAY/F,EAAAA,GAAAA,OAAcxW,KAE5B,CAACuc,KAGGmQ,IAAmB,EAKxB,IAJC,OADuB,EACtB9B,EAAmBC,IACpB,OAFuB,EAEtB0B,GAAiBzQ,GAC4B,QAA1C8M,EAA+B,QAA/BA,EAAAA,GAAcgC,UAAiB,IAA/BhC,OAAAA,EAAAA,EAAiC+D,iBAAS,IAA1C/D,EAAAA,EAA8C,GACC,QAA/CA,EAA6B,QAA7BA,EAAAA,GAAc2D,WAAe,IAA7B3D,OAAAA,EAAAA,EAA+BtW,cAAc,UAAE,IAA/CsW,EAAAA,EAAmD,IAJhC,GAQWgE,IAA4D,QAA5DA,EAAAA,GAAAA,IAA4B1a,GAAO6E,EAAiB7U,GAAQ,GAAzF+Z,GAA6B2Q,GAA4D,GAA/E1Q,GAAmB0Q,GAA4D,GAG9CvhB,IAAAA,EAAAA,EAAAA,WAAkB,GAA7D8Q,GAA2C9Q,GAAwB,GAAhDwhB,GAAwBxhB,GAAwB,IAG1EgW,EAAAA,EAAAA,YAAU,WACJpF,KAAa4F,GAAAA,GAAAA,SACfgL,IAAqB,KAEtB,CAAC5Q,GAAUE,KAEd,IAAM2Q,IAAuDhU,EAAAA,EAAAA,GAAeX,GAAiB3B,EAAAA,GAAAA,QACvFuW,GAAmB1U,QAAQyU,KAA4C,QAA1BlE,EAAAA,GAAcpS,EAAAA,GAAAA,cAAY,IAA1BoS,OAAAA,EAAAA,EAA4BnQ,QAAQqU,MAG/CzhB,IAAAA,EAAAA,EAAAA,WAAkB,GAAnD6J,GAAiC7J,GAAwB,GAA3C8J,GAAmB9J,GAAwB,GAE1D2hB,IAAoBhhB,EAAAA,EAAAA,cACxB,SAACue,GACCsC,IAAqB,GACrBR,GAAoB7V,EAAAA,GAAAA,MAAa+T,GAEjCxB,EAAmBwB,IAEnB0C,EAAAA,GAAAA,GAAsB,iBAAiBnC,EAAAA,GAAAA,GAAWP,MAEpD,CAAC8B,GAAqBtD,IAGlBmE,IAAiBlhB,EAAAA,EAAAA,cAAY,WAC7B8gB,IACFvQ,GAAY/F,EAAAA,GAAAA,MAAasW,GAAeH,aAEzC,CAACG,GAAgBvQ,KAEd4Q,IAAqBnhB,EAAAA,EAAAA,cACzB,SAACohB,GACCf,GAAoB7V,EAAAA,GAAAA,OAAc4W,GAClCrE,EAAmBqE,IAEnBH,EAAAA,GAAAA,GAAsB,kBAAkBnC,EAAAA,GAAAA,GAAWsC,MAGrD,CAACf,GAAqBtD,IAGlBsE,IAAqBrhB,EAAAA,EAAAA,cACzB,SAACshB,GACKR,IACFvQ,GAAY/F,EAAAA,GAAAA,MAAasW,GAAeS,SAAS,IAAIpQ,EAAAA,GAAQmQ,EAAS,MAAMX,aAGhF,CAACG,GAAgBvQ,KAGbX,IAAoB4R,EAAAA,EAAAA,IAAsC,OAAVpoB,SAAU,IAAVA,QAAAA,EAAAA,GAAYqoB,MAAiB,OAAVroB,SAAU,IAAVA,QAAAA,EAAAA,GAAYsoB,QAE/Evd,GAAYkI,QAAQ4S,IAEpB1a,IAAiBvE,EAAAA,EAAAA,cAAY,WAC7BmE,IACF8U,MAED,CAAC9U,GAAW8U,IAEf,OACE,qB,UACE,sB,WACE,SAAC0I,GAAmB,CAClB5nB,MAAOP,EAAE,QACT4K,SAAU5K,EAAE,8BACZ6K,oBAAqBA,EACrBC,iBAAkBA,EAClBH,UAAWA,GACXI,eAAgBA,MAElB,UAACwB,GAAO,CAAC9D,GAAG,YAAYzD,MAAO,CAAEojB,UAAW,S,WAC1C,UAAC5nB,GAAAA,GAAU,CAACC,IAAI,K,WACd,SAAC4nB,GAAAA,EAAkB,CACjBtF,MAAOqC,IAAqBpU,EAAAA,GAAAA,SAAiBsF,IAAY5J,GAAQ1M,EAAE,oBAAsBA,EAAE,QAC3FxF,MAAO0sB,GAAiBlW,EAAAA,GAAAA,OACxBsX,eAAgBf,GAChBgB,sBAAoB,EACpBroB,SAAUN,GAAWoR,EAAAA,GAAAA,OACrB+F,YAAaiQ,GACbwB,eAAgBX,GAChBY,MAAOf,GACPgB,iBAAkBlB,GAClBmB,cAAe/oB,GAAWoR,EAAAA,GAAAA,QAC1BvI,GAAG,sBACHmgB,iBAAe,EACfC,gBAAiBC,GAAAA,GAAAA,mBAGnB,SAACtoB,GAAAA,GAAU,CAAC4M,QAAQ,gB,UAClB,UAACtM,GAAAA,GAAO,CAACsM,QAASwJ,EAAe,gBAAkB,SAAU5R,MAAO,CAAEoN,QAAS,U,WAC7E,UAAC8Q,GAAgB,CACf5kB,QAAQ,QACRqJ,MAAM,KACNvI,QAAS,WACPioB,IAAqB,GACrBT,M,WAGF,SAACzU,EAAAA,EAAa,CACZwO,UAAU,YACVpf,MAAO3B,GAAWoR,EAAAA,GAAAA,QAAgBpR,GAAWoR,EAAAA,GAAAA,QAAgB,UAAY,UAE3E,SAAC+X,EAAAA,EAAe,CACdpI,UAAU,eACVpf,MAAO3B,GAAWoR,EAAAA,GAAAA,QAAgBpR,GAAWoR,EAAAA,GAAAA,QAAgB,UAAY,YAG9D,OAAdI,IAAuBkF,IAAYM,GAClC,SAACzX,EAAAA,EAAM,CAACb,QAAQ,OAAOmK,GAAG,uBAAuBrJ,QAAS,W,OAAM0nB,GAAkB,K,SAC/E9mB,EAAE,6BAEH,WAGR,SAACqoB,GAAAA,EAAkB,CACjB7tB,MAAO0sB,GAAiBlW,EAAAA,GAAAA,QACxB+F,YAAakQ,GACblE,MAAOqC,IAAqBpU,EAAAA,GAAAA,QAAgBsF,IAAY5J,GAAQ1M,EAAE,kBAAoBA,EAAE,MACxFsoB,eAAe,EACfpoB,SAAUN,GAAWoR,EAAAA,GAAAA,QACrB0X,iBAAkBf,GAClBgB,cAAe/oB,GAAWoR,EAAAA,GAAAA,OAC1BvI,GAAG,uBACHmgB,iBAAe,EACfC,gBAAiBC,GAAAA,GAAAA,mBAGnB,SAACzJ,EAAAA,EAAG,CAACra,MAAO,CAAEwL,QAAS6S,EAAyB,QAAU,Q,UACxD,SAAC2F,GAAU,CAAC1jB,cAAe1F,GAAWoR,EAAAA,GAAAA,OAAczL,eAAgB3F,GAAWoR,EAAAA,GAAAA,YAGhF4F,GAA8B,OAAdxF,IAAuBkF,IACtC,sB,WACE,UAACxV,GAAAA,GAAO,CAACsM,QAAQ,gBAAgBpI,MAAO,CAAEoN,QAAS,U,WACjD,SAAC9E,GAAY,CAACC,WAAW,E,UACvB,SAAC4E,EAAAA,EAAa,CAACpK,MAAM,YAEvB,SAAC5I,EAAAA,EAAM,CAACb,QAAQ,OAAOmK,GAAG,0BAA0BrJ,QAAS,W,OAAM0nB,GAAkB,O,SAClF9mB,EAAE,uBAGP,SAACmgB,GAAiB,CAAC1X,GAAG,YAAYjO,MAAO4W,EAAW6M,SAAU6I,QAE9D,KAEHxQ,GAAW,MACV,UAAC9V,GAAAA,GAAU,CAACC,IAAI,MAAMuE,MAAO,CAAEoN,QAAS,U,WACtC,SAAC7B,GAAAA,GAAU,CAACxP,MAAM,S,SACf8R,QAAQnG,MACP,sB,WACE,SAACsW,GAAK,C,SAAEhjB,EAAE,WACTuf,GACC,SAAC0J,EAAAA,EAAQ,CAAClhB,MAAM,OAAOjD,GAAG,MAAMkD,OAAO,UAEvC,SAACya,GAAU,CACTC,MAAY,OAALhW,SAAK,IAALA,QAAAA,EAAAA,GAAOwc,eACdxZ,aAAcA,GACdC,gBAAiBA,WAM3B,UAACY,GAAAA,GAAU,CAACxP,MAAM,S,WAChB,SAACiiB,GAAK,C,SAAEhjB,EAAE,yBACV,UAACkB,EAAAA,EAAI,CAAC2D,MAAI,EAACtD,MAAM,U,UACdgQ,EAAkB,IAAI,iBAMjC,SAAC8N,EAAAA,EAAG,CAAC1a,GAAG,U,UACN,SAACwR,GAAgB,CACfC,kBAAmBA,GACnBC,QAASA,EACTC,SAAUA,GACVC,eAAgBA,GAChBC,OAAQA,GACRlO,SAAUA,GACVwO,0BAA2BsM,GAAcgC,GACzC3O,SAAUA,GACVC,gBAAiBA,GACjBC,kBAAmBA,GACnB/W,WAAYA,GACZgX,aAAcA,EACdlK,MAAOA,GACPmK,eAAgBA,GAChBlE,iBAAkBA,GAClBvB,UAAWA,EACXG,gBAAiBA,EACjBwF,YAAaA,UAIjBX,IAGA,SAACzU,EAAAA,EAAyB,CAAC/B,WAAY,CAACA,GAAWqoB,MAAOroB,GAAWsoB,UAFrExb,KAAS,SAAC4V,GAA2B,CAAC5V,MAAOA,U,ugCE7VvD,IAAMyc,IAASC,EAAAA,EAAAA,IAAS,MAMXC,IAAsB/pB,EAAAA,EAAAA,IAAOyF,EAAAA,GAAK,Y,6BAAZzF,C,KAoBlB6pB,IAeJG,IAA6BhqB,EAAAA,EAAAA,IAAO+f,EAAAA,GAAI,Y,6BAAX/f,C,MAGtC,Y,OAAQ,EAALC,MAAkBgqB,aAAaC,M,YChBhCC,GAA0B,CAACnlB,EAAAA,GAAAA,QACpBolB,GAAiC,CAACplB,EAAAA,GAAAA,QAEzCqlB,GAA2B,CAACrlB,EAAAA,GAAAA,YAAqBA,EAAAA,GAAAA,QAgBjDslB,GAAsC,CAC1CC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNhiB,MAAO,OACPC,OAAQ,OAERgiB,QAAS,EACTC,QAAS,GAGLC,GAAgC,CACpCL,SAAU,WAEVM,eAAgB,QAGH,SAASC,K,IAgDbC,EAAT,YACE/tB,EAAAA,GAAAA,2BAA0B,aAAc,8CAA8CR,MAAK,SAACwuB,GAC1FC,EAAYD,MACXrR,OAAM,SAACjb,G,OAAUD,QAAQysB,IAAI,0BAA2BxsB,OAjDvD,IADQ+B,EAAAA,EAAAA,MAANC,GACayqB,EAAAA,EAAAA,KAAbC,UACsC7kB,GAAAA,EAAAA,EAAAA,WAAS,GAAhD8kB,EAAuC9kB,EAAe,GACP+kB,GADR/kB,EAAe,IAC0B,QAAjC+kB,EAAAA,EAAAA,IAAwBF,GAAS,IAAhFG,EAA+CD,EAAiC,GAA3DE,EAA0BF,EAAiC,GACvC/kB,GAAAA,EAAAA,EAAAA,UAASglB,GAAlD/f,EAAyCjF,EAA6B,GAApDgF,EAAuBhF,EAA6B,IAEzD/F,EAAAA,EAAAA,KAAZuW,SAKRsN,EAAAA,EAAAA,OAEA9H,EAAAA,EAAAA,YAAU,WACRiP,EAAuBhgB,KACtB,CAACA,EAAkBggB,IAEtB,IAUoD,EAV9C,GAAchrB,EAAAA,EAAAA,KAAZpD,QAMJyoB,GAAAA,EAAAA,EAAAA,MAFeG,EAEfH,EAFDnU,EAAAA,GAAAA,OAAgBsU,WACCA,EAChBH,EADDnU,EAAAA,GAAAA,QAAiBsU,WAEdhgB,GAAgBwe,EAAAA,EAAAA,IAAYC,GAC5Bxe,GAAiBue,EAAAA,EAAAA,IAAYE,GAkB7BX,GAhB8C,EAGnD,IAFC,OADkD,EACjDrS,EAAAA,GAAAA,MAA2B,OAAb1L,QAAa,IAAbA,EAAAA,OAAiBqV,IAChC,OAFkD,EAEjD3J,EAAAA,GAAAA,OAA6B,OAAdzL,QAAc,IAAdA,EAAAA,OAAkBoV,IAGXoQ,EAAAA,EAAAA,IAAuBhH,EAAiBze,EAAe0e,EAAkBze,IAEzE9C,EAAAA,EAAAA,UACvB,W,OAEG/F,GAAW+sB,GAAwB7oB,SAASlE,KAC/C,CAACA,KAGuB+F,EAAAA,EAAAA,UAAQ,W,OAAO/F,GAAWitB,GAAyB/oB,SAASlE,KAAU,CAACA,KAElE+F,EAAAA,EAAAA,UAAQ,W,OAAMinB,GAA+B9oB,SAASlE,KAAU,CAACA,KAEhEmJ,GAAAA,EAAAA,EAAAA,UAAc,IAA7B0kB,GAAe1kB,EAAiB,GAAjBA,EAAiB,IA8DjD,OARAgW,EAAAA,EAAAA,YAAU,WACRwO,IACA,IAAMW,EAAWC,YAAYZ,EAAe,KAC5C,OAAO,W,OAAMa,cAAcF,MAC1B,KAKD,SAACG,MAAG,CAACnmB,MAAOklB,G,UACZ,UAACkB,EAAAA,EAAI,CAACC,cAAeV,EAAiBW,oBAAqBX,EAAiBY,QAAQ,EAAOvmB,MAAO,CAACojB,UAAW,uB,WAC5G,SAAC+C,MAAG,CAACnmB,MAAO4kB,MACZ,SAAC7kB,EAAAA,EAAI,CAACgD,MAAM,OAAOL,eAAe,SAASmiB,SAAS,W,UAClD,UAAC9kB,EAAAA,EAAI,CAACG,cAAc,S,WAClB,SAACmkB,GAAmB,CAACmC,iBAAkBb,E,UACrC,SAACrB,GAA0B,CAAC3kB,GAAIgmB,EAAkB,OAAS,I,UACzD,SAACc,EAAAA,EAAO,C,UACN,SAACtI,GAAQ,CACPE,uBAAwBA,EACxBxY,oBAAqBA,EACrBC,iBAAkBA,UAKzB6f,IACC,SAACtL,EAAAA,EAAG,CAAC7O,QAAS,CAAC,OAAQ,KAAM,KAAM,SAAUzI,MAAM,OAAOC,OAAO,O,UAC/D,SAAC0jB,EAAAA,EAAM,CAACptB,QAAQ,OAAOqtB,QAASC,EAAAA,iBC/L9C,IAAMC,GAAW,WACf,OAAO,SAACzB,GAAI,KAGdyB,GAASC,OAASC,EAAAA,GAElB,W,mCCDO,SAAS1S,EAAsCrb,EAAYgC,GAEhE,IADA,IAAIgsB,EACGhuB,GAAO,C,IACaA,EAEFA,EAFdA,EAAAA,EAAAA,EAEDA,EAFRguB,EAA6D,QAApDhuB,EAAmC,QAAnCA,EAAY,QAAZA,EAAAA,EAAMguB,cAAM,IAAZhuB,EAAAA,EAA0B,QAAVA,EAAAA,EAAMhB,YAAI,IAAVgB,OAAAA,EAAAA,EAAYC,eAAO,IAAnCD,EAAAA,EAAuCA,EAAMC,eAAO,IAApDD,EAAAA,EAAwDguB,EAEjEhuB,EAAmB,QAAXA,EAAAA,EAAMA,aAAK,IAAXA,EAAAA,EAAyB,QAAVA,EAAAA,EAAMhB,YAAI,IAAVgB,OAAAA,EAAAA,EAAYiuB,cAKrC,OAFgD,KAAtC,OAAND,QAAM,IAANA,OAAAA,EAAAA,EAAQE,QAAQ,2BAA+BF,EAASA,EAAOG,UAAU,uBAAuBzuB,SAE5FsuB,GACN,IAAK,yBACH,OAAOhsB,EACL,kIAEJ,IAAK,4CACL,IAAK,wCACL,IAAK,uCACL,IAAK,uCACH,OAAOA,EACL,8HAEJ,IAAK,uCACH,OAAOA,EAAE,sFACX,IAAK,2BACH,OAAOA,EAAE,wFACX,QACE,OAAuD,KAA7C,OAANgsB,QAAM,IAANA,OAAAA,EAAAA,EAAQE,QAAQ,gCAClBnuB,QAAQC,MAAMA,EAAOguB,GACdhsB,EACL,sMAGGA,EAAE,iEAAkE,CACzEgsB,OAAQA,EAAS,MAAa,OAAPA,EAAO,KAAK,M","sources":["webpack://_N_E/./node_modules/date-fns/esm/addDays/index.js","webpack://_N_E/./node_modules/date-fns/esm/getTime/index.js","webpack://_N_E/./node_modules/date-fns/esm/getUnixTime/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfHour/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfMinute/index.js","webpack://_N_E/./node_modules/date-fns/esm/addMonths/index.js","webpack://_N_E/./node_modules/date-fns/esm/subMonths/index.js","webpack://_N_E/./node_modules/date-fns/esm/sub/index.js","webpack://_N_E/./node_modules/date-fns/esm/subDays/index.js","webpack://_N_E/./node_modules/date-fns/esm/addWeeks/index.js","webpack://_N_E/./node_modules/date-fns/esm/subWeeks/index.js","webpack://_N_E/./node_modules/dexscreener-api/dist/errors/PairNotFoundError.js","webpack://_N_E/./node_modules/dexscreener-api/dist/index.js","webpack://_N_E/?88db","webpack://_N_E/./src/components/CommitButton.tsx","webpack://_N_E/./src/components/UnsupportedCurrencyFooter.tsx","webpack://_N_E/./src/hooks/useTransactionDeadline.ts","webpack://_N_E/./src/hooks/useCurrentBlockTimestamp.ts","webpack://_N_E/./src/views/Swap/hooks/fetchTokenRisk.ts","webpack://_N_E/./src/hooks/useWrapCallback.ts","webpack://_N_E/./src/views/Swap/components/AccessRisk/RiskMessage.tsx","webpack://_N_E/./src/views/Swap/components/AccessRisk/index.tsx","webpack://_N_E/./src/components/Svg/RefreshIcon.tsx","webpack://_N_E/./src/views/Swap/components/CurrencyInputHeader.tsx","webpack://_N_E/./packages/utils/isZero.ts","webpack://_N_E/./src/hooks/useSwapCallback.ts","webpack://_N_E/./src/views/Swap/components/ConfirmationPendingContent.tsx","webpack://_N_E/./src/views/Swap/components/styleds.tsx","webpack://_N_E/./src/views/Swap/components/FormattedPriceImpact.tsx","webpack://_N_E/./src/views/Swap/components/SwapModalFooter.tsx","webpack://_N_E/./src/views/Swap/components/SwapModalHeader.tsx","webpack://_N_E/./src/views/Swap/StableSwap/components/StableSwapModalHeader.tsx","webpack://_N_E/./src/views/Swap/StableSwap/components/StableSwapModalFooter.tsx","webpack://_N_E/./src/views/Swap/components/TransactionConfirmSwapContent.tsx","webpack://_N_E/./src/views/Swap/components/ConfirmSwapModalContainer.tsx","webpack://_N_E/./src/views/Swap/components/ConfirmSwapModal.tsx","webpack://_N_E/./src/views/Swap/components/ProgressSteps.tsx","webpack://_N_E/./src/views/Swap/components/SwapCommitButton.tsx","webpack://_N_E/./src/hooks/useSwapCallArguments.ts","webpack://_N_E/./src/views/Swap/components/confirmPriceImpactWithoutFee.ts","webpack://_N_E/./src/config/constants/warningTokens.ts","webpack://_N_E/./src/config/constants/swapWarningTokens.ts","webpack://_N_E/./src/utils/shouldShowSwapWarning.ts","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/ItamWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/BondlyWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/Acknowledgement.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/CcarWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/BTTWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/RugPullWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/FREEWarning.tsx","webpack://_N_E/./src/views/Swap/components/SwapWarningModal/index.tsx","webpack://_N_E/./src/views/Swap/hooks/useRefreshBlockNumber.ts","webpack://_N_E/./src/views/Swap/components/AddressInputPanel.tsx","webpack://_N_E/./src/hooks/useLast.ts","webpack://_N_E/./src/views/Swap/components/SwapRoute.tsx","webpack://_N_E/./src/views/Swap/components/AdvancedSwapDetails.tsx","webpack://_N_E/./src/views/Swap/components/AdvancedSwapDetailsDropdown.tsx","webpack://_N_E/./src/views/Swap/components/TradePrice.tsx","webpack://_N_E/./src/views/Swap/components/SwapForm.tsx","webpack://_N_E/./src/views/Swap/hooks/useWarningImport.tsx","webpack://_N_E/./src/views/Swap/styles.tsx","webpack://_N_E/./src/views/Swap/index.tsx","webpack://_N_E/./src/pages/swap.tsx","webpack://_N_E/./src/utils/transactionErrorToUserReadableMessage.ts"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from \"../getTime/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * const result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PairNotFoundError extends Error {\n    constructor(pair) {\n        super(`The pair ${pair} was not found`);\n    }\n}\nexports.default = PairNotFoundError;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAveragePrice = exports.searchPairsMatchingQuery = exports.getPairsMatchingBaseTokenAddress = exports.getPairInformationByChain = exports.baseUri = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst PairNotFoundError_1 = __importDefault(require(\"./errors/PairNotFoundError\"));\nexports.baseUri = \"https://api.dexscreener.io/latest/dex/\";\nconst getPairInformationByChain = (chainId, pairAddress) => __awaiter(void 0, void 0, void 0, function* () {\n    const url = `${exports.baseUri}pairs/${chainId}/${pairAddress}`;\n    const response = yield axios_1.default.get(url);\n    const pairsResponse = response.data;\n    if (!pairsResponse.pair) {\n        throw new PairNotFoundError_1.default(pairAddress);\n    }\n    return pairsResponse;\n});\nexports.getPairInformationByChain = getPairInformationByChain;\nconst getPairsMatchingBaseTokenAddress = (tokenAddress) => __awaiter(void 0, void 0, void 0, function* () {\n    const url = `${exports.baseUri}tokens/${tokenAddress}`;\n    const response = yield axios_1.default.get(url);\n    const tokensResponse = response.data;\n    if (!tokensResponse.pairs) {\n        tokensResponse.pairs = [];\n    }\n    return tokensResponse;\n});\nexports.getPairsMatchingBaseTokenAddress = getPairsMatchingBaseTokenAddress;\nconst searchPairsMatchingQuery = (query) => __awaiter(void 0, void 0, void 0, function* () {\n    const url = `${exports.baseUri}search/?q=${query}`;\n    const response = yield axios_1.default.get(url);\n    return response.data;\n});\nexports.searchPairsMatchingQuery = searchPairsMatchingQuery;\nconst getAveragePrice = (tokenAddress) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const tokensResponse = yield (0, exports.getPairsMatchingBaseTokenAddress)(tokenAddress);\n        const usdPrices = tokensResponse.pairs\n            .filter((pair) => pair.priceUsd)\n            .map((pair) => Number(pair.priceUsd));\n        if (usdPrices.length === 0)\n            return 0;\n        return usdPrices.reduce((previousValue, currentValue) => (previousValue + currentValue), 0) / usdPrices.length;\n    }\n    catch (err) {\n        if (err instanceof Error)\n            console.error(`An error occurred retrieving the average usd price for token: ${tokenAddress}, ${err.message}`);\n    }\n});\nexports.getAveragePrice = getAveragePrice;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/swap\",\n      function () {\n        return require(\"private-next-pages/swap.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/swap\"])\n      });\n    }\n  ","import { Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useSwitchNetworkLoading } from 'hooks/useSwitchNetworkLoading'\nimport { useSetAtom } from 'jotai'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { hideWrongNetworkModalAtom } from './NetworkModal'\nimport Trans from './Trans'\n\nconst wrongNetworkProps: ButtonProps = {\n  variant: 'danger',\n  disabled: false,\n  children: <Trans>Wrong Network</Trans>,\n}\n\nexport const CommitButton = (props: ButtonProps) => {\n  const { isWrongNetwork } = useActiveChainId()\n  const [switchNetworkLoading] = useSwitchNetworkLoading()\n  const setHideWrongNetwork = useSetAtom(hideWrongNetworkModalAtom)\n\n  return (\n    <Button\n      {...props}\n      onClick={(e) => {\n        if (isWrongNetwork) {\n          setHideWrongNetwork(false)\n        } else {\n          props.onClick?.(e)\n        }\n      }}\n      {...(switchNetworkLoading && { disabled: true })}\n      {...(isWrongNetwork && wrongNetworkProps)}\n    />\n  )\n}\n","import { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBlockExploreLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<React.PropsWithChildren<Props>> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title={t('Unsupported Assets')} onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link\n                    external\n                    small\n                    color=\"primaryDark\"\n                    href={getBlockExploreLink(token.address, 'address', chainId)}\n                  >\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            {t(\n              'Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.',\n            )}\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const { t } = useTranslation()\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        {t('Read more about unsupported assets')}\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { ACCESS_RISK_API } from 'config/constants/endpoints'\n\nexport enum TOKEN_RISK {\n  'Low' = 'Low',\n  'Medium' = 'Medium',\n  'High' = 'High',\n}\n\nexport const TokenRiskPhases = {\n  0: TOKEN_RISK.Low,\n  1: TOKEN_RISK.Medium,\n  2: TOKEN_RISK.Medium,\n  3: TOKEN_RISK.Medium,\n  4: TOKEN_RISK.High,\n  5: TOKEN_RISK.High,\n}\n\nexport interface RiskTokenInfo {\n  address: string\n  chainId: ChainId\n  isSuccess: boolean\n  riskLevel: TOKEN_RISK\n  riskResult: string\n  scannedTs: number\n  riskLevelDescription: string\n}\n\nconst fetchRiskApi = async (address: string, chainId: number) => {\n  const response = await fetch(ACCESS_RISK_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address,\n      chain_id: chainId,\n    }),\n  })\n\n  const result = await response.json()\n  return result\n}\n\nexport const fetchRiskToken = async (address: string, chainId: number): Promise<RiskTokenInfo> => {\n  try {\n    const riskApi = await fetchRiskApi(address, chainId)\n    // eslint-disable-next-line camelcase\n    const { risk_result, scanned_ts, risk_level, risk_level_description } = riskApi.data\n\n    return {\n      isSuccess: true,\n      address,\n      chainId,\n      riskLevel: TokenRiskPhases[risk_level],\n      riskResult: risk_result,\n      scannedTs: scanned_ts,\n      riskLevelDescription: risk_level_description,\n    }\n  } catch (error) {\n    console.error('Fetch Risk Token error: ', error)\n    return {\n      isSuccess: false,\n      address: '',\n      chainId: ChainId.SOMNIA,\n      riskLevel: TokenRiskPhases[0],\n      riskResult: '',\n      scannedTs: 0,\n      riskLevelDescription: '',\n    }\n  }\n}\n","import { Currency, WNATIVE } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWNativeContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { t } = useTranslation()\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wbnbContract = useWNativeContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wbnbContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency?.isNative && WNATIVE[chainId]?.equals(outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wbnbContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.quotient.toString(16)}`,\n                  })\n                  const amount = inputAmount.toSignificant(6)\n                  const native = inputCurrency.symbol\n                  const wrap = WNATIVE[chainId].symbol\n                  addTransaction(txReceipt, {\n                    summary: `Wrap ${amount} ${native} to ${wrap}`,\n                    translatableSummary: { text: 'Wrap %amount% %native% to %wrap%', data: { amount, native, wrap } },\n                    type: 'wrap',\n                  })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance\n          ? undefined\n          : t('Insufficient %symbol% balance', { symbol: inputCurrency.symbol }),\n      }\n    }\n    if (WNATIVE[chainId]?.equals(inputCurrency) && outputCurrency?.isNative) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wbnbContract, 'withdraw', [\n                    `0x${inputAmount.quotient.toString(16)}`,\n                  ])\n                  const amount = inputAmount.toSignificant(6)\n                  const wrap = WNATIVE[chainId].symbol\n                  const native = outputCurrency.symbol\n                  addTransaction(txReceipt, {\n                    summary: `Unwrap ${amount} ${wrap} to ${native}`,\n                    translatableSummary: { text: 'Unwrap %amount% %wrap% to %native%', data: { amount, wrap, native } },\n                  })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance\n          ? undefined\n          : t('Insufficient %symbol% balance', { symbol: inputCurrency.symbol }),\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wbnbContract, chainId, inputCurrency, outputCurrency, t, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import { useMemo } from 'react'\nimport { Currency } from '@pancakeswap/sdk'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, Message, MessageText, Text, Link } from '@pancakeswap/uikit'\nimport { RiskTokenInfo, TOKEN_RISK } from 'views/Swap/hooks/fetchTokenRisk'\n\ninterface RiskMessageProps {\n  currency: Currency\n  riskTokenInfo: RiskTokenInfo\n}\n\nconst RiskMessage: React.FC<RiskMessageProps> = ({ currency, riskTokenInfo }) => {\n  const { t } = useTranslation()\n  const { riskLevel, riskLevelDescription } = riskTokenInfo\n\n  const messageVariant = useMemo(() => {\n    switch (riskLevel) {\n      case TOKEN_RISK.High:\n        return 'danger'\n      case TOKEN_RISK.Medium:\n        return 'warning'\n      default:\n        return 'success'\n    }\n  }, [riskLevel])\n\n  return (\n    <Message variant={messageVariant} icon=\"\" mt=\"10px\">\n      <MessageText bold ml=\"-12px\">\n        {currency.symbol} {t('%riskLevel% Risk', { riskLevel })}\n        <Flex mt=\"4px\">\n          <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n          <Flex flexDirection=\"column\">\n            <Text fontSize=\"14px\" lineHeight=\"120%\">\n              {riskLevelDescription}\n            </Text>\n            <Link\n              fontSize=\"14px\"\n              mt=\"8px\"\n              ml=\"auto\"\n              external\n              href=\"https://hashdit.github.io/hashdit/docs/risk-level-description/\"\n            >\n              {t('Learn More')}\n            </Link>\n          </Flex>\n        </Flex>\n      </MessageText>\n    </Message>\n  )\n}\n\nexport default RiskMessage\n","import { useState, useMemo, useCallback } from 'react'\nimport { Currency } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, Button, HelpIcon, useTooltip, Text, Link, useToast } from '@pancakeswap/uikit'\nimport { fetchRiskToken, RiskTokenInfo } from 'views/Swap/hooks/fetchTokenRisk'\nimport RiskMessage from 'views/Swap/components/AccessRisk/RiskMessage'\nimport { tokenListFromOfficialsUrlsAtom } from 'state/lists/hooks'\nimport merge from 'lodash/merge'\nimport keyBy from 'lodash/keyBy'\nimport groupBy from 'lodash/groupBy'\nimport mapValues from 'lodash/mapValues'\nimport { useAtomValue } from 'jotai'\n\ninterface AccessRiskProps {\n  inputCurrency: Currency\n  outputCurrency: Currency\n}\n\nconst AccessRisk: React.FC<AccessRiskProps> = ({ inputCurrency, outputCurrency }) => {\n  const { t } = useTranslation()\n  const { toastInfo } = useToast()\n  const tokenMap = useAtomValue(tokenListFromOfficialsUrlsAtom)\n\n  const { address: inputAddress, chainId: inputChainId } = useMemo(() => (inputCurrency as any) ?? {}, [inputCurrency])\n  const { address: outputAddress, chainId: outputChainId } = useMemo(\n    () => (outputCurrency as any) ?? {},\n    [outputCurrency],\n  )\n\n  const [{ results, loading }, setState] = useState<{\n    results: { [chainId: number]: { [address: string]: RiskTokenInfo } }\n    loading: boolean\n  }>({\n    results: {},\n    loading: false,\n  })\n  const tokensForScan = useMemo(() => {\n    const tokensToScan = []\n    if (\n      inputCurrency &&\n      !inputCurrency.isNative &&\n      !results[inputChainId]?.[inputAddress] &&\n      !tokenMap?.[inputChainId]?.[inputAddress]\n    ) {\n      tokensToScan.push(inputCurrency)\n    }\n    if (outputCurrency && !outputCurrency.isNative && !results[outputChainId]?.[outputAddress]) {\n      tokensToScan.push(outputCurrency)\n    }\n    return tokensToScan\n  }, [results, inputAddress, inputChainId, outputAddress, outputChainId, inputCurrency, outputCurrency, tokenMap])\n\n  const handleScan = useCallback(() => {\n    const fetchTokenRisks = async () => {\n      const tokenRiskResults = await Promise.all(\n        tokensForScan.map((tokenToScan) => {\n          const { address, chainId } = tokenToScan as any\n          return fetchRiskToken(address, chainId)\n        }),\n      )\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        results: merge(\n          { ...prevState.results },\n          mapValues(groupBy(tokenRiskResults, 'chainId'), (tokenRiskResult) => keyBy(tokenRiskResult, 'address')),\n        ),\n      }))\n    }\n\n    toastInfo(\n      t('Scanning Risk'),\n      t('Please wait until we scan the risk for %symbol% token', {\n        symbol: tokensForScan.map((currency) => currency.symbol).join(','),\n      }),\n    )\n    setState((prevState) => ({\n      ...prevState,\n      loading: true,\n    }))\n    fetchTokenRisks()\n  }, [tokensForScan, toastInfo, t])\n\n  const disabledButton = useMemo(() => loading || tokensForScan.length === 0, [loading, tokensForScan])\n\n  // Tooltips\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The scan result is provided by 3rd parties and may not cover every token. Therefore the result is for reference only, do NOT take it as investment or financial advice. Always DYOR!',\n        )}\n      </Text>\n      <Flex mt=\"4px\">\n        <Text>{t('Powered by')}</Text>\n        <Link ml=\"4px\" external href=\"https://www.hashdit.io/en\">\n          {t('Hashdit.')}\n        </Link>\n      </Flex>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <Flex justifyContent=\"flex-end\">\n        <Button scale=\"xs\" style={{ textTransform: 'uppercase' }} disabled={disabledButton} onClick={handleScan}>\n          {loading ? t('scanning...') : t('scan risk')}\n        </Button>\n        {tooltipVisible && tooltip}\n        <Flex ref={targetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </Flex>\n      </Flex>\n      {results[inputChainId]?.[inputAddress]?.isSuccess && (\n        <RiskMessage currency={inputCurrency} riskTokenInfo={results[inputChainId][inputAddress]} />\n      )}\n      {results[outputChainId]?.[outputAddress]?.isSuccess && (\n        <RiskMessage currency={outputCurrency} riskTokenInfo={results[outputChainId][outputAddress]} />\n      )}\n    </>\n  )\n}\n\nexport default AccessRisk\n","import { Svg } from '@pancakeswap/uikit'\n\n// NOTE: Temporary save icon here. Will move to uikit when the feature is done\n\nconst DisabledIcon = (props) => (\n  <Svg id=\"arrow_loading\" viewBox=\"0 0 24 24\" {...props}>\n    <path\n      stroke=\"none\"\n      fill=\"#D7CAEC\"\n      d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n    />\n    <defs>\n      <path\n        id=\"arrow\"\n        stroke=\"none\"\n        fill=\"none\"\n        d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n      />\n      <clipPath id=\"arrow-clip\">\n        <use xlinkHref=\"#arrow\" />\n      </clipPath>\n    </defs>\n  </Svg>\n)\n\nconst Icon = ({ disabled, ...props }) =>\n  disabled ? (\n    <DisabledIcon {...props} />\n  ) : (\n    <Svg id=\"arrow_loading\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        stroke=\"none\"\n        fill=\"#7A6EAA\"\n        d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n      />\n      <defs>\n        <path\n          id=\"arrow\"\n          stroke=\"none\"\n          fill=\"none\"\n          d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n        />\n        <clipPath id=\"arrow-clip\">\n          <use xlinkHref=\"#arrow\" />\n        </clipPath>\n      </defs>\n      <g clipPath=\"url(#arrow-clip)\">\n        <circle\n          cx=\"12\"\n          cy=\"12\"\n          r=\"5\"\n          transform=\"rotate(365,12,12)\"\n          fill=\"none\"\n          stroke=\"#D7CAEC\"\n          strokeWidth=\"16\"\n          strokeDasharray=\"30\"\n          strokeDashoffset=\"0\"\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            values=\"0;-30\"\n            begin=\"arrow_loading.click; 0.7s\"\n            repeatCount=\"indefinite\"\n            dur=\"6.3s\"\n          />\n        </circle>\n      </g>\n      <use xlinkHref=\"#arrow\" />\n      <animateTransform\n        id=\"transform_0\"\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"0 0 0\"\n        to=\"-10 0 0\"\n        dur=\"0.07s\"\n        begin=\"arrow_loading.click;\"\n        repeatCount=\"1\"\n      />\n      <animateTransform\n        id=\"transform_1\"\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"-45 0 0\"\n        to=\"390 0 0\"\n        dur=\"0.6s\"\n        begin=\"transform_0.end\"\n        repeatCount=\"1\"\n      />\n      <animateTransform\n        id=\"transform_2\"\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"390 0 0\"\n        to=\"360 0 0\"\n        dur=\"0.15s\"\n        begin=\"transform_1.end\"\n        repeatCount=\"1\"\n      />\n    </Svg>\n  )\n\nexport default Icon\n","import styled from 'styled-components'\nimport {\n  ChartIcon,\n  Flex,\n  Heading,\n  HistoryIcon,\n  IconButton,\n  NotificationDot,\n  Text,\n  useModal,\n  ChartDisableIcon,\n} from '@pancakeswap/uikit'\nimport TransactionsModal from 'components/App/Transactions/TransactionsModal'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport RefreshIcon from 'components/Svg/RefreshIcon'\nimport { ReactElement, useCallback } from 'react'\nimport { SettingsMode } from '../../../components/Menu/GlobalSettings/types'\n\ninterface Props {\n  title: string | ReactElement\n  subtitle: string\n  noConfig?: boolean\n  setIsChartDisplayed?: React.Dispatch<React.SetStateAction<boolean>>\n  isChartDisplayed?: boolean\n  hasAmount: boolean\n  onRefreshPrice: () => void\n}\n\nconst CurrencyInputContainer = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst ColoredIconButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nconst CurrencyInputHeader: React.FC<React.PropsWithChildren<Props>> = ({\n  title,\n  subtitle,\n  setIsChartDisplayed,\n  isChartDisplayed,\n  hasAmount,\n  onRefreshPrice,\n}) => {\n  const [expertMode] = useExpertModeManager()\n  const toggleChartDisplayed = () => {\n    setIsChartDisplayed((currentIsChartDisplayed) => !currentIsChartDisplayed)\n  }\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  const handleOnClick = useCallback(() => onRefreshPrice?.(), [onRefreshPrice])\n\n  return (\n    <CurrencyInputContainer>\n      <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n        {/* {setIsChartDisplayed && (\n          <ColoredIconButton onClick={toggleChartDisplayed} variant=\"text\" scale=\"sm\">\n            {isChartDisplayed ? <ChartDisableIcon color=\"textSubtle\" /> : <ChartIcon width=\"24px\" color=\"textSubtle\" />}\n          </ColoredIconButton>\n        )} */}\n        <Flex flexDirection=\"column\" alignItems=\"flex-left\" width=\"100%\" mr={18}>\n          <Heading as=\"h2\">{title}</Heading>\n        </Flex>\n        <Flex>\n          <NotificationDot show={expertMode}>\n            <GlobalSettings color=\"textSubtle\" mr=\"0\" mode={SettingsMode.SWAP_LIQUIDITY} />\n          </NotificationDot>\n          <IconButton onClick={onPresentTransactionsModal} variant=\"text\" scale=\"sm\">\n            <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n          </IconButton>\n          <IconButton variant=\"text\" scale=\"sm\" onClick={handleOnClick}>\n            <RefreshIcon disabled={!hasAmount} color=\"textSubtle\" width=\"27px\" />\n          </IconButton>\n        </Flex>\n      </Flex>\n      <Flex alignItems=\"center\">\n        {/* <Text color=\"textSubtle\" fontSize=\"14px\">\n          {subtitle}\n        </Text> */}\n      </Flex>\n    </CurrencyInputContainer>\n  )\n}\n\nexport default CurrencyInputHeader\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { SwapParameters, Trade, Currency, TradeType } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport isZero from '@pancakeswap/utils/isZero'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMemo } from 'react'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { StableTrade } from 'views/Swap/StableSwap/hooks/useStableTradeExactIn'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, isAddress } from '../utils'\nimport { transactionErrorToUserReadableMessage } from '../utils/transactionErrorToUserReadableMessage'\nimport { basisPointsToPercent } from '../utils/exchange'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall extends SwapCallEstimate {\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall extends SwapCallEstimate {\n  error: string\n}\n\ninterface SwapCallEstimate {\n  call: SwapCall\n}\n\ntype ITrade = Trade<Currency, Currency, TradeType> | StableTrade | undefined\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: ITrade, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddress: string | null, // the address of the recipient of the trade, or null if swap should be returned to sender\n  swapCalls: SwapCall[],\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const { t } = useTranslation()\n\n  const addTransaction = useTransactionAdder()\n\n  const recipient = recipientAddress === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddress !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: SwapCallEstimate[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: t('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n\n                    return { call, error: transactionErrorToUserReadableMessage(callError, t) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw new Error(errorCalls[errorCalls.length - 1].error)\n          throw new Error(t('Unexpected error. Could not estimate gas for the swap.'))\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const pct = basisPointsToPercent(allowedSlippage)\n            const inputAmount =\n              trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.inputAmount.toSignificant(3)\n                : trade.maximumAmountIn(pct).toSignificant(3)\n            const outputAmount =\n              trade.tradeType === TradeType.EXACT_OUTPUT\n                ? trade.outputAmount.toSignificant(3)\n                : trade.minimumAmountOut(pct).toSignificant(3)\n\n            const base = `Swap ${\n              trade.tradeType === TradeType.EXACT_OUTPUT ? 'max.' : ''\n            } ${inputAmount} ${inputSymbol} for ${\n              trade.tradeType === TradeType.EXACT_INPUT ? 'min.' : ''\n            } ${outputAmount} ${outputSymbol}`\n\n            const recipientAddressText =\n              recipientAddress && isAddress(recipientAddress) ? truncateHash(recipientAddress) : recipientAddress\n\n            const withRecipient = recipient === account ? base : `${base} to ${recipientAddressText}`\n\n            const translatableWithRecipient =\n              trade.tradeType === TradeType.EXACT_OUTPUT\n                ? recipient === account\n                  ? 'Swap max. %inputAmount% %inputSymbol% for %outputAmount% %outputSymbol%'\n                  : 'Swap max. %inputAmount% %inputSymbol% for %outputAmount% %outputSymbol% to %recipientAddress%'\n                : recipient === account\n                ? 'Swap %inputAmount% %inputSymbol% for min. %outputAmount% %outputSymbol%'\n                : 'Swap %inputAmount% %inputSymbol% for min. %outputAmount% %outputSymbol% to %recipientAddress%'\n\n            addTransaction(response, {\n              summary: withRecipient,\n              translatableSummary: {\n                text: translatableWithRecipient,\n                data: {\n                  inputAmount,\n                  inputSymbol,\n                  outputAmount,\n                  outputSymbol,\n                  ...(recipient !== account && { recipientAddress: recipientAddressText }),\n                },\n              },\n              type: 'swap',\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(t('Swap failed: %message%', { message: transactionErrorToUserReadableMessage(error, t) }))\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, account, chainId, recipient, recipientAddress, swapCalls, gasPrice, t, addTransaction, allowedSlippage])\n}\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn, ColumnCenter } from 'components/Layout/Column'\nimport { Trade, Currency, TradeType } from '@pancakeswap/sdk'\nimport { StableTrade } from '../StableSwap/hooks/useStableTradeExactIn'\nimport Spinner from '../Spinner'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ trade }: { trade: Trade<Currency, Currency, TradeType> | StableTrade }) {\n  const { t } = useTranslation()\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ConfirmationPendingContent\n","import { ErrorIcon, Flex, Text } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport styled, { css } from 'styled-components'\n\nexport const Wrapper = styled(Flex)`\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure33}`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure33}`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning33}`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport { warningSeverity } from 'utils/exchange'\nimport { ONE_BIPS } from 'config/constants/exchange'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport { computeTradePriceBreakdown, formatExecutionPrice, warningSeverity } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TOTAL_FEE, LP_HOLDERS_FEE, TREASURY_FEE, BUYBACK_FEE } from 'config/constants/info'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n  // width: 400px;\n`\n\nexport default function SwapModalFooter({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  onConfirm,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  onConfirm: () => void\n  swapErrorMessage?: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  const totalFeePercent = `${(TOTAL_FEE * 100).toFixed(2)}%`\n  const lpHoldersFeePercent = `${(LP_HOLDERS_FEE * 100).toFixed(2)}%`\n  const treasuryFeePercent = `${(TREASURY_FEE * 100).toFixed(4)}%`\n  const buyBackFeePercent = `${(BUYBACK_FEE * 100).toFixed(4)}%`\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: totalFeePercent })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: lpHoldersFeePercent })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: treasuryFeePercent })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: buyBackFeePercent })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 || (trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance)\n            ? t('Swap Anyway')\n            : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import { useMemo } from 'react'\nimport { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n  allowedSlippage,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n  allowedSlippage: number\n}) {\n  const { t } = useTranslation()\n\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const inputTextColor =\n    showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT && isEnoughInputBalance\n      ? 'primary'\n      : trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance\n      ? 'failure'\n      : 'text'\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least or the transaction will revert.')\n      : t('Input is estimated. You will sell at most or the transaction will revert.')\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText fontSize=\"24px\" color={inputTextColor}>\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <RowFixed style={{ width: '100%' }}>\n          <Text color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Slippage Tolerance')}\n          </Text>\n          <Text bold color=\"primary\" ml=\"auto\" textAlign=\"end\">\n            {`${allowedSlippage / 100}%`}\n          </Text>\n        </RowFixed>\n        {trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance && (\n          <Text small color=\"failure\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t('Insufficient input token balance. Your transaction may fail.')}\n          </Text>\n        )}\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { basisPointsToPercent } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from '../../components/styleds'\n\nexport default function StableSwapModalHeader({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n  allowedSlippage,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n  allowedSlippage: number\n}) {\n  const { t } = useTranslation()\n\n  const inputTextColor =\n    showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT && isEnoughInputBalance\n      ? 'primary'\n      : trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance\n      ? 'failure'\n      : 'text'\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least or the transaction will revert.')\n      : t('Input is estimated. You will sell at most or the transaction will revert.')\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText fontSize=\"24px\" color={inputTextColor}>\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT ? 'primary' : 'text'}\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <RowFixed style={{ width: '100%' }}>\n          <Text color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Slippage Tolerance')}\n          </Text>\n          <Text bold color=\"primary\" ml=\"auto\" textAlign=\"end\">\n            {`${basisPointsToPercent(allowedSlippage).toFixed(1)}%`}\n          </Text>\n        </RowFixed>\n        {trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance && (\n          <Text small color=\"failure\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t('Insufficient input token balance. Your transaction may fail.')}\n          </Text>\n        )}\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TOTAL_FEE, LP_HOLDERS_FEE, TREASURY_FEE, BUYBACK_FEE } from 'config/constants/info'\nimport { formatExecutionPrice } from 'utils/exchange'\nimport { StyledBalanceMaxMini, SwapCallbackError } from '../../components/styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function StableSwapModalFooter({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  onConfirm,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  onConfirm: () => void\n  swapErrorMessage?: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  const totalFeePercent = `${(TOTAL_FEE * 100).toFixed(2)}%`\n  const lpHoldersFeePercent = `${(LP_HOLDERS_FEE * 100).toFixed(2)}%`\n  const treasuryFeePercent = `${(TREASURY_FEE * 100).toFixed(4)}%`\n  const buyBackFeePercent = `${(BUYBACK_FEE * 100).toFixed(4)}%`\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: totalFeePercent })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: lpHoldersFeePercent })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: treasuryFeePercent })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: buyBackFeePercent })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import { useCallback, useMemo, memo } from 'react'\nimport { Currency, Trade, TradeType } from '@pancakeswap/sdk'\nimport { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { Field } from 'state/swap/actions'\nimport { computeSlippageAdjustedAmounts } from 'utils/exchange'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\nimport StableSwapModalHeader from '../StableSwap/components/StableSwapModalHeader'\nimport StableSwapModalFooter from '../StableSwap/components/StableSwapModalFooter'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(\n  tradeA: Trade<Currency, Currency, TradeType>,\n  tradeB: Trade<Currency, Currency, TradeType>,\n): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nconst TransactionConfirmSwapContent = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  recipient,\n  currencyBalances,\n  isStable,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n\n  const isEnoughInputBalance = useMemo(() => {\n    if (trade?.tradeType !== TradeType.EXACT_OUTPUT) return null\n\n    const isInputBalanceExist = !!(currencyBalances && currencyBalances[Field.INPUT])\n    const isInputBalanceBNB = isInputBalanceExist && currencyBalances[Field.INPUT].currency.isNative\n    const inputCurrencyAmount = isInputBalanceExist\n      ? isInputBalanceBNB\n        ? maxAmountSpend(currencyBalances[Field.INPUT])\n        : currencyBalances[Field.INPUT]\n      : null\n    return inputCurrencyAmount && slippageAdjustedAmounts && slippageAdjustedAmounts[Field.INPUT]\n      ? inputCurrencyAmount.greaterThan(slippageAdjustedAmounts[Field.INPUT]) ||\n          inputCurrencyAmount.equalTo(slippageAdjustedAmounts[Field.INPUT])\n      : false\n  }, [currencyBalances, trade, slippageAdjustedAmounts])\n\n  const modalHeader = useCallback(() => {\n    const SwapModalHead = isStable ? StableSwapModalHeader : SwapModalHeader\n\n    return trade ? (\n      <SwapModalHead\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        slippageAdjustedAmounts={slippageAdjustedAmounts}\n        isEnoughInputBalance={isEnoughInputBalance}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [\n    allowedSlippage,\n    onAcceptChanges,\n    recipient,\n    showAcceptChanges,\n    trade,\n    slippageAdjustedAmounts,\n    isEnoughInputBalance,\n    isStable,\n  ])\n\n  const modalBottom = useCallback(() => {\n    const SwapModalF = isStable ? StableSwapModalFooter : SwapModalFooter\n\n    return trade ? (\n      <SwapModalF\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        slippageAdjustedAmounts={slippageAdjustedAmounts}\n        isEnoughInputBalance={isEnoughInputBalance}\n      />\n    ) : null\n  }, [onConfirm, showAcceptChanges, trade, isEnoughInputBalance, slippageAdjustedAmounts, isStable])\n\n  return <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n}\n\nexport default memo(TransactionConfirmSwapContent)\n","import { Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConfirmSwapModalContainer = ({ children, handleDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Confirm Swap')} headerBackground=\"gradientCardHeader\" onDismiss={handleDismiss}>\n      {children}\n    </Modal>\n  )\n}\n\nexport default ConfirmSwapModalContainer\n","import { useCallback, memo } from 'react'\nimport { Trade, Currency, TradeType, CurrencyAmount } from '@pancakeswap/sdk'\nimport { InjectedModalProps, LinkExternal, Text } from '@pancakeswap/uikit'\nimport { TransactionErrorContent, TransactionSubmittedContent } from 'components/TransactionConfirmationModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Field } from 'state/swap/actions'\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\nimport TransactionConfirmSwapContent from './TransactionConfirmSwapContent'\nimport ConfirmSwapModalContainer from './ConfirmSwapModalContainer'\nimport useTranslation from '../../../../packages/localization/src/useTranslation'\nimport { StableTrade } from '../StableSwap/hooks/useStableTradeExactIn'\n\nconst PancakeRouterSlippageErrorMsg =\n  'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\n\nconst SwapTransactionErrorContent = ({ onDismiss, message, openSettingModal }) => {\n  const isSlippagedErrorMsg = message?.includes(PancakeRouterSlippageErrorMsg)\n\n  const handleErrorDismiss = useCallback(() => {\n    onDismiss?.()\n    if (isSlippagedErrorMsg && openSettingModal) {\n      openSettingModal()\n    }\n  }, [isSlippagedErrorMsg, onDismiss, openSettingModal])\n  \n\n  return isSlippagedErrorMsg ? (\n    <TransactionErrorContent\n      message={\n        <>\n          <Text mb=\"16px\">\n            This transaction will not succeed either due to price movement or fee on transfer. Try increasing your{' '}\n            <Text bold display=\"inline\" style={{ cursor: 'pointer' }} onClick={handleErrorDismiss}>\n              <u>slippage tolerance.</u>\n            </Text>\n          </Text>\n          <LinkExternal\n            href=\"https://docs.defipower.com/products/pancakeswap-exchange/trade-guide\"\n            style={{ width: '100%', justifyContent: 'center' }}\n          >\n            What are the potential issues with the token?\n          </LinkExternal>\n        </>\n      }\n    />\n  ) : (\n    <TransactionErrorContent message={message} onDismiss={onDismiss} />\n  )\n}\n\ninterface ConfirmSwapModalProps {\n  trade?: Trade<Currency, Currency, TradeType> | StableTrade\n  originalTrade?: Trade<Currency, Currency, TradeType> | StableTrade\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n  openSettingModal?: () => void\n  isStable?: boolean\n}\n\nconst ConfirmSwapModal: React.FC<React.PropsWithChildren<InjectedModalProps & ConfirmSwapModalProps>> = ({\n  trade,\n  originalTrade,\n  currencyBalances,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n  openSettingModal,\n  isStable,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss?.()\n  }, [customOnDismiss, onDismiss])\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <SwapTransactionErrorContent\n          openSettingModal={openSettingModal}\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <TransactionConfirmSwapContent\n          isStable={isStable}\n          trade={trade}\n          currencyBalances={currencyBalances}\n          originalTrade={originalTrade}\n          onAcceptChanges={onAcceptChanges}\n          allowedSlippage={allowedSlippage}\n          onConfirm={onConfirm}\n          recipient={recipient}\n        />\n      ),\n    [\n      isStable,\n      trade,\n      originalTrade,\n      onAcceptChanges,\n      allowedSlippage,\n      onConfirm,\n      recipient,\n      swapErrorMessage,\n      onDismiss,\n      openSettingModal,\n      currencyBalances,\n    ],\n  )\n\n  if (!chainId) return null\n\n  return (\n    <ConfirmSwapModalContainer handleDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent trade={trade} />\n      ) : txHash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={txHash}\n          onDismiss={handleDismiss}\n          currencyToAdd={trade?.outputAmount.currency}\n        />\n      ) : (\n        confirmationContent()\n      )}\n    </ConfirmSwapModalContainer>\n  )\n}\n\nexport default memo(ConfirmSwapModal)\n","import styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { useTranslation } from 'contexts/Localization'\nimport { Button, Text, useModal } from '@pancakeswap/uikit'\nimport { Currency, CurrencyAmount, Trade, TradeType } from '@pancakeswap/sdk'\n\nimport { GreyCard } from 'components/Card'\nimport { CommitButton } from 'components/CommitButton'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { WrapType } from 'hooks/useWrapCallback'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { ApprovalState } from 'hooks/useApproveCallback'\nimport CircleLoader from 'components/Loader/CircleLoader'\nimport { Field } from 'state/swap/actions'\nimport SettingsModal, { withCustomOnDismiss } from 'components/Menu/GlobalSettings/SettingsModal'\nimport { SettingsMode } from 'components/Menu/GlobalSettings/types'\nimport { useCallback, useEffect, useState } from 'react'\nimport Column from 'components/Layout/Column'\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/exchange'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport { useSwapCallArguments } from 'hooks/useSwapCallArguments'\n\nimport ConfirmSwapModal from './ConfirmSwapModal'\nimport ProgressSteps from './ProgressSteps'\nimport confirmPriceImpactWithoutFee from './confirmPriceImpactWithoutFee'\nimport { SwapCallbackError } from './styleds'\n\nconst SettingsModalWithCustomDismiss = withCustomOnDismiss(SettingsModal)\n\ninterface SwapCommitButtonPropsType {\n  swapIsUnsupported: boolean\n  account: string\n  showWrap: boolean\n  wrapInputError: string\n  onWrap: () => Promise<void>\n  wrapType: WrapType\n  approval: ApprovalState\n  approveCallback: () => Promise<void>\n  approvalSubmitted: boolean\n  currencies: {\n    INPUT?: Currency\n    OUTPUT?: Currency\n  }\n  isExpertMode: boolean\n  trade: Trade<Currency, Currency, TradeType>\n  swapInputError: string\n  currencyBalances: {\n    INPUT?: CurrencyAmount<Currency>\n    OUTPUT?: CurrencyAmount<Currency>\n  }\n  recipient: string\n  allowedSlippage: number\n  parsedIndepentFieldAmount: CurrencyAmount<Currency>\n  onUserInput: (field: Field, typedValue: string) => void\n}\n\nexport default function SwapCommitButton({\n  swapIsUnsupported,\n  account,\n  showWrap,\n  wrapInputError,\n  onWrap,\n  wrapType,\n  approval,\n  approveCallback,\n  approvalSubmitted,\n  currencies,\n  isExpertMode,\n  trade,\n  swapInputError,\n  currencyBalances,\n  recipient,\n  allowedSlippage,\n  parsedIndepentFieldAmount,\n  onUserInput,\n}: SwapCommitButtonPropsType) {\n  const { t } = useTranslation()\n  const [singleHopOnly] = useUserSingleHopOnly()\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n  // the callback to execute the swap\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipient)\n\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n    swapCalls,\n  )\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // Handlers\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash, setSwapState])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash, setSwapState])\n\n  // End Handlers\n\n  // Modals\n  const [indirectlyOpenConfirmModalState, setIndirectlyOpenConfirmModalState] = useState(false)\n\n  const [onPresentSettingsModal] = useModal(\n    <SettingsModalWithCustomDismiss\n      customOnDismiss={() => setIndirectlyOpenConfirmModalState(true)}\n      mode={SettingsMode.SWAP_LIQUIDITY}\n    />,\n  )\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      currencyBalances={currencyBalances}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n      openSettingModal={onPresentSettingsModal}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  // End Modals\n\n  const onSwapHandler = useCallback(() => {\n    if (isExpertMode) {\n      handleSwap()\n    } else {\n      setSwapState({\n        tradeToConfirm: trade,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n      })\n      onPresentConfirmModal()\n    }\n  }, [isExpertMode, handleSwap, onPresentConfirmModal, trade])\n\n  // useEffect\n  useEffect(() => {\n    if (indirectlyOpenConfirmModalState) {\n      setIndirectlyOpenConfirmModalState(false)\n      setSwapState((state) => ({\n        ...state,\n        swapErrorMessage: undefined,\n      }))\n      onPresentConfirmModal()\n    }\n  }, [indirectlyOpenConfirmModalState, onPresentConfirmModal, setSwapState])\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  if (swapIsUnsupported) {\n    return (\n      <Button width=\"100%\" disabled>\n        {t('Unsupported Asset')}\n      </Button>\n    )\n  }\n\n  if (!account) {\n    return <ConnectWalletButton width=\"100%\" />\n  }\n\n  if (showWrap) {\n    return (\n      <CommitButton width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n        {wrapInputError ?? (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n      </CommitButton>\n    )\n  }\n\n  const noRoute = !trade?.route\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedIndepentFieldAmount?.greaterThan(BIG_INT_ZERO),\n  )\n\n  if (noRoute && userHasSpecifiedInputOutput) {\n    return (\n      <GreyCard style={{ textAlign: 'center', padding: '0.75rem' }}>\n        <Text color=\"textSubtle\">{t('Insufficient liquidity for this trade.')}</Text>\n        {singleHopOnly && <Text color=\"textSubtle\">{t('Try enabling multi-hop trades.')}</Text>}\n      </GreyCard>\n    )\n  }\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const isValid = !swapInputError\n\n  if (showApproveFlow) {\n    return (\n      <>\n        <RowBetween>\n          <CommitButton\n            variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n            onClick={approveCallback}\n            disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n            width=\"48%\"\n          >\n            {approval === ApprovalState.PENDING ? (\n              <AutoRow gap=\"6px\" justify=\"center\">\n                {t('Enabling')} <CircleLoader stroke=\"white\" />\n              </AutoRow>\n            ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n              t('Enabled')\n            ) : (\n              t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n            )}\n          </CommitButton>\n          <CommitButton\n            variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n            onClick={() => {\n              onSwapHandler()\n            }}\n            width=\"48%\"\n            id=\"swap-button\"\n            disabled={!isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)}\n          >\n            {priceImpactSeverity > 3 && !isExpertMode\n              ? t('Price Impact High')\n              : priceImpactSeverity > 2\n              ? t('Swap Anyway')\n              : t('Swap')}\n          </CommitButton>\n        </RowBetween>\n        <Column style={{ marginTop: '1rem' }}>\n          <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n        </Column>\n        {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <CommitButton\n        variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n        onClick={() => {\n          onSwapHandler()\n        }}\n        id=\"swap-button\"\n        width=\"100%\"\n        disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n      >\n        {swapInputError ||\n          (priceImpactSeverity > 3 && !isExpertMode\n            ? t('Price Impact Too High')\n            : priceImpactSeverity > 2\n            ? t('Swap Anyway')\n            : t('Swap'))}\n      </CommitButton>\n\n      {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n    </>\n  )\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType, Currency } from '@pancakeswap/sdk'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMemo } from 'react'\nimport { BIPS_BASE } from 'config/constants/exchange'\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'config/constants'\nimport { useRouterContract } from 'utils/exchange'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nexport interface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nexport function useSwapCallArguments(\n  trade: Trade<Currency, Currency, TradeType> | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddress: string | null, // the address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId } = useActiveWeb3React()\n\n  const recipient = recipientAddress === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n  const contract = useRouterContract()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !account || !chainId || !deadline) return []\n\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, contract, deadline, recipient, trade])\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ContextApi } from '@pancakeswap/localization'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from 'config/constants/exchange'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const bscWarningTokens = {\n  pokemoney: new Token(ChainId.BSC, '0x32ff5b4C3B1744F0344D96fA2f87799Ed2805749', 18, 'PMY', 'Pokemoney Coin', ''),\n  free: new Token(ChainId.BSC, '0x880BCe9321c79cAc1D290De6d31DDE722C606165', 8, 'FREE', 'Freedom Protocol Token', ''),\n  safemoon: new Token(\n    ChainId.BSC,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n}\n\nexport const bscTestnetWarningTokens = {}\n","import { Token } from '@pancakeswap/sdk'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { bscWarningTokens } from 'config/constants/warningTokens'\n\nconst { bondly, itam, ccar, bttold } = bscTokens\nconst { pokemoney, free, safemoon } = bscWarningTokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n  itam,\n  ccar,\n  bttold,\n  pokemoney,\n  free,\n}\n\nexport default SwapWarningTokens\n","import { Token } from '@pancakeswap/sdk'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\n\nconst swapWarningTokens = Object.values(SwapWarningTokens)\n\nconst shouldShowSwapWarning = (swapCurrency: Token) => {\n  return swapWarningTokens.some((warningToken) => warningToken.equals(swapCurrency))\n}\n\nexport default shouldShowSwapWarning\n","import { useTranslation } from 'contexts/Localization'\nimport { Text, Link } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  // Break translation sentences into pieces because the current translation approach doesn't support Link interpolation.\n  return (\n    <>\n      <Text>\n        {t('SAFEMOON has been migrated to')}{' '}\n        <Link\n          style={{ display: 'inline' }}\n          external\n          href=\"https://bscscan.com/address/0x42981d0bfbAf196529376EE702F2a9Eb9092fcB5\"\n        >\n          {t('a new contract address.')}\n        </Link>{' '}\n        {t(\n          'Trading on the old address may result in the complete loss of your assets. For more information please refer to',\n        )}{' '}\n        <Link style={{ display: 'inline' }} external href=\"https://twitter.com/safemoon/status/1477770592031887360\">\n          {t(\"Safemoon's announcement\")}.\n        </Link>\n      </Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import { useTranslation } from 'contexts/Localization'\nimport { Text, Link } from '@pancakeswap/uikit'\n\nconst ItamWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t('ITAM has been rebranded as ITAM CUBE.')}{' '}\n        <Link style={{ display: 'inline' }} external href=\"https://itam.network/swap\">\n          {t('Please proceed to ITAM bridge to conduct a one-way swap of your ITAM tokens.')}\n        </Link>{' '}\n        {t('All transfers of the old ITAM token will be disabled after the swap.')}\n      </Text>\n    </>\n  )\n}\n\nexport default ItamWarning\n","import { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liquidity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<React.PropsWithChildren<AcknowledgementProps>> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import { useTranslation } from 'contexts/Localization'\nimport { Text, Link } from '@pancakeswap/uikit'\n\nconst CcarWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t('Crypto Cars (CCAR) has been migrated to')}{' '}\n        <Link\n          style={{ display: 'inline' }}\n          external\n          href=\"https://bscscan.com/token/0x322e5015Cc464Ada7f99dE7131CE494dE1834396\"\n        >\n          {t('a new contract address.')}\n        </Link>{' '}\n        {t(\n          'Trading on the old address may result in the complete loss of your assets. For more information please refer to',\n        )}{' '}\n        <Link style={{ display: 'inline' }} external href=\"https://t.me/Crypto_Cars_Official/465037\">\n          {t('the announcement.')}\n        </Link>\n      </Text>\n    </>\n  )\n}\n\nexport default CcarWarning\n","import { useTranslation } from 'contexts/Localization'\nimport { Text, Link, LinkExternal } from '@pancakeswap/uikit'\n\nconst BTTWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t(\n          'Please note that this is the old BTT token, which has been swapped to the new BTT tokens in the following ratio:',\n        )}\n      </Text>\n      <Text>1 BTT (OLD) = 1,000 BTT (NEW)</Text>\n      <Text mb=\"8px\">\n        {t('Trade the new BTT token')}{' '}\n        <Link\n          style={{ display: 'inline' }}\n          href=\"https://app.hendotech.co/swap?outputCurrency=0x352Cb5E19b12FC216548a2677bD0fce83BaE434B\"\n        >\n          {t('here')}\n        </Link>\n      </Text>\n      <LinkExternal href=\"https://medium.com/@BitTorrent/tutorial-how-to-swap-bttold-to-btt-453264d7142\">\n        {t('For more details on the swap, please refer here.')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default BTTWarning\n","import { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst RugPullWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('Suspicious rugpull token')}</Text>\n    </>\n  )\n}\n\nexport default RugPullWarning\n","import { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst FREEWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t(\n          'Risk Warning: This token is subject to high price risk. Please do your own research before trading this token. Please also note that as of 24 June 2022 there is also a reflection fee for every transfer of FREE ranging from 2.5 to 5% per trade/transfer.',\n        )}\n      </Text>\n    </>\n  )\n}\n\nexport default FREEWarning\n","import styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from '@pancakeswap/tokens'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport ItamWarning from './ItamWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\nimport CcarWarning from './CcarWarning'\nimport BTTWarning from './BTTWarning'\nimport RugPullWarning from './RugPullWarning'\nimport FREEWarning from './FREEWarning'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\nconst SwapWarningModal: React.FC<React.PropsWithChildren<SwapWarningModalProps>> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n    [SwapWarningTokensConfig.itam.address]: {\n      symbol: SwapWarningTokensConfig.itam.symbol,\n      component: <ItamWarning />,\n    },\n    [SwapWarningTokensConfig.ccar.address]: {\n      symbol: SwapWarningTokensConfig.ccar.symbol,\n      component: <CcarWarning />,\n    },\n    [SwapWarningTokensConfig.bttold.address]: {\n      symbol: SwapWarningTokensConfig.bttold.symbol,\n      component: <BTTWarning />,\n    },\n    [SwapWarningTokensConfig.pokemoney.address]: {\n      symbol: SwapWarningTokensConfig.pokemoney.symbol,\n      component: <RugPullWarning />,\n    },\n    [SwapWarningTokensConfig.free.address]: {\n      symbol: SwapWarningTokensConfig.free.symbol,\n      component: <FREEWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer $minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradientCardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useState, useCallback, useEffect } from 'react'\nimport { useSWRConfig } from 'swr'\n\nexport const useRefreshBlockNumber = () => {\n  const [isLoading, setFetch] = useState(false)\n\n  const refreshBlockNumber = useCallback(() => {\n    if (!isLoading) {\n      setFetch(true)\n    }\n  }, [isLoading])\n\n  const { mutate } = useSWRConfig()\n  const { chainId } = useActiveWeb3React()\n\n  useEffect(() => {\n    if (!isLoading) return\n\n    mutate(['blockNumber', chainId])\n\n    // setTimeout is used to demonstrate the loading\n    // because the real loading state occurs on multicall state\n    // we don't know when the fetch is finished.\n    setTimeout(() => setFetch(false), 500)\n  }, [mutate, isLoading, chainId])\n\n  return { refreshBlockNumber, isLoading }\n}\n\nexport default useRefreshBlockNumber\n","import { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBlockExploreLink, getBlockExploreName } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const address = isAddress(value) ? value : undefined\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBlockExploreLink(address, 'address', chainId)}>\n                  (\n                  {t('View on %site%', {\n                    site: getBlockExploreName(chainId),\n                  })}\n                  )\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(() => (filterFn && filterFn(value) ? value : undefined))\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import { Fragment, memo } from 'react'\nimport { Trade, Currency, TradeType } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade<Currency, Currency, TradeType> }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import { Trade, TradeType, Currency } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { TOTAL_FEE, LP_HOLDERS_FEE, TREASURY_FEE, BUYBACK_FEE } from 'config/constants/info'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({\n  trade,\n  allowedSlippage,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  allowedSlippage: number\n}) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  const totalFeePercent = `${(TOTAL_FEE * 100).toFixed(2)}%`\n  const lpHoldersFeePercent = `${(LP_HOLDERS_FEE * 100).toFixed(2)}%`\n  const treasuryFeePercent = `${(TREASURY_FEE * 100).toFixed(4)}%`\n  const buyBackFeePercent = `${(BUYBACK_FEE * 100).toFixed(4)}%`\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n            placement=\"top-start\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n            placement=\"top-start\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: totalFeePercent })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: lpHoldersFeePercent })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: treasuryFeePercent })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: buyBackFeePercent })}</Text>\n              </>\n            }\n            ml=\"4px\"\n            placement=\"top-start\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade<Currency, Currency, TradeType>\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                    placement=\"top-start\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 500px;\n  // border: 2px solid #03d5c0;\n  border-radius: 12px;\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import { Price, Currency } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price<Currency, Currency>\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import { SetStateAction, useCallback, useEffect, useState, Dispatch, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Currency, CurrencyAmount, Percent } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, IconButton, ArrowUpDownIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { useSwapActionHandlers } from 'state/swap/useSwapActionHandlers'\nimport AccessRisk from 'views/Swap/components/AccessRisk'\n\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport { CommonBasesType } from 'components/SearchModal/types'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\n\nimport { Field } from 'state/swap/actions'\nimport { useDerivedSwapInfo, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks'\n\nimport replaceBrowserHistory from '@pancakeswap/utils/replaceBrowserHistory'\nimport { currencyId } from 'utils/currencyId'\n\nimport CurrencyInputHeader from './CurrencyInputHeader'\nimport SwapCommitButton from './SwapCommitButton'\nimport useWarningImport from '../hooks/useWarningImport'\nimport useRefreshBlockNumberID from '../hooks/useRefreshBlockNumber'\nimport AddressInputPanel from './AddressInputPanel'\nimport AdvancedSwapDetailsDropdown from './AdvancedSwapDetailsDropdown'\nimport TradePrice from './TradePrice'\nimport { ArrowWrapper, Wrapper } from './styleds'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nconst SwitchIconButton = styled(IconButton)`\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\n  .icon-up-down {\n    display: none;\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    .icon-down {\n      display: none;\n      fill: white;\n    }\n    .icon-up-down {\n      display: block;\n      fill: white;\n    }\n  }\n`\n\ninterface SwapForm {\n  isChartExpanded: boolean\n  isChartDisplayed: boolean\n  setIsChartDisplayed: Dispatch<SetStateAction<boolean>>\n}\n\nexport default function SwapForm({ setIsChartDisplayed, isChartDisplayed, isAccessTokenSupported }) {\n  const { t } = useTranslation()\n  const { refreshBlockNumber, isLoading } = useRefreshBlockNumberID()\n  const warningSwapHandler = useWarningImport()\n\n  const { account, chainId } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state & price data\n  const {\n    independentField,\n    typedValue,\n    recipient,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.INPUT]: inputCurrency ?? undefined,\n      [Field.OUTPUT]: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency],\n  )\n\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo(independentField, typedValue, inputCurrency, outputCurrency, recipient)\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage, chainId)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount<Currency> | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  const handleInputSelect = useCallback(\n    (currencyInput) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, currencyInput)\n\n      warningSwapHandler(currencyInput)\n\n      replaceBrowserHistory('inputCurrency', currencyId(currencyInput))\n    },\n    [onCurrencySelection, warningSwapHandler],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (currencyOutput) => {\n      onCurrencySelection(Field.OUTPUT, currencyOutput)\n      warningSwapHandler(currencyOutput)\n\n      replaceBrowserHistory('outputCurrency', currencyId(currencyOutput))\n    },\n\n    [onCurrencySelection, warningSwapHandler],\n  )\n\n  const handlePercentInput = useCallback(\n    (percent) => {\n      if (maxAmountInput) {\n        onUserInput(Field.INPUT, maxAmountInput.multiply(new Percent(percent, 100)).toExact())\n      }\n    },\n    [maxAmountInput, onUserInput],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const hasAmount = Boolean(parsedAmount)\n\n  const onRefreshPrice = useCallback(() => {\n    if (hasAmount) {\n      refreshBlockNumber()\n    }\n  }, [hasAmount, refreshBlockNumber])\n\n  return (\n    <>\n      <>\n        <CurrencyInputHeader\n          title={t('Swap')}\n          subtitle={t('Trade tokens in an instant')}\n          setIsChartDisplayed={setIsChartDisplayed}\n          isChartDisplayed={isChartDisplayed}\n          hasAmount={hasAmount}\n          onRefreshPrice={onRefreshPrice}\n        />\n        <Wrapper id=\"swap-page\" style={{ minHeight: '412px' }}>\n          <AutoColumn gap=\"sm\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              showQuickInputButton\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onPercentInput={handlePercentInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n              showCommonBases\n              commonBasesType={CommonBasesType.SWAP_LIMITORDER}\n            />\n\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <SwitchIconButton\n                  variant=\"light\"\n                  scale=\"sm\"\n                  onClick={() => {\n                    setApprovalSubmitted(false) // reset 2 step UI for approvals\n                    onSwitchTokens()\n                  }}\n                >\n                  <ArrowDownIcon\n                    className=\"icon-down\"\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                  <ArrowUpDownIcon\n                    className=\"icon-up-down\"\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </SwitchIconButton>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n              showCommonBases\n              commonBasesType={CommonBasesType.SWAP_LIMITORDER}\n            />\n\n            <Box style={{ display: isAccessTokenSupported ? 'block' : 'none' }}>\n              <AccessRisk inputCurrency={currencies[Field.INPUT]} outputCurrency={currencies[Field.OUTPUT]} />\n            </Box>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"7px\" style={{ padding: '0 16px' }}>\n                <RowBetween align=\"center\">\n                  {Boolean(trade) && (\n                    <>\n                      <Label>{t('Price')}</Label>\n                      {isLoading ? (\n                        <Skeleton width=\"100%\" ml=\"8px\" height=\"24px\" />\n                      ) : (\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      )}\n                    </>\n                  )}\n                </RowBetween>\n                <RowBetween align=\"center\">\n                  <Label>{t('Slippage Tolerance')}</Label>\n                  <Text bold color=\"primary\">\n                    {allowedSlippage / 100}%\n                  </Text>\n                </RowBetween>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"0.25rem\">\n            <SwapCommitButton\n              swapIsUnsupported={swapIsUnsupported}\n              account={account}\n              showWrap={showWrap}\n              wrapInputError={wrapInputError}\n              onWrap={onWrap}\n              wrapType={wrapType}\n              parsedIndepentFieldAmount={parsedAmounts[independentField]}\n              approval={approval}\n              approveCallback={approveCallback}\n              approvalSubmitted={approvalSubmitted}\n              currencies={currencies}\n              isExpertMode={isExpertMode}\n              trade={trade}\n              swapInputError={swapInputError}\n              currencyBalances={currencyBalances}\n              recipient={recipient}\n              allowedSlippage={allowedSlippage}\n              onUserInput={onUserInput}\n            />\n          </Box>\n        </Wrapper>\n        {!swapIsUnsupported ? (\n          trade && <AdvancedSwapDetailsDropdown trade={trade} />\n        ) : (\n          <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n        )}\n      </>\n    </>\n  )\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { useModal } from '@pancakeswap/uikit'\n\nimport { useRouter } from 'next/router'\n\nimport shouldShowSwapWarning from 'utils/shouldShowSwapWarning'\n\nimport { useCurrency, useAllTokens } from 'hooks/Tokens'\nimport { useDefaultsFromURLSearch } from 'state/swap/hooks'\nimport ImportTokenWarningModal from 'components/ImportTokenWarningModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport SwapWarningModal from '../components/SwapWarningModal'\n\nexport default function useWarningImport() {\n  const router = useRouter()\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const { chainId } = useActiveWeb3React()\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c?.isToken) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  const defaultTokens = useAllTokens()\n\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens) && token.chainId === chainId\n    })\n\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />, false)\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => router.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const swapWarningHandler = useCallback((currencyInput) => {\n    const showSwapWarning = shouldShowSwapWarning(currencyInput)\n    if (showSwapWarning) {\n      setSwapWarningCurrency(currencyInput)\n    } else {\n      setSwapWarningCurrency(null)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  return swapWarningHandler\n}\n","import styled, { keyframes } from 'styled-components';\nimport { Box, Flex } from '@pancakeswap/uikit'\n\nconst rotate = keyframes`\n  100% {\n    transform: rotate(1turn);\n  }\n`;\n\nexport const StyledSwapContainer = styled(Flex)<{ $isChartExpanded: boolean }>`\n  position: relative;\n  z-index: 0;\n  margin: 20px;\n  border-radius: 30px;\n  overflow: hidden;\n  padding: 4px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -2;\n    left: -50%;\n    top: -50%;\n    width: 200%;\n    height: 200%;\n    background-color: #1a232a;\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-image: conic-gradient(transparent, rgba(68, 239, 255, 1), transparent 20%);\n    animation: ${rotate} 2s linear infinite;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    left: 6px;\n    top: 6px;\n    width: calc(100% - 12px);\n    height: calc(100% - 12px);\n    border-radius: 5px;\n  }\n`;\n\nexport const StyledInputCurrencyWrapper = styled(Box)`\n  max-width: 451px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 350px;\n  }\n  min-width: 300px;\n`\n","/* eslint-disable no-param-reassign */\nimport { useEffect, useMemo, useState } from 'react'\nimport { CSSProperties } from 'react';\nimport { ChainId, Currency } from '@pancakeswap/sdk'\nimport { Heading, Text, Box, Flex, BottomDrawer, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { EXCHANGE_DOCS_URLS } from 'config/constants'\nimport { useDefaultsFromURLSearch } from 'state/limitOrders/hooks'\nimport { AppBody } from 'components/App'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useCurrency } from '../../hooks/Tokens'\nimport { Field } from '../../state/swap/actions'\nimport { useSwapState, useSingleTokenSwapInfo } from '../../state/swap/hooks'\nimport { useExchangeChartManager } from '../../state/user/hooks'\nimport Page from '../Page'\nimport PriceChartContainer from './components/Chart/PriceChartContainer'\n\nimport SwapForm from './components/SwapForm'\nimport StableSwapFormContainer from './StableSwap'\nimport { StyledInputCurrencyWrapper, StyledSwapContainer } from './styles'\nimport SwapTab, { SwapType } from './components/SwapTab'\n\nimport { Display7 } from \"../../components/Display7\";\nimport { Display14 } from \"../../components/Display14\";\nimport { getPairsMatchingBaseTokenAddress, getPairInformationByChain } from \"dexscreener-api\"\nimport { pulseChainTokens } from '@pancakeswap/tokens'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport { BURN_ADDRESS } from 'config/constants'\n\nconst CHART_SUPPORT_CHAIN_IDS = [ChainId.SOMNIA]\nexport const ACCESS_TOKEN_SUPPORT_CHAIN_IDS = [ChainId.SOMNIA]\n\nconst STABLE_SUPPORT_CHAIN_IDS = [ChainId.BSC_TESTNET, ChainId.SOMNIA]\n\nconst textBox: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n  backgroundColor: 'rgba(100, 100, 100, 0.3)',\n  borderRadius: '10px',\n  border: '4px solid lightgray',\n  padding: '10px',\n  marginBottom: '25px',\n  width: 'min(100%, 620px)',\n};\n\nconst gradientOverlayStyle: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  // background: 'radial-gradient(circle, rgba(24, 48, 128, 1), rgba(12, 24, 64, 1), rgba(6, 12, 32, 1), rgba(0, 0, 0, 1), black)',\n  opacity: 1,\n  zIndex: -1,\n};\n\nconst backgroundLogo: CSSProperties = {\n  position: 'relative',\n  // background: `url('/images/home/lunar-bunny/background_logo.png') right bottom no-repeat`,\n  backgroundSize: 'auto',\n};\n\nexport default function Swap() {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const [isChartExpanded, setIsChartExpanded] = useState(false)\n  const [userChartPreference, setUserChartPreference] = useExchangeChartManager(isMobile)\n  const [isChartDisplayed, setIsChartDisplayed] = useState(userChartPreference)\n\n  const { account } = useActiveWeb3React()\n  // const XFNCurrency = useCurrency(pulseChainTokens.xfn.address)\n  // const XFNBalance = useCurrencyBalance(account ?? undefined, XFNCurrency ?? undefined)\n  // const XFNBurnedBalance = useCurrencyBalance(BURN_ADDRESS, XFNCurrency ?? undefined)\n\n  useDefaultsFromURLSearch()\n\n  useEffect(() => {\n    setUserChartPreference(isChartDisplayed)\n  }, [isChartDisplayed, setUserChartPreference])\n\n  const { chainId } = useActiveWeb3React()\n\n  // swap state & price data\n  const {\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  const singleTokenPrice = useSingleTokenSwapInfo(inputCurrencyId, inputCurrency, outputCurrencyId, outputCurrency)\n\n  const isChartSupported = useMemo(\n    () =>\n      // avoid layout shift, by default showing\n      !chainId || CHART_SUPPORT_CHAIN_IDS.includes(chainId),\n    [chainId],\n  )\n\n  const isStableSupported = useMemo(() => !chainId || STABLE_SUPPORT_CHAIN_IDS.includes(chainId), [chainId])\n\n  const isAccessTokenSupported = useMemo(() => ACCESS_TOKEN_SUPPORT_CHAIN_IDS.includes(chainId), [chainId])\n\n  const [XFNStats, setXFNStats] = useState<any>('')\n\n  function fetchXFNStats() {\n    getPairInformationByChain(\"pulsechain\", \"0xc8df4af0c613c8820be2e84e082c6d62afbd4226\").then((responseData) => {\n      setXFNStats(responseData);\n    }).catch((error) => console.log('Error fetching XFNStats', error))\n  }\n\n  function calculateSuffix(balance: number): { multipliedBalance: number; suffix: string } {\n    let suffix = ''; // Can be \"K\" for thousand, \"M\" for million, \"B\" for billion, \"T\" for trillion\n\n    if (balance >= 1e12) {\n      balance /= 1e12;\n      suffix = 'T';\n    } else if (balance >= 1e9) {\n      balance /= 1e9;\n      suffix = 'B';\n    } else if (balance >= 1e6) {\n      balance /= 1e6;\n      suffix = 'M';\n    } else if (balance > 1000) {\n      balance /= 1000;\n      suffix = 'K';\n    } // If the balance is less than 1000, no suffix needed.\n\n    return { multipliedBalance: balance, suffix };\n  }\n\n  function calculateFormattedString(balance: number, length: number, suffix: string): string {\n    if (suffix != '') {\n      length = length - 1\n    }\n\n    let formattedString: string;\n    if (balance < 1) {\n      // If the number is less than one, we want to keep only five significant digits including leading zeros before decimal point.\n      const precision = Math.max(length - balance.toString().split('.')[0].length, 0);\n      formattedString = `${balance.toFixed(precision)}`;\n    } else {\n      const precision = Math.max(length - balance.toString().split('.')[0].length, 0);\n      formattedString = `${balance.toFixed(precision)}`;\n    }\n    const decimalPointIndex = formattedString.indexOf(\".\");\n    if (decimalPointIndex !== -1) {\n      // Calculate ASCII code for corresponding letter character\n      let charCode = 97 + parseInt(formattedString[decimalPointIndex-1]);\n      // Replace decimal point and leading number with the calculated letter to encode a digit with a decimal point\n      formattedString = formattedString.replace(formattedString[decimalPointIndex-1] + \".\", String.fromCharCode(charCode));\n    }\n\n    return formattedString + suffix;\n  }\n\n\n  useEffect(() => {\n    fetchXFNStats();\n    const interval = setInterval(fetchXFNStats, 30000);\n    return () => clearInterval(interval) ;\n  }, []);\n\n\n\n  return (\n    <div style={backgroundLogo}>\n    <Page removePadding={isChartExpanded} hideFooterOnDesktop={isChartExpanded} isSwap={false} style={{minHeight: \"calc(100vh - 190px)\"}}>\n      <div style={gradientOverlayStyle}></div>\n      <Flex width=\"100%\" justifyContent=\"center\" position=\"relative\">\n        <Flex flexDirection=\"column\">\n          <StyledSwapContainer $isChartExpanded={isChartExpanded}>\n            <StyledInputCurrencyWrapper mt={isChartExpanded ? '24px' : '0'}>\n              <AppBody>\n                <SwapForm\n                  isAccessTokenSupported={isAccessTokenSupported}\n                  setIsChartDisplayed={setIsChartDisplayed}\n                  isChartDisplayed={isChartDisplayed}\n                />\n              </AppBody>\n            </StyledInputCurrencyWrapper>\n          </StyledSwapContainer>\n          {isChartExpanded && (\n            <Box display={['none', null, null, 'block']} width=\"100%\" height=\"100%\">\n              <Footer variant=\"side\" helpUrl={EXCHANGE_DOCS_URLS} />\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </Page>\n    </div>\n  )\n}\n","import { CHAIN_IDS } from 'utils/wagmi'\nimport Swap from '../views/Swap'\n\nconst SwapPage = () => {\n  return <Swap />\n}\n\nSwapPage.chains = CHAIN_IDS\n\nexport default SwapPage\n","import { TranslateFunction } from '@pancakeswap/localization'\n\n/**\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\n * This object seems to be undocumented by ethers.\n * @param error an error from the ethers provider\n * @param t Translation function\n */\nexport function transactionErrorToUserReadableMessage(error: any, t: TranslateFunction) {\n  let reason: string | undefined\n  while (error) {\n    reason = error.reason ?? error.data?.message ?? error.message ?? reason\n    // eslint-disable-next-line no-param-reassign\n    error = error.error ?? error.data?.originalError\n  }\n\n  if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substring('execution reverted: '.length)\n\n  switch (reason) {\n    case 'PancakeRouter: EXPIRED':\n      return t(\n        'The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.',\n      )\n    case 'PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT':\n    case 'PancakeRouter: EXCESSIVE_INPUT_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_A_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_B_AMOUNT':\n      return t(\n        'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.',\n      )\n    case 'TransferHelper: TRANSFER_FROM_FAILED':\n      return t('The input token cannot be transferred. There may be an issue with the input token.')\n    case 'Pancake: TRANSFER_FAILED':\n      return t('The output token cannot be transferred. There may be an issue with the output token.')\n    default:\n      if (reason?.indexOf('undefined is not an object') !== -1) {\n        console.error(error, reason)\n        return t(\n          'An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.',\n        )\n      }\n      return t('Unknown error%reason%. Try increasing your slippage tolerance.', {\n        reason: reason ? `: \"${reason}\"` : '',\n      })\n  }\n}\n"],"names":["addDays","dirtyDate","dirtyAmount","arguments","date","amount","isNaN","Date","NaN","setDate","getDate","getTime","requiredArgs","toDate","timestamp","getUnixTime","Math","floor","startOfHour","setMinutes","startOfMinute","setSeconds","addMonths","toInteger","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","subMonths","sub","duration","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","subDays","minutestoSub","secondstoSub","mstoSub","finalDate","addWeeks","subWeeks","Object","defineProperty","exports","value","PairNotFoundError","Error","constructor","pair","super","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","getAveragePrice","searchPairsMatchingQuery","getPairsMatchingBaseTokenAddress","getPairInformationByChain","baseUri","axios_1","PairNotFoundError_1","chainId","pairAddress","url","pairsResponse","default","get","data","tokenAddress","tokensResponse","pairs","query","usdPrices","filter","priceUsd","map","Number","length","reduce","previousValue","currentValue","err","console","error","message","window","__NEXT_P","push","wrongNetworkProps","variant","disabled","children","Trans","CommitButton","props","useActiveChainId","isWrongNetwork","switchNetworkLoading","useSwitchNetworkLoading","setHideWrongNetwork","useSetAtom","hideWrongNetworkModalAtom","Button","onClick","DetailsFooter","styled","theme","colors","text","invertedContrast","UnsupportedModal","currencies","onDismiss","useActiveWeb3React","useTranslation","t","tokens","currency","wrappedCurrency","unsupportedTokens","useUnsupportedTokens","Modal","title","AutoColumn","gap","token","keys","includes","address","AutoRow","align","CurrencyLogo","size","Text","symbol","Link","external","small","color","href","getBlockExploreLink","concat","UnsupportedCurrencyFooter","onPresentModal","useModal","useTransactionDeadline","ttl","useSelector","state","user","userDeadline","blockTimestamp","useSingleCallResult","multicall","useMulticallContract","useCurrentBlockTimestamp","useMemo","add","TOKEN_RISK","TokenRiskPhases","Low","Medium","High","fetchRiskApi","fetch","ACCESS_RISK_API","method","headers","Accept","body","JSON","stringify","chain_id","json","fetchRiskToken","riskApi","risk_result","scanned_ts","risk_level","risk_level_description","isSuccess","riskLevel","riskResult","scannedTs","riskLevelDescription","ChainId","riskTokenInfo","messageVariant","Message","icon","mt","MessageText","bold","ml","Flex","style","marginRight","flexDirection","fontSize","lineHeight","results","inputCurrency","outputCurrency","useToast","toastInfo","tokenMap","useAtomValue","tokenListFromOfficialsUrlsAtom","useState","loading","setState","tokensForScan","tokensToScan","isNative","inputChainId","inputAddress","outputChainId","outputAddress","handleScan","useCallback","fetchTokenRisks","tokenRiskResults","all","tokenToScan","prevState","merge","mapValues","groupBy","tokenRiskResult","keyBy","join","disabledButton","useTooltip","placement","targetRef","tooltip","tooltipVisible","justifyContent","scale","textTransform","ref","HelpIcon","width","height","RiskMessage","WrapType","NOT_APPLICABLE","WRAP","UNWRAP","wrapType","DisabledIcon","Svg","id","viewBox","path","stroke","fill","d","defs","clipPath","use","xlinkHref","g","circle","cx","cy","r","transform","strokeWidth","strokeDasharray","strokeDashoffset","animate","attributeName","values","begin","repeatCount","dur","animateTransform","attributeType","type","from","to","CurrencyInputContainer","cardBorder","IconButton","textSubtle","hasAmount","subtitle","setIsChartDisplayed","isChartDisplayed","onRefreshPrice","expertMode","useExpertModeManager","onPresentTransactionsModal","TransactionsModal","handleOnClick","alignItems","mr","Heading","as","NotificationDot","show","GlobalSettings","mode","SettingsMode","HistoryIcon","RefreshIcon","isZero","hexNumberString","test","SwapCallbackState","INVALID","LOADING","VALID","Wrapper","ConfirmedIcon","ColumnCenter","trade","pendingText","amountA","inputAmount","toSignificant","symbolA","amountB","outputAmount","symbolB","Spinner","justify","textAlign","ArrowWrapper","clickable","css","ErrorText","severity","failure","warning","success","StyledBalanceMaxMini","background","dropdown","TruncatedText","attrs","ellipsis","SwapCallbackErrorInner","failure33","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","ErrorIcon","p","SwapShowAcceptChanges","warning33","FormattedPriceImpact","priceImpact","warningSeverity","lessThan","ONE_BIPS","toFixed","SwapModalFooterContainer","radii","SwapModalFooter","slippageAdjustedAmounts","isEnoughInputBalance","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","totalFeePercent","TOTAL_FEE","lpHoldersFeePercent","LP_HOLDERS_FEE","treasuryFeePercent","TREASURY_FEE","buyBackFeePercent","BUYBACK_FEE","RowBetween","display","paddingLeft","formatExecutionPrice","AutoRenewIcon","RowFixed","tradeType","TradeType","QuestionHelper","Field","marginLeft","mb","SwapModalHeader","recipient","showAcceptChanges","onAcceptChanges","allowedSlippage","priceImpactSeverity","inputTextColor","tradeInfoText","split","estimatedText","transactionRevertText","truncatedRecipient","truncateHash","recipientInfoText","recipientSentToText","postSentToText","ArrowDownIcon","padding","b","StableSwapModalHeader","basisPointsToPercent","StableSwapModalFooter","TransactionConfirmSwapContent","originalTrade","currencyBalances","isStable","Boolean","tradeB","tradeA","equals","equalTo","computeSlippageAdjustedAmounts","isInputBalanceExist","isInputBalanceBNB","inputCurrencyAmount","maxAmountSpend","greaterThan","modalHeader","SwapModalHead","modalBottom","SwapModalF","ConfirmationModalContent","topContent","bottomContent","memo","handleDismiss","headerBackground","SwapTransactionErrorContent","openSettingModal","isSlippagedErrorMsg","handleErrorDismiss","TransactionErrorContent","cursor","u","LinkExternal","ConfirmSwapModal","customOnDismiss","attemptingTxn","txHash","confirmationContent","ConfirmSwapModalContainer","ConfirmationPendingContent","TransactionSubmittedContent","hash","currencyToAdd","Grouping","Circle","confirmed","backgroundDisabled","primary","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","rest","i","SettingsModalWithCustomDismiss","withCustomOnDismiss","SettingsModal","SwapCommitButton","swapIsUnsupported","account","showWrap","wrapInputError","onWrap","approval","approveCallback","approvalSubmitted","isExpertMode","swapInputError","parsedIndepentFieldAmount","onUserInput","singleHopOnly","useUserSingleHopOnly","swapCalls","INITIAL_ALLOWED_SLIPPAGE","recipientAddress","deadline","contract","useRouterContract","swapMethods","Router","feeOnTransfer","Percent","JSBI","BIPS_BASE","toNumber","parameters","useSwapCallArguments","useSwapCallback","gasPrice","useGasPrice","addTransaction","useTransactionAdder","callback","onSwap","estimatedCalls","successfulEstimation","errorCalls","methodName","args","gasEstimate","call","options","estimateGas","catch","gasError","callStatic","callError","transactionErrorToUserReadableMessage","find","el","ix","list","gasLimit","calculateGasMargin","response","inputSymbol","outputSymbol","pct","maximumAmountIn","minimumAmountOut","base","recipientAddressText","isAddress","withRecipient","translatableWithRecipient","summary","translatableSummary","code","tradeToConfirm","undefined","setSwapState","handleSwap","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","confirmWord","prompt","word","ALLOWED_PRICE_IMPACT_HIGH","confirm","confirmPriceImpactWithoutFee","swapCallback","handleAcceptChanges","handleConfirmDismiss","indirectlyOpenConfirmModalState","setIndirectlyOpenConfirmModalState","onPresentSettingsModal","onPresentConfirmModal","onSwapHandler","useEffect","ConnectWalletButton","noRoute","route","userHasSpecifiedInputOutput","BIG_INT_ZERO","GreyCard","isValid","ApprovalState","swapCallbackError","CircleLoader","asset","Column","marginTop","ProgressSteps","bscWarningTokens","pokemoney","Token","free","safemoon","bondly","bscTokens","itam","ccar","bttold","swapWarningTokens","SwapWarningTokens","swapCurrency","some","warningToken","handleContinueClick","isConfirmed","setIsConfirmed","Checkbox","name","checked","onChange","userSelect","StyledModalContainer","ModalContainer","MessageContainer","useTheme","SWAP_WARNING","SwapWarningTokensConfig","component","SafemoonWarning","BondlyWarning","ItamWarning","CcarWarning","BTTWarning","RugPullWarning","FREEWarning","$minWidth","ModalHeader","gradientCardHeader","ModalBody","Box","Acknowledgement","isLoading","setFetch","refreshBlockNumber","useSWRConfig","mutate","setTimeout","InputPanel","backgroundAlt","ContainerRow","InputContainer","Input","textDisabled","AddressInputPanel","handleInput","event","withoutSpaces","target","replace","site","getBlockExploreName","className","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","pattern","isDefined","x","filterFn","last","setLast","prev","useLast","flexWrap","isLastItem","unwrappedToken","Fragment","ChevronRightIcon","TradeSummary","isExactIn","AdvancedSwapDetails","useUserSlippageTolerance","showRoute","span","SwapRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","useLastTruthy","TradePrice","price","formattedPrice","invert","baseCurrency","quoteCurrency","label","Label","secondary","SwitchIconButton","SwapForm","parsedAmounts","isAccessTokenSupported","useRefreshBlockNumberID","warningSwapHandler","router","useRouter","loadedUrlParams","useDefaultsFromURLSearch","swapWarningCurrency","setSwapWarningCurrency","useCurrency","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","c","isToken","defaultTokens","useAllTokens","importTokensNotInDefault","onPresentSwapWarningModal","SwapWarningModal","onPresentImportTokenWarningModal","ImportTokenWarningModal","onCancel","swapWarningHandler","currencyInput","showSwapWarning","shouldShowSwapWarning","useWarningImport","useSwapState","independentField","typedValue","currencyId","useDerivedSwapInfo","v2Trade","parsedAmount","inputError","useWrapCallback","useCallWithGasPrice","callWithGasPrice","wbnbContract","useWNativeContract","balance","useCurrencyBalance","tryParseAmount","WNATIVE","sufficientBalance","execute","txReceipt","native","wrap","quotient","toString","useSwapActionHandlers","onSwitchTokens","onCurrencySelection","onChangeRecipient","dependentField","handleTypeInput","handleTypeOutput","formattedAmounts","toExact","useApproveCallbackFromTrade","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","handleInputSelect","replaceBrowserHistory","handleMaxInput","handleOutputSelect","currencyOutput","handlePercentInput","percent","multiply","useIsTransactionUnsupported","INPUT","OUTPUT","CurrencyInputHeader","minHeight","CurrencyInputPanel","showMaxButton","showQuickInputButton","onPercentInput","onMax","onCurrencySelect","otherCurrency","showCommonBases","commonBasesType","CommonBasesType","ArrowUpDownIcon","AccessRisk","Skeleton","executionPrice","rotate","keyframes","StyledSwapContainer","StyledInputCurrencyWrapper","mediaQueries","sm","CHART_SUPPORT_CHAIN_IDS","ACCESS_TOKEN_SUPPORT_CHAIN_IDS","STABLE_SUPPORT_CHAIN_IDS","gradientOverlayStyle","position","top","left","opacity","zIndex","backgroundLogo","backgroundSize","Swap","fetchXFNStats","responseData","setXFNStats","log","useMatchBreakpoints","isMobile","isChartExpanded","useExchangeChartManager","userChartPreference","setUserChartPreference","useSingleTokenSwapInfo","interval","setInterval","clearInterval","div","Page","removePadding","hideFooterOnDesktop","isSwap","$isChartExpanded","AppBody","Footer","helpUrl","EXCHANGE_DOCS_URLS","SwapPage","chains","CHAIN_IDS","reason","originalError","indexOf","substring"],"sourceRoot":""}