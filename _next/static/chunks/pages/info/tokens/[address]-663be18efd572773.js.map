{"version":3,"file":"static/chunks/pages/info/tokens/[address]-663be18efd572773.js","mappings":"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","sources":["webpack://_N_E/?bbcf","webpack://_N_E/./packages/uikit/src/components/Breadcrumbs/Breadcrumbs.tsx","webpack://_N_E/./src/views/Info/hooks/useCMCLink.ts","webpack://_N_E/./src/views/Info/Tokens/TokenPage.tsx","webpack://_N_E/./src/pages/info/tokens/[address].tsx","webpack://_N_E/./src/components/TabToggle/index.tsx","webpack://_N_E/./src/views/Info/components/InfoCharts/ChartCard/index.tsx","webpack://_N_E/./src/views/Info/components/InfoTables/PoolsTable.tsx","webpack://_N_E/./src/views/Swap/Spinner.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/info/tokens/[address]\",\n      function () {\n        return require(\"private-next-pages/info/tokens/[address].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/info/tokens/[address]\"])\n      });\n    }\n  ","/* eslint-disable react/no-array-index-key */ import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nimport _to_consumable_array from \"@swc/helpers/src/_to_consumable_array.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  align-items: center;\\n  color: \",\n        \";\\n  display: flex;\\n  justify-content: center;\\n  padding-left: 4px;\\n  padding-right: 4px;\\n\\n  \",\n        \" {\\n    padding-left: 8px;\\n    padding-right: 8px;\\n  }\\n\\n  \",\n        \" {\\n    padding-left: 16px;\\n    padding-right: 16px;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = _tagged_template_literal([\n        \"\\n  align-items: center;\\n  display: flex;\\n  flex-wrap: wrap;\\n  list-style-type: none;\\n\\n  a {\\n    color: \",\n        \";\\n\\n    &:hover {\\n      color: \",\n        \";\\n    }\\n  }\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Children, isValidElement } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport ChevronRightIcon from \"../Svg/Icons/ChevronRight\";\nvar Separator = styled.div.withConfig({\n    componentId: \"sc-b9c7047c-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.textDisabled;\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.md;\n});\nvar StyledBreadcrumbs = styled.ul.withConfig({\n    componentId: \"sc-b9c7047c-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.colors.primary;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.primaryBright;\n}, space);\nvar insertSeparators = function(items, separator) {\n    return items.reduce(function(accum, item, index) {\n        if (index === 0) {\n            return _to_consumable_array(accum).concat([\n                item\n            ]);\n        }\n        return _to_consumable_array(accum).concat([\n            /*#__PURE__*/ _jsx(Separator, {\n                \"aria-hidden\": true,\n                children: separator\n            }, \"separator-\".concat(index)),\n            item, \n        ]);\n    }, []);\n};\nvar DefaultSeparator = /*#__PURE__*/ _jsx(ChevronRightIcon, {\n    color: \"currentColor\",\n    width: \"24px\"\n});\nvar Breadcrumbs = function(param) {\n    var _separator = param.separator, separator = _separator === void 0 ? DefaultSeparator : _separator, children = param.children;\n    var validItems = Children.toArray(children).filter(function(child) {\n        return /*#__PURE__*/ isValidElement(child);\n    });\n    var items = insertSeparators(validItems, separator);\n    return /*#__PURE__*/ _jsx(StyledBreadcrumbs, {\n        children: items.map(function(item, index) {\n            return /*#__PURE__*/ _jsx(\"li\", {\n                children: item\n            }, \"child-\".concat(index));\n        })\n    });\n};\nexport default Breadcrumbs;\n","import useSWRImmutable from 'swr/immutable'\n\n// endpoint to check asset exists and get url to CMC page\n// returns 400 status code if token is not on CMC\nconst CMC_ENDPOINT = 'https://3rdparty-apis.coinmarketcap.com/v1/cryptocurrency/contract?address='\n\n/**\n * Check if asset exists on CMC, if exists\n * return url, if not return undefined\n * @param address token address (all lowercase, checksummed are not supported by CMC)\n */\nconst useCMCLink = (address: string): string | undefined => {\n  const { data: cmcPageUrl } = useSWRImmutable(address ? ['cmcLink', address] : null, async () => {\n    const response = await fetch(`${CMC_ENDPOINT}${address}`)\n\n    if (response.ok) {\n      return (await response.json()).data.url\n    }\n    return undefined\n  })\n\n  return cmcPageUrl\n}\n\nexport default useCMCLink\n","/* eslint-disable no-nested-ternary */\nimport { useMemo } from 'react'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { Duration } from 'date-fns'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Box,\n  Heading,\n  Button,\n  Card,\n  Flex,\n  Breadcrumbs,\n  Link as UIKitLink,\n  LinkExternal,\n  Image,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { getBlockExploreLink } from 'utils'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport useCMCLink from 'views/Info/hooks/useCMCLink'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport {\n  usePoolDatas,\n  useTokenData,\n  usePoolsForToken,\n  useTokenChartData,\n  useTokenPriceData,\n  useTokenTransactions,\n} from 'state/info/hooks'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport { ONE_HOUR_SECONDS } from 'config/constants/info'\nimport { useTranslation } from 'contexts/Localization'\nimport ChartCard from 'views/Info/components/InfoCharts/ChartCard'\nimport Spinner from '../../Swap/Spinner'\n\nconst ContentLayout = styled.div`\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  grid-gap: 1em;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst StyledCMCLink = styled(UIKitLink)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n\n  & :hover {\n    opacity: 0.8;\n  }\n`\nconst DEFAULT_TIME_WINDOW: Duration = { weeks: 1 }\n\nconst TokenPage: React.FC<React.PropsWithChildren<{ routeAddress: string }>> = ({ routeAddress }) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  const address = routeAddress.toLowerCase()\n\n  const cmcLink = useCMCLink(address)\n\n  const tokenData = useTokenData(address)\n  const poolsForToken = usePoolsForToken(address)\n  const poolDatas = usePoolDatas(poolsForToken ?? [])\n  const transactions = useTokenTransactions(address)\n  const chartData = useTokenChartData(address)\n\n  // pricing data\n  const priceData = useTokenPriceData(address, ONE_HOUR_SECONDS, DEFAULT_TIME_WINDOW)\n  const adjustedPriceData = useMemo(() => {\n    // Include latest available price\n    if (priceData && tokenData && priceData.length > 0) {\n      return [\n        ...priceData,\n        {\n          time: new Date().getTime() / 1000,\n          open: priceData[priceData.length - 1].close,\n          close: tokenData?.priceUSD,\n          high: tokenData?.priceUSD,\n          low: priceData[priceData.length - 1].close,\n        },\n      ]\n    }\n    return undefined\n  }, [priceData, tokenData])\n\n  const [watchlistTokens, addWatchlistToken] = useWatchlistTokens()\n\n  return (\n    <Page symbol={tokenData?.symbol}>\n      {tokenData ? (\n        !tokenData.exists ? (\n          <Card>\n            <Box p=\"16px\">\n              <Text>\n                {t('No pool has been created with this token yet. Create one')}\n                <NextLinkFromReactRouter style={{ display: 'inline', marginLeft: '6px' }} to={`/add/${address}`}>\n                  {t('here.')}\n                </NextLinkFromReactRouter>\n              </Text>\n            </Box>\n          </Card>\n        ) : (\n          <>\n            {/* Stuff on top */}\n            <Flex justifyContent=\"space-between\" mb=\"24px\" flexDirection={['column', 'column', 'row']}>\n              <Breadcrumbs mb=\"32px\">\n                <NextLinkFromReactRouter to=\"/info\">\n                  <Text color=\"primary\">{t('Info')}</Text>\n                </NextLinkFromReactRouter>\n                <NextLinkFromReactRouter to=\"/info/tokens\">\n                  <Text color=\"primary\">{t('Tokens')}</Text>\n                </NextLinkFromReactRouter>\n                <Flex>\n                  <Text mr=\"8px\">{tokenData.symbol}</Text>\n                  <Text>{`(${truncateHash(address)})`}</Text>\n                </Flex>\n              </Breadcrumbs>\n              <Flex justifyContent={[null, null, 'flex-end']} mt={['8px', '8px', 0]}>\n                <LinkExternal mr=\"8px\" color=\"primary\" href={getBlockExploreLink(address, 'address')}>\n                  {t('View on Somnia Scan')}\n                </LinkExternal>\n                {cmcLink && (\n                  <StyledCMCLink href={cmcLink} rel=\"noopener noreferrer nofollow\" target=\"_blank\">\n                    <Image src=\"/images/CMC-logo.svg\" height={22} width={22} alt={t('View token on CoinMarketCap')} />\n                  </StyledCMCLink>\n                )}\n                <SaveIcon fill={watchlistTokens.includes(address)} onClick={() => addWatchlistToken(address)} />\n              </Flex>\n            </Flex>\n            <Flex justifyContent=\"space-between\" flexDirection={['column', 'column', 'column', 'row']}>\n              <Flex flexDirection=\"column\" mb={['8px', null]}>\n                <Flex alignItems=\"center\">\n                  <CurrencyLogo size=\"32px\" address={address} />\n                  <Text\n                    ml=\"12px\"\n                    bold\n                    lineHeight=\"0.7\"\n                    fontSize={isXs || isSm ? '24px' : '40px'}\n                    id=\"info-token-name-title\"\n                  >\n                    {tokenData.name}\n                  </Text>\n                  <Text ml=\"12px\" lineHeight=\"1\" color=\"textSubtle\" fontSize={isXs || isSm ? '14px' : '20px'}>\n                    ({tokenData.symbol})\n                  </Text>\n                </Flex>\n                <Flex mt=\"8px\" ml=\"46px\" alignItems=\"center\">\n                  <Text mr=\"16px\" bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.priceUSD, { notation: 'standard' })}\n                  </Text>\n                  <Percent value={tokenData.priceUSDChange} fontWeight={600} />\n                </Flex>\n              </Flex>\n              <Flex>\n                <NextLinkFromReactRouter to={`/add/${address}`}>\n                  <Button mr=\"8px\" variant=\"secondary\">\n                    {t('Add Liquidity')}\n                  </Button>\n                </NextLinkFromReactRouter>\n                <NextLinkFromReactRouter to={`/swap?inputCurrency=${address}`}>\n                  <Button>{t('Trade')}</Button>\n                </NextLinkFromReactRouter>\n              </Flex>\n            </Flex>\n\n            {/* data on the right side of chart */}\n            <ContentLayout>\n              <Card>\n                <Box p=\"24px\">\n                  <Text bold small color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Liquidity')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.liquidityUSD)}\n                  </Text>\n                  <Percent value={tokenData.liquidityUSDChange} />\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Volume 24H')}\n                  </Text>\n                  <Text bold fontSize=\"24px\" textTransform=\"uppercase\">\n                    ${formatAmount(tokenData.volumeUSD)}\n                  </Text>\n                  <Percent value={tokenData.volumeUSDChange} />\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Volume 7D')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.volumeUSDWeek)}\n                  </Text>\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Transactions 24H')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    {formatAmount(tokenData.txCount, { isInteger: true })}\n                  </Text>\n                </Box>\n              </Card>\n              {/* charts card */}\n              <ChartCard\n                variant=\"token\"\n                chartData={chartData}\n                tokenData={tokenData}\n                tokenPriceData={adjustedPriceData}\n              />\n            </ContentLayout>\n\n            {/* pools and transaction tables */}\n            <Heading scale=\"lg\" mb=\"16px\" mt=\"40px\">\n              {t('Pools')}\n            </Heading>\n\n            <PoolTable poolDatas={poolDatas} />\n\n            <Heading scale=\"lg\" mb=\"16px\" mt=\"40px\">\n              {t('Transactions')}\n            </Heading>\n\n            <TransactionTable transactions={transactions} />\n          </>\n        )\n      ) : (\n        <Flex mt=\"80px\" justifyContent=\"center\">\n          <Spinner />\n        </Flex>\n      )}\n    </Page>\n  )\n}\n\nexport default TokenPage\n","import Token from 'views/Info/Tokens/TokenPage'\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport { InfoPageLayout } from 'views/Info'\nimport { getTokenStaticPaths, getTokenStaticProps } from 'utils/pageUtils'\n\nconst TokenPage = ({ address }: { address: string }) => {\n  if (!address) {\n    return null\n  }\n\n  return <Token routeAddress={address} />\n}\n\nTokenPage.Layout = InfoPageLayout\nTokenPage.chains = [] // set all\n\nexport default TokenPage\n\nexport const getStaticPaths: GetStaticPaths = getTokenStaticPaths()\n\nexport const getStaticProps: GetStaticProps = getTokenStaticProps()\n\n\n// import { NotFound } from '@pancakeswap/uikit'\n\n// const NotFoundPage = () => <NotFound />\n\n// NotFoundPage.chains = []\n\n// export default NotFoundPage","import { Box, BoxProps, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.input};\n  width: 100%;\n`\n\ninterface TabProps extends BoxProps {\n  isActive?: boolean\n  onClick?: () => void\n}\n\nexport const TabToggle = styled(Box).attrs({\n  as: 'button',\n})<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\n  box-shadow: none;\n`\n\nTabToggle.defaultProps = {\n  p: '16px',\n}\n\ninterface TabToggleGroupProps {\n  children: React.ReactElement[]\n}\n\nexport const TabToggleGroup: React.FC<React.PropsWithChildren<TabToggleGroupProps>> = ({ children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>{children}</Inner>\n    </Wrapper>\n  )\n}\n","import { useMemo, useState } from 'react'\nimport { Text, Box, Card, Flex, Skeleton } from '@pancakeswap/uikit'\nimport LineChart from 'views/Info/components/InfoCharts/LineChart'\nimport BarChart from 'views/Info/components/InfoCharts/BarChart'\nimport { TabToggleGroup, TabToggle } from 'components/TabToggle'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport { ChartEntry, TokenData, PriceChartEntry } from 'state/info/types'\nimport { fromUnixTime } from 'date-fns'\nimport dynamic from 'next/dynamic'\n\nconst CandleChart = dynamic(() => import('views/Info/components/InfoCharts/CandleChart'), {\n  ssr: false,\n})\n\nenum ChartView {\n  LIQUIDITY,\n  VOLUME,\n  PRICE,\n}\n\ninterface ChartCardProps {\n  variant: 'pool' | 'token'\n  chartData: ChartEntry[]\n  tokenData?: TokenData\n  tokenPriceData?: PriceChartEntry[]\n}\n\nconst ChartCard: React.FC<React.PropsWithChildren<ChartCardProps>> = ({\n  variant,\n  chartData,\n  tokenData,\n  tokenPriceData,\n}) => {\n  const [view, setView] = useState(ChartView.VOLUME)\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n\n  const currentDate = new Date().toLocaleString(locale, { month: 'short', year: 'numeric', day: 'numeric' })\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.liquidityUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const getLatestValueDisplay = () => {\n    let valueToDisplay = null\n    if (hoverValue) {\n      valueToDisplay = formatAmount(hoverValue)\n    } else if (view === ChartView.VOLUME && formattedVolumeData.length > 0) {\n      valueToDisplay = formatAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n    } else if (view === ChartView.LIQUIDITY && formattedTvlData.length > 0) {\n      valueToDisplay = formatAmount(formattedTvlData[formattedTvlData.length - 1]?.value)\n    } else if (view === ChartView.PRICE && tokenData?.priceUSD) {\n      valueToDisplay = formatAmount(tokenData.priceUSD)\n    }\n\n    return valueToDisplay ? (\n      <Text fontSize=\"24px\" bold>\n        ${valueToDisplay}\n      </Text>\n    ) : (\n      <Skeleton height=\"36px\" width=\"128px\" />\n    )\n  }\n\n  return (\n    <Card>\n      <TabToggleGroup>\n        <TabToggle isActive={view === ChartView.VOLUME} onClick={() => setView(ChartView.VOLUME)}>\n          <Text>{t('Volume')}</Text>\n        </TabToggle>\n        <TabToggle isActive={view === ChartView.LIQUIDITY} onClick={() => setView(ChartView.LIQUIDITY)}>\n          <Text>{t('Liquidity')}</Text>\n        </TabToggle>\n        {variant === 'token' && (\n          <TabToggle isActive={view === ChartView.PRICE} onClick={() => setView(ChartView.PRICE)}>\n            <Text>{t('Price')}</Text>\n          </TabToggle>\n        )}\n      </TabToggleGroup>\n\n      <Flex flexDirection=\"column\" px=\"24px\" pt=\"24px\">\n        {getLatestValueDisplay()}\n        <Text small color=\"secondary\">\n          {hoverDate || currentDate}\n        </Text>\n      </Flex>\n\n      <Box px=\"24px\" height={variant === 'token' ? '250px' : '335px'}>\n        {view === ChartView.LIQUIDITY ? (\n          <LineChart data={formattedTvlData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.VOLUME ? (\n          <BarChart data={formattedVolumeData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.PRICE ? (\n          <CandleChart data={tokenPriceData} setValue={setHoverValue} setLabel={setHoverDate} />\n        ) : null}\n      </Box>\n    </Card>\n  )\n}\n\nexport default ChartCard\n","import { useCallback, useState, useMemo, useEffect, Fragment } from 'react'\nimport styled from 'styled-components'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { Text, Flex, Box, Skeleton, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport { PoolData } from 'state/info/types'\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info'\nimport { DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  5 = | # | Pool | TVL | Volume 24H | Volume 7D |\n *  4 = | # | Pool |     | Volume 24H | Volume 7D |\n *  3 = | # | Pool |     | Volume 24H |           |\n *  2 = |   | Pool |     | Volume 24H |           |\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 20px 3.5fr repeat(5, 1fr);\n\n  padding: 0 24px;\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4),\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(4),\n    & :nth-child(5),\n    & :nth-child(6),\n    & :nth-child(7) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(NextLinkFromReactRouter)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst SORT_FIELD = {\n  volumeUSD: 'volumeUSD',\n  liquidityUSD: 'liquidityUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n  lpFees24h: 'lpFees24h',\n  lpApr7d: 'lpApr7d',\n}\n\nconst LoadingRow: React.FC<React.PropsWithChildren> = () => (\n  <ResponsiveGrid>\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n  </ResponsiveGrid>\n)\n\nconst TableLoader: React.FC<React.PropsWithChildren> = () => (\n  <>\n    <LoadingRow />\n    <LoadingRow />\n    <LoadingRow />\n  </>\n)\n\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\n  return (\n    <LinkWrapper to={`/info/pools/${poolData.address}`}>\n      <ResponsiveGrid>\n        <Text>{index + 1}</Text>\n        <Flex>\n          <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\n          <Text ml=\"8px\">\n            {poolData.token0.symbol}/{poolData.token1.symbol}\n          </Text>\n        </Flex>\n        <Text>${formatAmount(poolData.volumeUSD)}</Text>\n        <Text>${formatAmount(poolData.volumeUSDWeek)}</Text>\n        <Text>${formatAmount(poolData.lpFees24h)}</Text>\n        <Text>{formatAmount(poolData.lpApr7d)}%</Text>\n        <Text>${formatAmount(poolData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\ninterface PoolTableProps {\n  poolDatas: PoolData[]\n  loading?: boolean // If true shows indication that SOME pools are loading, but the ones already fetched will be shown\n}\n\nconst PoolTable: React.FC<React.PropsWithChildren<PoolTableProps>> = ({ poolDatas, loading }) => {\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n  const { t } = useTranslation()\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (poolDatas.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(poolDatas.length / ITEMS_PER_INFO_TABLE_PAGE) + extraPages)\n  }, [poolDatas])\n\n  const sortedPools = useMemo(() => {\n    return poolDatas\n      ? poolDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE)\n      : []\n  }, [page, poolDatas, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Pool')}\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 7D')} {arrow(SORT_FIELD.volumeUSDWeek)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpFees24h)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward fees 24H')} {arrow(SORT_FIELD.lpFees24h)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpApr7d)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward APR')} {arrow(SORT_FIELD.lpApr7d)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.liquidityUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.liquidityUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n      <Break />\n      {sortedPools.length > 0 ? (\n        <>\n          {sortedPools.map((poolData, i) => {\n            if (poolData) {\n              return (\n                <Fragment key={poolData.address}>\n                  <DataRow index={(page - 1) * ITEMS_PER_INFO_TABLE_PAGE + i} poolData={poolData} />\n                  <Break />\n                </Fragment>\n              )\n            }\n            return null\n          })}\n          {loading && <LoadingRow />}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          {/* spacer */}\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default PoolTable\n","import { useEffect, useState } from 'react';\nimport Image from 'next/image';\n\ninterface SpinnerProps {\n  size?: number;\n  pulseLogo?: boolean;\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ size = 160, pulseLogo = false }) => {\n  const [isSafari, setIsSafari] = useState(false);\n\n  useEffect(() => {\n    const isSafariBrowser = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    setIsSafari(isSafariBrowser);\n  }, []);\n\n  return (\n    <>\n    <Image src=\"/images/safemars.png\" width={size} height={size} />\n      {/* {isSafari ? (\n        <Image src=\"/images/safemars.png\" width={size} height={size} />\n      ) : (\n        <video autoPlay loop muted playsInline width={size} height={size}>\n          <source src=\"/images/home/lunar-bunny/logo.webm?v=2\" type=\"video/webm\" />\n          <Image src=\"/images/safemars.png\" width={size} height={size} />\n        </video>\n      )} */}\n      {/* {pulseLogo && (\n        <div>\n          <Image src=\"/images/safemars.png\" width={size} height={size} />\n        </div>\n      )} */}\n    </>\n  );\n};\n\nexport default Spinner;\n"],"names":["window","__NEXT_P","push","_templateObject","data","_tagged_template_literal","_templateObject1","Separator","styled","componentId","param","theme","colors","textDisabled","mediaQueries","sm","md","StyledBreadcrumbs","primary","primaryBright","space","DefaultSeparator","_jsx","ChevronRightIcon","color","width","_separator","separator","children","items","reduce","accum","item","index","_to_consumable_array","concat","insertSeparators","Children","filter","child","isValidElement","map","address","useSWRImmutable","response","fetch","ok","json","url","undefined","ContentLayout","StyledCMCLink","UIKitLink","DEFAULT_TIME_WINDOW","weeks","routeAddress","useMatchBreakpoints","isXs","isSm","useTranslation","t","toLowerCase","cmcLink","useCMCLink","tokenData","useTokenData","poolsForToken","usePoolsForToken","poolDatas","usePoolDatas","transactions","useTokenTransactions","chartData","useTokenChartData","priceData","useTokenPriceData","ONE_HOUR_SECONDS","adjustedPriceData","useMemo","length","time","Date","getTime","open","close","priceUSD","high","low","useWatchlistTokens","watchlistTokens","addWatchlistToken","Page","symbol","exists","Flex","justifyContent","mb","flexDirection","Breadcrumbs","NextLinkFromReactRouter","to","Text","mr","truncateHash","mt","LinkExternal","href","getBlockExploreLink","rel","target","Image","src","height","alt","SaveIcon","fill","includes","onClick","alignItems","CurrencyLogo","size","ml","bold","lineHeight","fontSize","id","name","formatAmount","notation","Percent","value","priceUSDChange","fontWeight","Button","variant","Card","Box","p","small","textTransform","liquidityUSD","liquidityUSDChange","volumeUSD","volumeUSDChange","volumeUSDWeek","txCount","isInteger","ChartCard","tokenPriceData","Heading","scale","PoolTable","TransactionTable","style","display","marginLeft","Spinner","TokenPage","Token","Layout","InfoPageLayout","chains","Wrapper","Inner","input","TabToggle","attrs","as","isActive","text","textSubtle","card","background","defaultProps","TabToggleGroup","CandleChart","dynamic","ssr","ChartView","LIQUIDITY","VOLUME","PRICE","useState","view","setView","hoverValue","setHoverValue","hoverDate","setHoverDate","currentLanguage","locale","currentDate","toLocaleString","month","year","day","formattedTvlData","fromUnixTime","date","formattedVolumeData","px","pt","valueToDisplay","Skeleton","getLatestValueDisplay","LineChart","BarChart","setValue","setLabel","ResponsiveGrid","LinkWrapper","SORT_FIELD","LoadingRow","TableLoader","DataRow","poolData","DoubleCurrencyLogo","address0","token0","address1","token1","lpFees24h","lpApr7d","loading","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","useEffect","extraPages","ITEMS_PER_INFO_TABLE_PAGE","Math","floor","sortedPools","sort","a","b","slice","handleSort","useCallback","newField","arrow","field","TableWrapper","ClickableColumnHeader","Break","i","Fragment","PageButtons","Arrow","ArrowBackIcon","ArrowForwardIcon","pulseLogo","setIsSafari","isSafariBrowser","test","navigator","userAgent"],"sourceRoot":""}