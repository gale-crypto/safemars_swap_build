{"version":3,"file":"static/chunks/pages/liquidity-9003f3419c7649b1.js","mappings":"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","sources":["webpack://_N_E/./node_modules/date-fns/esm/fromUnixTime/index.js","webpack://_N_E/./node_modules/lodash/times.js","webpack://_N_E/?d36e","webpack://_N_E/./packages/uikit/src/components/Card/CardFooter.tsx","webpack://_N_E/./src/views/Pool/index.tsx","webpack://_N_E/./src/pages/liquidity.tsx"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param {Number} unixTime - the given Unix timestamp (in seconds)\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/liquidity\",\n      function () {\n        return require(\"private-next-pages/liquidity.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/liquidity\"])\n      });\n    }\n  ","import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  border-top: 1px solid \",\n        \";\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nvar CardFooter = styled.div.withConfig({\n    componentId: \"sc-5ed8a823-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, space);\nCardFooter.defaultProps = {\n    p: \"24px\"\n};\nexport default CardFooter;\n","import { useMemo } from 'react'\nimport { CSSProperties } from 'react';\nimport styled from 'styled-components'\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from '@pancakeswap/uikit'\nimport Link from 'next/link'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { useTranslation } from 'contexts/Localization'\nimport { useLPTokensWithBalanceByAccount } from 'views/Swap/StableSwap/hooks/useStableConfig'\nimport FullPositionCard, { StableFullPositionCard } from '../../components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { usePairs, PairState } from '../../hooks/usePairs'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport Dots from '../../components/Loader/Dots'\nimport { AppHeader, AppBody } from '../../components/App'\nimport Page from '../Page'\n\nconst gradientOverlayStyle: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  background: 'radial-gradient(circle, rgba(24, 48, 128, 1), rgba(12, 24, 64, 1), rgba(6, 12, 32, 1), rgba(0, 0, 0, 1), black)',\n  opacity: 1,\n  zIndex: -1,\n};\n\nconst backgroundLogo: CSSProperties = {\n  position: 'relative',\n  background: `url('/images/home/lunar-bunny/background_logo.png') right bottom no-repeat`,\n  backgroundSize: 'auto',\n};\n\nconst Body = styled(CardBody)`\n  background-color: ${({ theme }) => theme.colors.dropdownDeep};\n`\n\nexport default function Pool() {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs],\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens],\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens,\n  )\n\n  const stablePairs = useLPTokensWithBalanceByAccount(account)\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances ||\n    v2Pairs?.length < liquidityTokensWithBalances.length ||\n    (v2Pairs?.length && v2Pairs.every(([pairState]) => pairState === PairState.LOADING))\n  const allV2PairsWithLiquidity = v2Pairs\n    ?.filter(([pairState, pair]) => pairState === PairState.EXISTS && Boolean(pair))\n    .map(([, pair]) => pair)\n\n  const renderBody = () => {\n    if (!account) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          {t('Connect to a wallet to view your liquidity.')}\n        </Text>\n      )\n    }\n    if (v2IsLoading) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          <Dots>{t('Loading')}</Dots>\n        </Text>\n      )\n    }\n\n    let positionCards = []\n\n    if (allV2PairsWithLiquidity?.length > 0) {\n      positionCards = allV2PairsWithLiquidity.map((v2Pair, index) => (\n        <FullPositionCard\n          key={v2Pair.liquidityToken.address}\n          pair={v2Pair}\n          mb={Boolean(stablePairs?.length) || index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\n        />\n      ))\n    }\n\n    if (stablePairs?.length > 0) {\n      positionCards = [\n        ...positionCards,\n        ...stablePairs?.map((stablePair, index) => (\n          <StableFullPositionCard\n            key={`stable-${stablePair.liquidityToken.address}`}\n            pair={stablePair}\n            mb={index < stablePairs.length - 1 ? '16px' : 0}\n          />\n        )),\n      ]\n    }\n\n    if (positionCards?.length > 0) {\n      return positionCards\n    }\n\n    return (\n      <Text color=\"textSubtle\" textAlign=\"center\">\n        {t('No liquidity found.')}\n      </Text>\n    )\n  }\n\n  return (\n    <div style={backgroundLogo}>\n    <Page>\n      <div style={gradientOverlayStyle}></div>\n      <AppBody>\n        <AppHeader title={t('Your Liquidity')} subtitle={t('Remove liquidity to receive tokens back')} />\n        <Body>\n          {renderBody()}\n          {account && !v2IsLoading && (\n            <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t(\"Don't see a pool you joined?\")}\n              </Text>\n              <Link href=\"/find\" passHref>\n                <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as=\"a\">\n                  {t('Find other LP tokens')}\n                </Button>\n              </Link>\n            </Flex>\n          )}\n        </Body>\n        <CardFooter style={{ textAlign: 'center' }}>\n          <Link href=\"/add\" passHref>\n            <Button id=\"join-pool-button\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\n              {t('Add Liquidity')}\n            </Button>\n          </Link>\n        </CardFooter>\n      </AppBody>\n    </Page>\n    </div>\n  )\n}\n","import { CHAIN_IDS } from 'utils/wagmi'\nimport Liquidity from '../views/Pool'\n\nconst LiquidityPage = () => <Liquidity />\n\nLiquidityPage.chains = CHAIN_IDS\n\nexport default LiquidityPage\n"],"names":["fromUnixTime","dirtyUnixTime","arguments","unixTime","baseTimes","castFunction","toInteger","MAX_ARRAY_LENGTH","nativeMin","Math","min","module","exports","n","iteratee","index","length","result","window","__NEXT_P","push","_templateObject","data","_tagged_template_literal","CardFooter","styled","componentId","param","theme","colors","cardBorder","space","defaultProps","p","gradientOverlayStyle","position","top","left","width","height","background","opacity","zIndex","backgroundLogo","backgroundSize","Body","CardBody","dropdownDeep","Pool","useWeb3React","account","useTranslation","t","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","useTokenBalancesWithLoadingIndicator","undefined","v2PairsBalances","fetchingV2PairBalances","stablePairs","useLPTokensWithBalanceByAccount","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","usePairs","v2IsLoading","every","PairState","allV2PairsWithLiquidity","pairState","pair","Boolean","div","style","Page","AppBody","AppHeader","title","subtitle","Text","color","textAlign","Dots","positionCards","v2Pair","FullPositionCard","mb","stablePair","StableFullPositionCard","renderBody","Flex","flexDirection","alignItems","mt","Link","href","passHref","Button","id","variant","scale","as","startIcon","AddIcon","LiquidityPage","Liquidity","chains","CHAIN_IDS"],"sourceRoot":""}